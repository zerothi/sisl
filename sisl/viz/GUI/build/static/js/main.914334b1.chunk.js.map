{"version":3,"sources":["apis/PythonApi.js","redux/actions/index.js","redux/actions/actionTypes.js","components/Navbar.js","apis/history.js","routes/Route.js","utils/hotkeys.js","components/plots/PlotCard.js","components/tabs/Tab.js","components/tabs/Tabs.js","components/plots/PlotDashboard.js","components/structures/StructureTag.js","components/controls/Controls.js","components/controls/NavigateButton.js","components/structures/PlotableTag.js","components/structures/StructurePicker.js","redux/reducers/session.js","redux/reducers/plots.js","redux/reducers/structures.js","redux/reducers/tabs.js","redux/reducers/active.js","redux/reducers/loading.js","redux/reducers/plotables.js","redux/reducers/persist.js","redux/reducers/index.js","components/plotInitializer/PlotTypePicker.js","components/plotInitializer/TabPicker.js","components/plotInitializer/StructureRow.js","components/plotInitializer/MergeMethodPicker.js","components/plotInitializer/StructuresGroup.js","components/plotInitializer/PlotInitializer.js","components/loading/LoadingChip.js","components/loading/LoadingTracker.js","components/settings/inputFields/TextInput.js","components/settings/inputFields/Switch.js","components/settings/inputFields/Dropdown.js","components/settings/inputFields/ColorPicker.js","components/settings/inputFields/RangeSlider.js","components/settings/inputFields/Range.js","components/settings/inputFields/Numeric.js","components/settings/inputFields/QueriesInput.js","components/settings/inputFields/Array.js","components/settings/InputField.js","components/settings/SettingsContainer.js","pages/PlotTweaking.js","pages/Settings.js","components/pythonMethods/Method.js","components/pythonMethods/Methods.js","pages/PlotMethods.js","pages/Plots.js","routes/index.js","redux/store/index.js","App.js","serviceWorker.js","index.js"],"names":["tabAdress","tabID","tabsAdress","plotAdress","plotID","plotsAdress","_requestToApi","adress","request","responseHandler","fetch","apiAdress","headers","then","response","json","statusCode","alert","error","plot","figure","JSON","parse","catch","console","log","_get","method","_post","_put","_delete","_updateSettings","newSettings","callback","body","stringify","settings","action","_undoSettings","_save","params","_load","getSessionSettings","sessionAdress","session","updateSessionSettings","sessionID","undoSessionSettings","saveSession","loadSession","getAvailableStructs","structsAdress","structures","getSessionTabs","tabs","addNewTab","newtabAdress","removeTab","updateTabParams","newTabParams","updateTabPlots","plotIDs","plots","setTabLayouts","layouts","getPlotOptions","plotTypesAdress","plotOptions","getPlot","getNewPlot","updatePlotSettings","undoPlotSettings","removePlot","showPlotFullScreen","callPlotShortcut","sequence","askForUpdates","justUpdated","document","dispatchEvent","CustomEvent","detail","listenForPlotUpdates","sleepTime","stopListeningPlotUpdates","listenerID","setTimeout","update","clearTimeout","undefined","this","setCurrentSession","listenForUpdates","PythonApi","updateInterval","type","addPlots","newPlots","tabsIDs","setNewStructures","newStructures","setSessionTabs","setActivePlot","activePlot","setActiveTab","tab","activeTab","setActiveStructs","structs","deactivateStruct","structID","informLoadingPlot","informLoadedPlot","setActivePage","pageName","setActivePlotables","plotables","AppNavbar","brand","alignLinks","className","href","Component","connect","dispatch","clearSession","history","createBrowserHistory","RouteWrapper","component","isPrivate","rest","to","defaultProps","GLOBAL_HOT_KEYS","SHOW_AVAIL_HOTKEYS","name","GO_TO_SETTINGS","GO_TO_DASHBOARD","SAVE_SESSION","sequences","LOAD_SESSION","TABS_HOT_KEYS","global","MOVE_TO_NEXT_TAB","MOVE_TO_PREVIOUS_TAB","NEW_TAB","TRY","PLOTS_HOT_KEYS","PLOT_CARD_HOT_KEYS","GO_TO_PLOT_EDITING","GO_TO_PLOT_METHODS","FULL_SCREEN","REMOVE_PLOT","UNDO_PLOT_SETTINGS","SETTING_GROUP_HOT_KEYS","SUBMIT_SETTINGS","PLOT_TWEAKING_HOT_KEYS","UNDO_SETTINGS","SUBMIT_ALL_SETTINGS","PlotCard","props","hotKeys","querySelectorAll","hotKeysHandlers","goToPlotEditing","goToPlotMethods","undoSettings","progressToast","toast","warn","shortcuts","id","Event","dismiss","success","active","reqParams","setPlotAsActive","togglePlotAsActive","isActivePlot","state","isLoading","addEventListener","e","setState","cou","Math","random","style","borderRadius","textAlign","color","layout","backColor","paper_bgcolor","layoutSettings","_","groupBy","reduce","map","param","key","nestedLayoutParams","unflatten","delimiter","xaxis","yaxis","hotKeysKeyMap","TESTING","Object","keys","plotShortcuts","shortcut","includes","replace","activeStyles","borderStyle","borderWidth","borderColor","onClick","ctrlKey","keyMap","handlers","allowChanges","width","height","display","flexDirection","overflow","background","paddingTop","flex","ref","plotlyRef","useResizeHandler","data","autosize","frames","onUpdate","config","responsive","paddingLeft","paddingRight","Provider","value","size","margin","data-tip","multiline","disable","showTooltips","mapDispatchToProps","Tab","updateTabs","iDeletedTab","findIndex","length","min","updateTabName","target","blur","textContent","tabName","contentEditable","onBlur","onKeyUp","keyCode","Tabs","moveThroughTabs","newTab","direction","newI","i","last","noTabsMessage","flexWrap","alignItems","marginTop","marginBottom","ResponsiveReactGridLayout","WidthProvider","Responsive","PlotDashboard","currentBreakpoint","compactType","mounted","lg","emptyDashboard","noPlotsMessage","justifyContent","fontSize","fontWeight","backgroundColor","padding","onBreakpointChange","breakpoint","onResizeStop","finalL","initL","higher","h","shouldComponentUpdate","newProps","_plotsInLayout","hasDifferentPlots","isDifferentTab","find","isEqual","onLayoutChange","onDrop","elemParams","getLayout","filter","newPlotLayout","draggableCancel","measureBeforeMount","useCSSTransforms","preventCollision","rowHeight","generateDOM","l","hotKeysHandler","pick","React","cols","md","sm","xs","xxs","x","grid_dims","y","w","setTabPlots","withHotKeys","StructureTag","struct","selected","toggleStruct","path","data-effect","split","slice","Controls","saveCurrentSession","syncWithSession","showPage","prompt","rootDir","margins","marginRight","floating","icon","Control","tooltip","ROUTES","hotKey","NavigateButton","route","PlotableTag","plotable","togglePlotable","StructurePicker","togglePlotInitializer","selectedStructs","selectedPlotables","forceShow","forceHide","selectStructs","selectPlotables","xor","plotableID","toggleStructDisplay","displayStructures","togglePlotablesDisplay","displayPlotables","toggleAlphabeticSorting","toggles","alphabeticSorting","toggleSearchByFolder","searchByFolder","toggleSelectedSorting","selectedSorting","toggleAll","onDisplay","filterStructs","onDisplaySelected","intersection","displayedStructs","displayedPlotables","searchString","forEach","object","index","isPlotable","newStructs","str","toTest","RegExp","test","newSearchString","noStructuresMessage","noMatchingStructuresMessage","structsAndPlotables","orderBy","noLayout","autocomplete","onChange","cursor","values","obj","activeStructs","activePlotables","defaultState","newState","settingKey","omit","iTab","cloneDeep","page","structsToDeactivate","Array","isArray","plotablesToDeactivate","loading","from","Date","newPlotables","persist","whitelist","reducer","persistReducer","storage","combineReducers","browser","createResponsiveStateReducer","small","medium","selectActiveStructs","selectActivePlotables","PlotTypePicker","options","placeholder","isClearable","isSearchable","isMulti","TabPicker","label","defaultValue","StructureRow","structure","groupActive","marginLeft","moveStructToActiveGroup","OPTIONS","MergeMethodPicker","StructuresGroup","initializingOptions","plotClasses","mergeMethod","activenessStyles","splitGroup","removeGroup","setGroupAsActive","transition","borderTopLeftRadius","val","onInitParamChange","PlotInitializer","onStructsUpdate","prevActiveStructs","structureGroups","markActiveGroup","newGroup","activeGroupIndex","activeGroup","cleanUnselectedFromGroups","groups","cleanGroups","group","push","groupParams","defaultTabID","addGroup","iGroup","g","splitted","updateGroupInitParams","toggleVisibility","updateInitializingOptions","afterPlot","processID","uuidv4","animation","plotClass","renderPlotable","deactivatePlotable","nothingToPlotMessage","prevProps","actions","right","paramName","borderLeftStyle","LoadingChip","getLoadingTime","loadingInit","moment","diff","format","time","now","interval","setInterval","clearInterval","info","processName","join","elapsed","LoadingTracker","loadingInfo","Text","setting","inputField","SwitchInput","paddingBottom","checked","Dropdown","ColorPicker","toggleColorPicker","displayColorPicker","tempcolor","colorPicker","position","bottom","hex","onChangeComplete","RangeSlider","Range","Number","InputField","number","Numeric","additionalProps","QueriesField","pickerID","addQuery","newQuery","queryForm","queryParam","default","changeSettingValue","iQuery","paramKey","paramValue","newValue","renderInputField","fieldLayout","String","renderQuery","query","ArrayInput","changeValue","newVal","orientationStyles","vertical","inputStyle","INPUT_FIELDS","textinput","TextInput","switch","Switch","dropdown","rangeslider","range","queries","vector","string","isSizeDefined","sizeLabel","indexOf","mediaType","substr","changeSettings","onSettingChangeType","InputComponent","tooltipParams","help","actionType","SettingsContainer","MOVE_EXPANDED_UP","moveExpanded","MOVE_EXPANDED_DOWN","newExpanded","expanded","refs","renderSettingsGroup","settingsGroup","renderSettingsGroups","groupedParams","paramGroups","paramGroup","iParamGroup","groupKey","subGrouped","itemContent","subGroups","submitSettings","header","description","left","popout","defaultActiveKey","PlotTweaking","setsCont","maxHeight","Settings","isEmpty","Method","applyMethod","renderDetails","showingDetails","source","iconRot","headerColor","transform","Methods","PlotMethods","configure","logLevel","simulateMissingKeyPressEvents","Plots","getApplicationKeyMap","setNewPlotables","hotKeysListener","plotToInitialize","currentlyShowing","displayPlotInitializer","loadingPlots","listener","MainComponent","minWidth","Routes","exact","store","createStore","rootReducer","responsiveStoreEnhancer","persistor","persistStore","getStoreAndPersistor","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.914334b1.chunk.js","sourcesContent":["\n//This class will contain all the fetches to the python API\nclass PythonApi {\n\n    constructor(){\n\n        this.apiAdress = 'http://localhost:4000'\n\n        this.listenerID = undefined\n\n    }\n\n    //ADDRESSES\n    get sessionAdress(){\n        return \"/sislGUI/session\"\n    }\n\n    get tabsAdress(){\n        return \"/sislGUI/tab\"\n    }\n\n    get newtabAdress(){\n        return this.tabsAdress + \"/new\"\n    }\n\n    tabAdress = (tabID) => {\n        return this.tabsAdress + \"/\" + tabID\n    }\n\n    get plotsAdress(){\n        return \"/sislGUI/plot\"\n    }\n\n    plotAdress = (plotID) => {\n        return this.plotsAdress + \"/\" + plotID\n    }\n\n    get plotTypesAdress(){\n        return \"/sislGUI/plotTypes\"\n    }\n\n    get structsAdress(){\n        return \"/sislGUI/structs\"\n    }\n\n    //MOST LOW LEVEL METHODS (Should not be used directly)\n    _requestToApi = (adress, request, responseHandler ) => {\n\n        fetch(this.apiAdress + adress, \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        ...request\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.statusCode >= 400){\n            alert(response.error)\n        } else {\n\n            //The plot figure comes double JSON encoded (Plotly encoding + flask encoding)\n            if (response.plot){\n\n                response = {\n                    ...response,\n                    plot: {\n                        ...response.plot,\n                        figure: JSON.parse(response.plot.figure)\n                    }\n                }\n            }\n\n            responseHandler(response)\n        }\n      })\n      .catch((error) => {\n          console.log(error)\n          //alert(\"Can not connect to the API, are you sure it is running? If so, check your API adress in settings.\")\n      })\n    }\n\n    _get = (adress, {request, responseHandler}) => {\n        this._requestToApi(adress, {...request, method: 'GET'}, responseHandler)\n    }\n\n    _post = (adress, {request, responseHandler}) => {\n        this._requestToApi(adress, {...request, method: 'POST'}, responseHandler)\n    }\n\n    _put = (adress, {request, responseHandler}) => {\n        this._requestToApi(adress, {...request, method: 'PUT'}, responseHandler)\n    }\n\n    _delete = (adress, {request, responseHandler}) => {\n        this._requestToApi(adress, {...request, method: 'DELETE'}, responseHandler)\n    }\n\n    //A BIT HIGHER LEVEL METHODS (to be used by high level methods below)\n    _updateSettings = (adress, newSettings, callback = () => {}) => {\n        this._post(adress, {request: {body: JSON.stringify({settings: newSettings, action: \"updateSettings\"})}, responseHandler: callback})\n    }\n\n    _undoSettings = (adress, callback = () => {}) => {\n        this._post(adress, {request: {body: JSON.stringify({action: \"undoSettings\"})}, responseHandler: callback})\n    }\n\n    _save = (adress, params, callback = () => {}) => {\n        this._post(adress, {request: {body: JSON.stringify({action: \"save\", ...params})}, responseHandler: callback})\n    }\n\n    _load = (adress, params, callback = () => {}) => {\n        this._post(adress, {request: {body: JSON.stringify({action: \"load\", ...params})}, responseHandler: callback})\n    }\n\n\n    //HIGH LEVEL METHODS (should be used by components)\n\n    getSessionSettings = (callback = () => {}) => {\n        this._get(this.sessionAdress, {responseHandler: (response) => callback(response.session)} )\n    }\n\n    updateSessionSettings = ( sessionID, newSettings, callback = () => {}) => {\n        this._updateSettings(this.sessionAdress, newSettings, (response) => callback(response.session))\n    }\n\n    undoSessionSettings = ( sessionID, callback = () => {}) => {\n\n        this._undoSettings(this.sessionAdress, (response) => callback(response.session))\n    }\n\n    saveSession = (params, callback = () => {}) => {\n        this._save(this.sessionAdress, params, (response) => callback(response.session, params))\n    }\n\n    loadSession = (params, callback = () => {}) => {\n        this._load(this.sessionAdress, params, (response) => callback(response.session, params))\n    }\n\n    getAvailableStructs = (callback = () => {}) => {\n\n        this._get(this.structsAdress, {responseHandler: (response) => callback(response.structures, response)} )\n        \n    }\n\n    getSessionTabs = (callback = () => {}) => {\n\n        this._get(this.tabsAdress, {responseHandler: (response) => callback(response.tabs)} )\n        \n    }\n\n    addNewTab = (callback = () => {}) => {\n\n        this._get(this.newtabAdress, {responseHandler: (response) => callback(response.tabs)} )\n        \n    }\n\n    removeTab = (tabID, callback = () => {}) => {\n\n        this._delete(this.tabAdress(tabID), {responseHandler: (response) => callback(response.tabs)} )\n        \n    }\n\n    updateTabParams = (tabID, newTabParams, callback = () => {}) => {\n\n        this._put(this.tabAdress(tabID), {request: {body: JSON.stringify(newTabParams)}, responseHandler: (response) => callback(response.tabs)} )\n        \n    }\n\n    updateTabPlots = (tabID, plotIDs, callback) => this.updateTabParams(tabID, {plots: plotIDs}, callback)\n\n    setTabLayouts = (tabID, layouts, callback) => this.updateTabParams(tabID, {layouts}, callback)\n\n    getPlotOptions = (callback = () => {}) => {\n        this._get(this.plotTypesAdress, {responseHandler: (response) => callback(response.plotOptions)} )\n    }\n\n    getPlot = (plotID, callback = () => {}) => {\n\n        this._get(this.plotAdress(plotID), {responseHandler: (response) => callback(response.plot)})\n    }\n\n    getNewPlot = (params, callback = () => {}) => {\n\n        this._post(this.plotsAdress, {request: {body: JSON.stringify(params)}, responseHandler: (response) => callback(response.plot, params)})\n    }\n\n    updatePlotSettings = ( plotID, newSettings, callback = () => {}) => {\n\n        this._updateSettings(this.plotAdress(plotID), newSettings, (response) => callback(response.plot))\n    }\n\n    undoPlotSettings = ( plotID, callback = () => {}) => {\n\n        this._undoSettings(this.plotAdress(plotID), (response) => callback(response.plot))\n    }\n\n    removePlot = (params, callback = () => {}) => {\n\n        this._delete(this.plotAdress(params.plotID), { responseHandler: (response) => callback(response.session,params)})\n    }\n\n    showPlotFullScreen = (plotID, callback = () => {}) => {\n        this._post(this.plotAdress(plotID), {request: {body: JSON.stringify({action: \"fullScreen\"})}, responseHandler: (response) => callback(response.plot)})\n    }\n\n    callPlotShortcut = (plotID, {sequence}, callback = () => { }) => {\n        this._post(this.plotAdress(plotID), { request: { body: JSON.stringify({ action: \"plotShortcut\", sequence}) }, responseHandler: (response) => callback(response.plot) })\n    }\n\n    askForUpdates = (callback = (session, justUpdated) => {document.dispatchEvent(new CustomEvent(\"sessionUpdate\", {detail: {session, justUpdated}}))}) => {\n        /*Uses the commit_updates method of the Session class */\n        this._post(this.sessionAdress, {request: {body: JSON.stringify({action: \"updatePlots\"})}, responseHandler: (response) => callback(response.session, response.justUpdated)})\n    }\n\n    listenForPlotUpdates = (sleepTime) => {\n\n        this.stopListeningPlotUpdates()\n\n        const update = () => {\n            this.askForUpdates()\n            clearTimeout(this.listenerID)\n            this.listenerID = setTimeout(update, sleepTime); // (*)\n        }\n\n        this.listenerID = setTimeout(update, sleepTime);\n    }\n\n    stopListeningPlotUpdates = () => {\n        if (this.listenerID){\n            clearTimeout(this.listenerID)\n        }\n\n        this.listenerID = undefined\n        \n    }\n\n}\n\nexport default new PythonApi();","import { \n    ADD_PLOTS,\n    REMOVE_PLOT,\n    ADD_TABS,\n    SET_STRUCTURES,\n    SET_TAB_PLOTS,\n    SET_SESSION_TABS,\n    SET_ACTIVE_PLOT,\n    SET_ACTIVE_TAB,\n    CLEAR_SESSION,\n    SET_SESSION,\n    SET_ACTIVE_STRUCTS,\n    DEACTIVATE_STRUCT,\n    START_LOADING_PLOT,\n    END_LOADING_PLOT,\n    SET_ACTIVE_PAGE,\n    DEACTIVATE_PLOTABLE,\n    SET_ACTIVE_PLOTABLES,\n    SET_PLOTABLES\n} from './actionTypes'\n\nimport PythonApi from \"../../apis/PythonApi\"\n\nexport const setCurrentSession = (session) => {\n    \n    if (session.settings.listenForUpdates){\n        PythonApi.listenForPlotUpdates(session.settings.updateInterval)\n    } else {\n        PythonApi.stopListeningPlotUpdates()\n    }\n\n    return {\n        type: SET_SESSION,\n        session\n    }\n}\n    \nexport const addPlots = (newPlots, tabsIDs) => ({\n    type: ADD_PLOTS,\n    newPlots,\n    tabsIDs\n})\n\nexport const removePlot = (plotID, tabID) => ({\n    type: REMOVE_PLOT,\n    plotID,\n    tabID\n})\n\nexport const changeSettings = (actionType, settingKey, value) => ({\n    type: actionType, //Valid action types are all of type CHANGE_<something>_SETTINGS\n    settingKey,\n    value\n})\n\nexport const addTabs = (newTabs) => ({\n    type: ADD_TABS,\n    newTabs\n})\n\nexport const setNewStructures = (newStructures) => ({\n    type: SET_STRUCTURES,\n    newStructures\n})\n\nexport const setTabPlots = (tabID, plots) => ({\n    type: SET_TAB_PLOTS,\n    tabID,\n    plots\n})\n\nexport const setSessionTabs = (tabs) => ({\n    type: SET_SESSION_TABS,\n    tabs\n})\n\nexport const setActivePlot = (plot) => ({\n    type: SET_ACTIVE_PLOT,\n    activePlot: plot\n})\n\nexport const setActiveTab = (tab) => ({\n    type: SET_ACTIVE_TAB,\n    activeTab: tab\n})\n\nexport const clearSession = () => ({\n    type: CLEAR_SESSION,\n})\n\nexport const setActiveStructs = (structs) => ({\n    type: SET_ACTIVE_STRUCTS,\n    structs: structs\n})\n\nexport const deactivateStruct = (structID) => ({\n    type: DEACTIVATE_STRUCT,\n    structID\n})\n\nexport const informLoadingPlot = (plot) => ({\n    type: START_LOADING_PLOT,\n    plot\n})\n\nexport const informLoadedPlot = (plotID) => ({\n    type: END_LOADING_PLOT,\n    plotID\n})\n\nexport const setActivePage = (pageName) => ({\n    type: SET_ACTIVE_PAGE,\n    pageName\n})\n\nexport const setNewPlotables = (newPlotables) => ({\n    type: SET_PLOTABLES,\n    newPlotables\n})\n\nexport const setActivePlotables = (plotables) => ({\n    type: SET_ACTIVE_PLOTABLES,\n    plotables\n})\n\nexport const deactivatePlotable = (plotableID) => ({\n    type: DEACTIVATE_PLOTABLE,\n    plotableID\n})\n\n\n\n","export const ADD_PLOTS = 'ADD_PLOTS'\nexport const REMOVE_PLOT = 'REMOVE_PLOT'\nexport const CHANGE_PLOT_SETTINGS = 'CHANGE_PLOT_SETTINGS'\nexport const ADD_TABS = 'ADD_TABS'\nexport const SET_STRUCTURES = 'SET_STRUCTURES'\nexport const SET_PLOTABLES = 'SET_PLOTABLES'\nexport const SET_TAB_PLOTS = 'SET_TAB_PLOTS'\nexport const SET_SESSION_TABS = 'SET_SESSION_TABS'\n//Activate\nexport const SET_ACTIVE_PLOT = 'SET_ACTIVE_PLOT'\nexport const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB'\nexport const SET_ACTIVE_STRUCTS = 'SET_ACTIVE_STRUCTS'\nexport const SET_ACTIVE_PLOTABLES = 'SET_ACTIVE_PLOTABLES'\n//Deactivate\nexport const DEACTIVATE_STRUCT = 'DEACTIVATE_STRUCT'\nexport const DEACTIVATE_PLOTABLE = 'DEACTIVATE_PLOTABLE'\nexport const SET_SESSION = 'SET_SESSION'\nexport const CHANGE_SESSION_SETTINGS = 'CHANGE_SESSION_SETTINGS'\nexport const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const START_LOADING_PLOT = 'START_LOADING_PLOT'\nexport const END_LOADING_PLOT = 'END_LOADING_PLOT'\nexport const SET_ACTIVE_PAGE = 'SET_ACTIVE_PAGE'\n\n\n","import React, { Component } from 'react'\nimport {Navbar, NavItem, Icon} from 'react-materialize';\n\n//--Redux\nimport { connect } from 'react-redux'\nimport {clearSession} from \"../redux/actions\"\n\nclass AppNavbar extends Component {\n    render() {\n        return (\n            <Navbar brand={<a />} alignLinks=\"right\" className=\"transparent z-depth-0\">\n                <NavItem className=\"blackText\" href=\"/plots\">\n                    Plots\n                </NavItem>\n                <NavItem href=\"/settings\">\n                    <Icon>settings</Icon>\n                </NavItem>\n                <NavItem href=\"/settings\">\n                    <Icon>help</Icon>\n                </NavItem>\n            </Navbar>\n            \n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    clearSession: () => dispatch(clearSession()),\n})\n\nexport default connect(null, mapDispatchToProps)(AppNavbar);\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n\n  /**\n   * Redirect user to SignIn page if he tries to access a private route\n   * without authentication.\n   */\n  if (isPrivate && !signed) {\n    return <Redirect to=\"/\" />;\n  }\n\n  /**\n   * Redirect user to Main page if he tries to access a non private route\n   * (SignIn or SignUp) after being authenticated.\n   */\n  if (!isPrivate && signed) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  /**\n   * If not included on both previous cases, redirect user to the desired route.\n   */\n  return <Route {...rest} component={Component} />;\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};\n","import _ from 'lodash'\n\nexport const GLOBAL_HOT_KEYS = {\n\n    //HELP\n    SHOW_AVAIL_HOTKEYS:{\n        name: \"Show available hotkeys\",\n        sequence: \"shift+?\"\n    },\n\n    //NAVIGATION\n    GO_TO_SETTINGS: {\n        name: \"Go to settings\",\n        sequence: \"shift+s\",\n    },\n    GO_TO_DASHBOARD: {\n        name: \"Go to the plot's dashboard\",\n        sequence: \"shift+d\",\n    },\n\n    //SESSION\n    SAVE_SESSION: {\n        name: \"Save session\",\n        sequences: [\"ctrl+shift+s\", \"ctrl+alt+s\"]\n    },\n    LOAD_SESSION: {\n        name: \"Load session\",\n        sequences: [\"ctrl+shift+l\", \"ctrl+alt+l\"]\n    }\n\n}\n\nexport const ADDITIONAL_GLOBAL_HOT_KEYS = {\n    settings: {\n\n    },\n    plots:{\n        \n\n    }\n}\n\nexport const SETTINGS_HOT_KEYS = {\n\n}\n\nexport const TABS_HOT_KEYS = {\n    global: {\n        // TAB NAVIGATION\n        MOVE_TO_NEXT_TAB: {\n            name: \"Move to next tab\",\n            sequence: \"shift+t+right\",\n        },\n        MOVE_TO_PREVIOUS_TAB: {\n            name: \"Move to previous tab\",\n            sequence: \"shift+t+left\",\n        },\n        NEW_TAB: {\n            name: \"New tab\",\n            sequence: \"shift+t\",\n            action: \"keyup\"\n        },\n        TRY: \"shift+t+r\"\n    }\n}\n\nexport const PLOTS_HOT_KEYS = {\n    global: {\n        // TAB NAVIGATION\n        MOVE_TO_NEXT_TAB: {\n            name: \"Move to next tab\",\n            sequence: \"shift+right\",\n        },\n        MOVE_TO_PREVIOUS_TAB: {\n            name: \"Move to previous tab\",\n            sequence: \"shift+left\",\n        },\n    }\n}\n\nexport const PLOT_CARD_HOT_KEYS = {\n\n    GO_TO_PLOT_EDITING: {\n        name: \"Edit current plot\",\n        sequence: \"e\"\n    },\n    GO_TO_PLOT_METHODS: {\n        name: \"Go to current plot methods\",\n        sequence: \"m\"\n    },\n    FULL_SCREEN: {\n        name: \"See current plot in full screen in a different browser's tab\",\n        sequence: \"f\"\n    },\n    REMOVE_PLOT: {\n        name: \"Remove current plot\",\n        sequences: [\"del\",\"backspace\"]\n    },\n    UNDO_PLOT_SETTINGS: {\n        name: \"Undo current plot settings\",\n        sequence: \"ctrl+z\"\n    },\n\n}\n\nexport const STRUCTURE_PICKER_HOT_KEYS = {\n\n}\n\nexport const SETTING_CONTAINER_HOT_KEYS = {\n\n    MOVE_EXPANDED_UP:{\n        name: \"Expand the previous settings group\",\n        sequence: \"up\"\n    },\n    MOVE_EXPANDED_DOWN:{\n        name: \"Expand the next settings group\",\n        sequence: \"down\"\n    }\n\n}\n\nexport const SETTING_GROUP_HOT_KEYS = {\n\n    SUBMIT_SETTINGS:{\n        name: \"Submit this group's settings\",\n        sequence: \"shift+enter\"\n    },\n    \n}\n\nexport const PLOT_TWEAKING_HOT_KEYS = {\n    global:{\n        UNDO_SETTINGS: {\n            name:\"Undo settings\",\n            sequence: \"ctrl+z\"\n        },\n\n        SUBMIT_ALL_SETTINGS: {\n            name: \"Submit all settings\",\n            sequence: \"shift+enter\"\n        }\n    }\n}","import React, { Component } from 'react'\nimport Plot from 'react-plotly.js';\nimport { Card, Row, Icon } from 'react-materialize';\nimport { AiOutlineEdit, AiOutlineDelete, AiOutlineExport, AiOutlineFullscreen } from 'react-icons/ai'\nimport { FaHammer } from 'react-icons/fa'\nimport { IconContext } from 'react-icons'\n\nimport { CircleLoader} from 'react-spinners';\nimport ReactTooltip from \"react-tooltip\"\n\nimport _ from \"lodash\"\nimport {unflatten} from \"flat\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setActivePlot, removePlot, setSessionTabs, setActivePage, addPlots} from \"../../redux/actions\"\nimport PythonApi from '../../apis/PythonApi';\nimport { HotKeys } from 'react-hotkeys';\nimport { PLOT_CARD_HOT_KEYS } from '../../utils/hotkeys';\nimport { toast } from 'react-toastify';\n\nclass PlotCard extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isLoading: false,\n        }\n\n    }\n\n    hotKeys = () => document.querySelectorAll(\".plotCardHotKeys\")\n\n    hotKeysHandlers = {\n        GO_TO_PLOT_EDITING: () => this.goToPlotEditing(),\n        GO_TO_PLOT_METHODS: () => this.goToPlotMethods(),\n        FULL_SCREEN: () => this.showPlotFullScreen(),\n        UNDO_PLOT_SETTINGS: () => this.undoSettings(),\n        REMOVE_PLOT: () => this.removePlot(),\n    }\n\n    callPlotShortcut = (sequence) => {\n        const progressToast = toast.warn(\"Applying \" + this.props.plot.shortcuts[sequence].name + \" shortcut\")\n        PythonApi.callPlotShortcut(this.props.plot.id, {sequence}, (plot) => {\n            this.props.addPlots({ [plot.id]: plot })\n            document.dispatchEvent(new Event(\"newPlot\"))\n            toast.dismiss(progressToast)\n            toast.success(this.props.plot.shortcuts[sequence].name + \" shortcut applied\")\n        })\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoPlotSettings(this.props.plot.id, (plot) => {\n            this.props.addPlots({[plot.id]: plot})\n            document.dispatchEvent(new Event(\"newPlot\"))\n            toast.success(\"Rolled back settings\")\n        })\n    }\n\n    componentDidMount(){\n        document.addEventListener(\"plotResize\", (e) => {\n            \n            if (e.detail.id == this.props.plot.id || e.detail.id == \"all\"){\n                this.setState({cou: Math.random()})          \n            }\n            \n        })\n    }\n\n    removePlot = () => {\n        PythonApi.removePlot({ plotID: this.props.plot.id, tabID: this.props.active.tab}, (session, reqParams) => {\n            this.props.setSessionTabs(session.tabs)\n            this.props.removePlot(reqParams.plotID)\n        })\n        \n    }\n\n    goToPlotEditing = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotTweaking\")\n    }\n\n    goToPlotMethods = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotMethods\")\n    }\n\n    setPlotAsActive = () => {\n        this.props.setActivePlot(this.props.plot)\n    }\n\n    togglePlotAsActive = () => {\n        if (this.isActivePlot){\n            this.props.setActivePlot(undefined)\n        } else {\n            this.setPlotAsActive()\n        }\n    }\n\n    get isActivePlot(){\n        return this.props.active.plot && this.props.plot.id == this.props.active.plot.id\n    }\n\n    showPlotFullScreen = () => {\n        PythonApi.showPlotFullScreen(this.props.plot.id)\n    }\n\n    render() {\n\n        if (this.state.isLoading || !this.props.plot) {\n            return (\n                <Card \n                    className=\"plotcard\"\n                    style={{borderRadius: 15}}>\n                    <Row style={{textAlign: \"center\"}}>\n                        <CircleLoader color=\"#36D7B7\"/>\n                    </Row>\n                    <div>We are working hard to load your plot.</div>\n                </Card>\n            )\n        }\n\n        let layout = this.props.plot.figure.layout;\n        let backColor = this.props.plot.settings.paper_bgcolor || \"white\"\n\n        //If this is the active plot, we are going to overwrite the layout with the settings (so that user is able to see a preview)\n        if (this.props.active.plot && this.props.active.plot.id == this.props.plot.id){\n\n            backColor = this.props.active.plot.settings.paper_bgcolor || \"white\"\n\n            // let layoutSubGroups = _.groupBy( _.groupBy(this.props.active.plot.params, \"group\")[\"layout\"] , \"subGroup\")\n\n            // layout = {\n            //     ...layout,\n            //     ...layoutSubGroups[\"undefined\"].reduce((map, param) => {map[param.key] = this.props.active.plot.settings[param.key]; return map}, {} ),\n            //     \"xaxis\": {\n            //         ...layout.xaxis,\n            //         ...layoutSubGroups[\"xaxis\"].reduce((map, param) => {map[param.key.split(\"_\").pop()] = this.props.active.plot.settings[param.key]; return map}, {}),\n            //     },\n            //     \"yaxis\": {\n            //         ...layout.yaxis,\n            //         ...layoutSubGroups[\"yaxis\"].reduce((map, param) => {map[param.key.split(\"_\").pop()] = this.props.active.plot.settings[param.key]; return map}, {} ),\n            //     }\n\n            // }\n\n            let layoutParams = _.groupBy(this.props.active.plot.params, \"group\")[\"layout\"]\n\n            let layoutSettings = layoutParams.reduce((map,param) => {map[param.key] = this.props.active.plot.settings[param.key]; return map},{})\n\n            let nestedLayoutParams = unflatten( layoutSettings, {delimiter: \"_\"})\n\n\n            layout = {\n                ...layout,\n                ...layoutSettings,\n                \"xaxis\": {\n                    ...layout.xaxis,\n                    ...nestedLayoutParams.xaxis\n                },\n                \"yaxis\": {\n                    ...layout.yaxis,\n                    ...nestedLayoutParams.yaxis\n                }\n\n            }\n            \n        }\n\n        const hotKeysKeyMap = {\n            ...PLOT_CARD_HOT_KEYS,\n            TESTING: \"shift+r\",\n            ...Object.keys(this.props.plot.shortcuts).reduce((plotShortcuts, sequence) => {\n                let shortcut = this.props.plot.shortcuts[sequence]\n                if ([\"ctrl+z\", \"ctrl+alt+l\"].includes(sequence)) return plotShortcuts\n                    plotShortcuts[shortcut.name.replace(/ /g, \"_\")] = {\n                    sequence: sequence,\n                    ...shortcut\n                }\n                return plotShortcuts\n            }, {})\n        }\n\n        const hotKeysHandlers = {\n            ...this.hotKeysHandlers,\n            TESTING: () => console.warn(\"YEEEY\"),\n            ...Object.keys(this.props.plot.shortcuts).reduce((plotShortcuts, sequence) => {\n                let shortcut = this.props.plot.shortcuts[sequence]\n                if ([\"ctrl+z\", \"ctrl+alt+l\"].includes(sequence)) return plotShortcuts\n                plotShortcuts[shortcut.name.replace(/ /g, \"_\")] = () => this.callPlotShortcut(sequence)\n                return plotShortcuts\n            }, {})\n        }\n\n        const activeStyles = this.isActivePlot ? {\n            borderStyle: \"solid\",\n            borderWidth: \"2px\",\n            borderColor: \"black\"\n        } : {}\n\n        return <HotKeys\n                 className=\"plotCardHotKeys\"\n                 onClick={(e) => {if (e.ctrlKey){this.togglePlotAsActive()}}}\n                 keyMap={hotKeysKeyMap} handlers={hotKeysHandlers} allowChanges={true}\n                 style={ {width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"column\", borderRadius: 3, overflow:\"hidden\", background: backColor, paddingTop: 5, ...activeStyles, ...this.props.style}}>\n                <div style={{flex:1}}>\n                    <Plot\n                        ref={plotlyRef => {\n                            this.plotlyRef = plotlyRef;\n                        }}\n                        useResizeHandler\n                        style={{ width: \"100%\", height: \"100%\"}}\n                        data={this.props.plot.figure.data}\n                        layout={{autosize: true, ...layout}}\n                        frames={this.props.plot.figure.frames}\n                        onClick={(data) => {}}\n                        onUpdate={(figure) => {}}\n                        config={{responsive: true}}\n                    />\n                </div>\n                \n            <div style={{display: \"flex\", paddingLeft: 10, paddingRight: 20}} className=\"card-action\">\n                <IconContext.Provider value={{size: 25, style:{margin: 5}}}>\n                    <div style={{flex:1, textAlign: \"left\"}}>\n                        <a data-tip=\"Full screen (f)\" href=\"#\" onClick={this.showPlotFullScreen}><AiOutlineFullscreen/></a> \n                    </div>\n\n                    <div>\n                        <a\n                            data-tip=\"Methods (m)\"\n                            href=\"#\"\n                            onClick={this.goToPlotMethods}><FaHammer/></a>\n                        <a\n                            data-tip=\"Edit (e)\"\n                            href=\"#\"\n                            onClick={this.goToPlotEditing}><AiOutlineEdit/></a>\n                        <a data-tip=\"Export data\" href=\"#\"><AiOutlineExport/></a>\n                        <a data-tip=\"Remove (supr)\" href=\"#\" onClick={this.removePlot}><AiOutlineDelete color=\"red\"/></a>\n                    </div> \n                </IconContext.Provider>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>\n            </div>  \n        </HotKeys>\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    active: state.active,\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setSessionTabs,\n    setActivePlot,\n    removePlot,\n    setActivePage,\n    addPlots\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotCard);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport PythonApi from '../../apis/PythonApi'\nimport { setActiveTab } from '../../redux/actions'\n\nimport {Icon} from \"react-materialize\"\n\nimport _ from \"lodash\"\n\nclass Tab extends Component {\n\n    updateTabs = (tabs) => {\n        document.dispatchEvent(new CustomEvent(\"updateTabs\", {detail: {tabs: tabs}}))\n    }\n\n    updateTabParams = (tabID, newTabParams) => {\n\n        PythonApi.updateTabParams(tabID, newTabParams, (tabs) => {\n            this.updateTabs(tabs)\n        })\n    }\n\n    removeTab = (tabID) => {\n\n        let iDeletedTab = _.findIndex(this.props.tabs, [\"id\", tabID])\n\n        PythonApi.removeTab(tabID, (tabs) => {\n            this.props.setActiveTab(tabs.length > 0 ? tabs[Math.min(tabs.length - 1, iDeletedTab)].id : undefined)\n            this.updateTabs(tabs)\n        })\n\n    }\n\n    updateTabName = (e) => {e.target.blur(); this.updateTabParams(e.target.id, {name: e.target.textContent})}\n\n    render() {\n\n        let {id: tabID, name: tabName} = this.props.tab\n\n        let active = tabID == this.props.active.tab\n\n        return (\n            <div\n                    key={tabID}\n                    className={active ? \"active plotTab\" : \"plotTab\"}\n                    onClick={active ? null : ()=> this.props.setActiveTab(tabID)}>\n                <div\n                    id={tabID}\n                    contentEditable={active}\n                    \n                    onBlur={this.updateTabName}\n                    onKeyUp={(e) => {if (e.keyCode === 13) this.updateTabName(e)}}\n                    >{tabName}</div>\n                {active ? <div className=\"removeTabBut\" onClick={() => this.removeTab(tabID)}><Icon>remove_circle</Icon></div> : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    active: state.active,\n    tabs: state.tabs,\n})\n\nconst mapDispatchToProps = {\n    setActiveTab\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tab);\n","import React, { Component } from 'react'\nimport Tab from './Tab'\nimport { setActiveTab } from '../../redux/actions'\nimport PythonApi from '../../apis/PythonApi'\nimport { connect } from 'react-redux'\n\nimport {Icon} from \"react-materialize\"\n\nimport _ from \"lodash\"\nimport { GlobalHotKeys, HotKeys } from 'react-hotkeys'\nimport { TABS_HOT_KEYS } from '../../utils/hotkeys'\n\nexport class Tabs extends Component {\n\n    hotKeysHandlers = {\n        MOVE_TO_NEXT_TAB: () => this.moveThroughTabs(\"right\"),\n        MOVE_TO_PREVIOUS_TAB: () => this.moveThroughTabs(\"left\"),\n        NEW_TAB: () => this.newTab(),\n        TRY: () => console.warn(\"YES\")\n    }\n    \n    moveThroughTabs = (direction) => {\n\n        const tabs = this.props.tabs\n        const i = _.findIndex(tabs, [\"id\", this.props.active.tab])\n\n        var newI;\n        if (direction == \"left\"){\n            newI = i != 0 ? i-1 : tabs.length -1\n        } else if (direction == \"right\"){\n            newI = i != tabs.length - 1 ? i+1 : 0 \n        }\n\n        this.props.setActiveTab(tabs[newI].id)\n    }\n\n    updateTabs = (tabs) => {\n        document.dispatchEvent(new CustomEvent(\"updateTabs\", {detail: {tabs: tabs}}))\n    }\n\n    newTab = () => {\n\n        PythonApi.addNewTab( (tabs) => {\n            this.updateTabs(tabs)\n            this.props.setActiveTab(_.last(tabs).id)\n        })\n        \n    }\n\n    noTabsMessage = () => {\n        return <div style={{paddingLeft: 20}}>\n            <span style={{color: \"darkred\"}}>You don't seem to have any tab. </span>\n            That's wierd, but if that's what you want...\n        </div>\n    }\n\n    render() {\n\n        return (\n            <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems:\"center\", marginTop: 10, marginBottom: 5}}>\n                <GlobalHotKeys keyMap={TABS_HOT_KEYS.global} handlers={this.hotKeysHandlers}/>\n                <div onClick={this.newTab} data-tip=\"New tab\">\n                    <Icon\n                        className=\"newTabIcon small blue-text text-darken-3\"\n                        style={{paddingRight: 0}}>create_new_folder</Icon>\n                </div>\n                {this.props.tabs.length == 0 ? \n                    this.noTabsMessage()\n                    :\n                    this.props.tabs.map( tab => <Tab tab={tab}/>)\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.tabs,\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n    setActiveTab\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabs);\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\"\n\n//--Components\nimport PlotCard from \"./PlotCard\";\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setTabPlots, setSessionTabs} from \"../../redux/actions\"\nimport PythonApi from \"../../apis/PythonApi\";\n\nimport { Responsive, WidthProvider } from 'react-grid-layout';\n\nimport 'react-grid-layout/css/styles.css'\nimport'react-resizable/css/styles.css'\n\nimport { HotKeys, withHotKeys, GlobalHotKeys } from \"react-hotkeys\";\nimport { PLOTS_HOT_KEYS, ADDITIONAL_GLOBAL_HOT_KEYS } from \"../../utils/hotkeys\";\nimport Tabs from \"../tabs/Tabs\";\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nclass PlotDashboard extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this._plotsInLayout = false\n\n  }\n\n  static defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function() {},\n    cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n  };\n\n  state = {\n    currentBreakpoint: \"lg\",\n    compactType: \"vertical\",\n    mounted: false,\n    layouts: { lg: [] }\n  };\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n  }\n\n  emptyDashboard = () => {\n    return null\n  }\n\n  noTabsMessage = () => {\n    return null\n  }\n\n  noPlotsMessage = () => {\n    //className=\"attentionLeft\"\n    return <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\"}}>\n      <div style={{fontSize: \"5em\", fontWeight: \"bold\"}}>This is the plots dashboard.</div>\n      <div style={{fontSize: \"1.2em\"}}>We would like to display your plots here, but currently you don't seem to have any</div>\n      <div style={{backgroundColor: \"white\",  fontSize: \"2em\", margin: 20, padding: 20, paddingLeft: 50, paddingRight: 50, borderRadius: 70}}> You can try to create one by clicking on your structures</div>\n    </div>\n  }\n\n  static newPlotLayout = (plot, layouts) => {\n    return {\n      x: plot.grid_dims[0]*(layouts.lg.length),\n      y: 2,\n      w: plot.grid_dims[0],\n      h: plot.grid_dims[1],\n      i: plot.id,\n    };\n  }\n\n  generateDOM(layouts, plots) {\n    return _.map(layouts, function(l, i) {\n      return <div key={plots[i].id}><PlotCard plot={plots[i]}/></div>\n    });\n  }\n\n  onBreakpointChange = (breakpoint) => {\n    document.dispatchEvent(new CustomEvent(\"plotResize\", {detail: {id: \"all\"}}))\n  };\n\n  onResizeStop = (layouts, finalL, initL) => {\n    document.dispatchEvent(new CustomEvent(\"plotResize\", {detail: {id: initL.i, higher: finalL.h > initL.h}}))\n  }\n\n  shouldComponentUpdate = (newProps) => {\n\n    if( !this._plotsInLayout ) return true\n\n    const isDifferentTab = newProps.active.tab != this.props.active.tab\n    let hasDifferentPlots;\n    if (!isDifferentTab){\n      let tab = _.find(this.props.tabs, [\"id\", this.props.active.tab])\n      let newTab = _.find(newProps.tabs, [\"id\", newProps.active.tab])\n\n      if (!tab || !newTab) return true\n      else if (!tab.layouts || !newTab.layouts) return true\n      else if (_.isEqual(tab.layouts, newTab.layouts)) return true\n      else if (! _.isEqual(this._plotsInLayout, newTab.plots)) return true\n\n      hasDifferentPlots = ! _.isEqual(tab.plots, newTab.plots)\n    }\n    \n    return isDifferentTab || hasDifferentPlots\n  }\n\n  onLayoutChange = (layout, layouts) => {\n    this.props.onLayoutChange(layout, layouts);\n\n    PythonApi.setTabLayouts(this.props.active.tab, layouts, (tabs) => {\n      this.props.setSessionTabs(tabs)\n    })\n  };\n\n  onDrop = (elemParams) => {\n    alert(`Element parameters: ${JSON.stringify(elemParams)}`);\n  };\n\n  getLayout = () => {\n    if (!this.props.active.tab ) return this.noTabsMessage()\n\n    let tab = _.find(this.props.tabs, [\"id\", this.props.active.tab])\n\n    if (!tab) return this.noTabsMessage()\n    if (tab.plots.length == 0) return this.noPlotsMessage()\n    \n    let plots = tab.plots.map(plotID => this.props.plots[plotID])\n\n    plots = plots.filter( plot => plot)\n\n    // Wait for all plots to draw a first layout\n    // THIS IS KEY in order to avoid the layout going crazy\n    if (plots.length != tab.plots.length) return null\n\n    let layouts = {lg: tab.layouts.lg }\n\n    if (layouts.lg.length != plots.length){\n      layouts.lg = plots.map(plot => {\n        let layout = _.find(layouts.lg, [\"i\", plot.id])\n        return layout || PlotDashboard.newPlotLayout(plot, layouts)\n      })\n    }\n\n    this._plotsInLayout = tab.plots\n\n    console.warn(plots)\n\n    return (\n      <ResponsiveReactGridLayout\n        {...this.props}\n        layouts={layouts}\n        onBreakpointChange={this.onBreakpointChange}\n        onLayoutChange={this.onLayoutChange}\n        onDrop={this.onDrop}\n        onResizeStop={this.onResizeStop}\n        draggableCancel=\".draglayer\" //Avoids plot being dragged when zooming and other drag actions\n        // WidthProvider option\n        measureBeforeMount={false}\n        // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n        // and set `measureBeforeMount={true}`.\n        useCSSTransforms={this.state.mounted}\n        compactType={this.state.compactType}\n        preventCollision={!this.state.compactType}\n        rowHeight={10}\n      >\n        {this.generateDOM(layouts.lg, plots)}\n      </ResponsiveReactGridLayout>\n    )\n\n  }\n\n  render() {\n\n    // We will reuse some of the tabs hot keys handlers\n    const tabs = <Tabs/>\n    const handlers = {...this.hotKeysHandler, ..._.pick(tabs.hotKeysHandler, [\"MOVE_TO_NEXT_TAB\", \"MOVE_TO_PREVIOUS_TAB\"]) }\n\n    // eslint-disable-next-line no-unused-vars\n    return (\n      <div style={{padding: 10, ...this.props.style}} className=\"scrollView\">\n        <GlobalHotKeys keyMap={PLOTS_HOT_KEYS.global} handlers={handlers}/>\n        {this.getLayout()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  plots: state.plots,\n  structures: state.structures,\n  tabs: state.tabs,\n  active: state.active,\n  session: state.session\n})\n\nconst mapDispatchToProps = {\n  setSessionTabs,\n  setTabPlots,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withHotKeys(PlotDashboard));","import React, { Component } from 'react'\n\nexport default class StructureTag extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {}\n    }\n\n    render() {\n\n        return (\n            <div \n                className={\"structTag \" + (this.props.struct.selected ? \"active\" : \"\")} \n                onClick={this.props.toggleStruct}\n                data-tip={this.props.struct.path}\n                data-effect=\"solid\">\n                <div>{this.props.struct.name.replace(\".fdf\", \"\")}</div>\n                <div style={{fontSize: \"0.7em\", color: \"gray\"}}>{\".../\" + this.props.struct.path.split(\"/\").slice(-2,-1)[0]}</div>\n            </div>\n        )\n    }\n}\n\n\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport {Button, Icon} from 'react-materialize'\nimport { setActivePage } from '../../redux/actions'\n\nimport PythonApi from '../../apis/PythonApi'\nimport NavigateButton from './NavigateButton'\n\nimport { toast } from 'react-toastify'\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { GLOBAL_HOT_KEYS } from '../../utils/hotkeys'\n\nclass Controls extends Component {\n\n    hotKeysHandler = {\n        SAVE_SESSION: () => this.saveCurrentSession(),\n        LOAD_SESSION: () => this.loadSession()\n    }\n\n    syncWithSession = (session) => {\n        document.dispatchEvent(new CustomEvent(\"syncWithSession\", {detail: {session}}))\n    }\n\n    showPage = (pageName) => {\n        this.props.setActivePage(pageName)\n    }\n\n    saveCurrentSession = () => {\n        let path = prompt(\"Please provide the path to save the session.\\n\\nRoot directory:\\n\" + this.props.session.settings.rootDir)\n        if (!path) return \n\n        PythonApi.saveSession({path}, () => {\n            toast.success(\"Session saved\", \"success\")\n        })\n    }\n\n    loadSession = () => {\n\n        let path = prompt(\"Please provide the path of the saved session.\\n\\nRoot directory:\\n\" + this.props.session.settings.rootDir)\n        if (!path) return\n\n        PythonApi.loadSession({path}, (session) => {\n            console.log(\"Session loaded\", session)\n            this.syncWithSession(session)\n        })\n    }\n\n    render() {\n\n        const margins = { marginRight: 20}\n\n        return (\n            <div style={{display: \"flex\", justifyContent: \"flex-end\", marginBottom: 10, marginTop: 10}}>\n                <GlobalHotKeys keyMap={GLOBAL_HOT_KEYS} handlers={this.hotKeysHandler}/>\n                <NavigateButton to=\"plots\" style={margins}/>\n                <NavigateButton to=\"settings\" style={margins}/>\n                <Button\n                    data-tip=\"Save session\"\n                    style={margins}\n                    floating\n                    icon={<Icon>save</Icon>} \n                    onClick={this.saveCurrentSession}\n                    className=\"yellow darken-1\" />\n                <Button\n                    data-tip=\"Load session\"\n                    style={margins}\n                    floating\n                    icon={<Icon>open_in_new</Icon>}\n                    onClick={this.loadSession}\n                    className=\"green\" />\n            </div>\n        )\n    }\n}\n\nexport class Control extends Component {\n\n    render(){\n        \n        return <Button\n                    data-tip={this.props.tooltip}\n                    style={this.props.style}\n                    floating\n                    icon={<Icon>{this.props.icon}</Icon>}\n                    onClick={this.props.onClick}\n                    className={this.props.className} />\n    }\n}\n\nconst mapStateToProps = state => ({\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setActivePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);\n","import React, { Component } from 'react'\nimport { Control } from './Controls'\nimport { connect } from 'react-redux'\nimport { setActivePage } from '../../redux/actions'\n\nconst ROUTES = {\n    settings: {\n        icon: \"settings\",\n        color: \"grey\",\n        hotKey: \"Shift + s\"\n    },\n    plots: {\n        icon: \"tv\",\n        color: \"grey\",\n        hotKey: \"Shift + d\"\n    }\n}\n\nclass NavigateButton extends Component {\n\n    showPage = () => {\n        this.props.setActivePage(this.props.to)\n    }\n\n    render() {\n\n        const route = ROUTES[this.props.to]\n\n        return <Control \n            icon={route.icon} \n            className={route.color}\n            tooltip={\"Go to \" + this.props.to + \" (\" + route.hotKey + \")\"}\n            onClick={this.showPage}\n            {...this.props}/>\n    }\n}\n\nconst mapDispatchToProps = {\n    setActivePage\n}\n\nexport default connect(null, mapDispatchToProps)(NavigateButton);\n","import React, { Component } from 'react'\n\nexport default class PlotableTag extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {}\n    }\n\n    render() {\n\n        return (\n            <div \n                className={\"plotableTag \" + (this.props.plotable.selected ? \"active\" : \"\")} \n                onClick={this.props.togglePlotable}\n                data-tip={this.props.plotable.path}\n                data-effect=\"solid\">\n                <div>{this.props.plotable.name}</div>\n                <div style={{fontSize: \"0.7em\", color: \"gray\"}}>{\".../\" + this.props.plotable.path.split(\"/\").slice(-2,-1)[0]}</div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport StructureTag from './StructureTag'\nimport _ from \"lodash\"\nimport { setActiveStructs, setActivePlotables } from '../../redux/actions'\n\nimport {Icon, TextInput} from 'react-materialize'\n\nimport { connect } from 'react-redux'\nimport NavigateButton from '../controls/NavigateButton'\nimport PlotableTag from './PlotableTag'\n\nfunction wildTest(wildcard, str) {\n    const re = new RegExp(`^${wildcard.replace(/\\*/g,'.*').replace(/\\?/g,'.')}$`,'i');\n    return re.test(str); // remove last 'i' above to have case sensitive\n}\n\nexport class StructurePicker extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            searchString: \"\",\n            alphabeticSorting: false,\n            selectedSorting: false,\n            searchByFolder: false,\n            displayStructures: true,\n            displayPlotables: false,\n        }\n\n    }\n\n    togglePlotInitializer = (selectedStructs, selectedPlotables) => {\n\n        let forceShow, forceHide;\n\n        console.warn([...selectedStructs, ...selectedPlotables])\n\n        if ([...selectedStructs, ...selectedPlotables].length != 0){\n            forceShow = true\n        } else {\n            forceHide = true\n        }\n\n        document.dispatchEvent(new CustomEvent(\"togglePlotInitializer\", {detail: {forceShow, forceHide}}))\n\n    }\n\n    selectStructs = (structs) => {\n        this.props.setActiveStructs(structs)\n        this.togglePlotInitializer(structs, this.selectedPlotables)\n    }\n\n    get selectedStructs(){\n        return this.props.activeStructs || []\n    }\n\n    selectPlotables = (plotables) => {\n        this.props.setActivePlotables(plotables)\n        this.togglePlotInitializer(this.selectedStructs, plotables)\n    }\n\n    get selectedPlotables(){\n        return this.props.activePlotables || []\n    }\n\n    toggleStruct = ({id: structID}) => {\n        \n        //this.setState({selectedStructures: _.xor(this.selectedStructs, [structID])})\n\n        this.selectStructs(_.xor(this.selectedStructs, [structID]))\n      \n    }\n\n    togglePlotable = ({id: plotableID}) => {\n        \n        //this.setState({selectedPlotableures: _.xor(this.selectedPlotables, [PlotableID])})\n\n        this.selectPlotables(_.xor(this.selectedPlotables, [plotableID]))\n      \n    }\n\n    toggleStructDisplay = () => {\n        this.setState({displayStructures: !this.state.displayStructures})\n    }\n\n    togglePlotablesDisplay = () => {\n        this.setState({displayPlotables: !this.state.displayPlotables})\n    }\n\n    toggleAlphabeticSorting = () => {\n\n        const toggles = { [false]: \"asc\", asc: \"desc\", desc: false}\n        this.setState({alphabeticSorting: toggles[this.state.alphabeticSorting]})\n    }\n\n    toggleSearchByFolder = () => {\n\n        this.setState({searchByFolder: !this.state.searchByFolder})\n    }\n\n    toggleSelectedSorting = () => {\n        this.setState({selectedSorting: !this.state.selectedSorting})\n    }\n\n    toggleAll = () => {\n\n        const onDisplay = Object.keys(this.filterStructs())\n\n        const onDisplaySelected = _.intersection([...this.selectedStructs, ...this.selectedPlotables], onDisplay).length == 0\n\n        const displayedStructs = _.intersection(Object.keys(this.props.structures), onDisplay)\n        const displayedPlotables = _.intersection(Object.keys(this.props.plotables), onDisplay)\n\n        this.selectStructs(onDisplaySelected ? \n            [...displayedStructs, ...this.selectedStructs] \n                : \n            this.selectedStructs.filter( structID => !displayedStructs.includes(structID) )\n        )\n\n        this.selectPlotables(onDisplaySelected ? \n            [...displayedPlotables, ...this.selectedPlotables] \n                : \n            this.selectedPlotables.filter( plotableID => !displayedPlotables.includes(plotableID) )\n        )\n\n    }\n\n    filterStructs = (searchString) => {\n\n        searchString = searchString || this.state.searchString\n\n        searchString = searchString.includes(\"*\") || searchString.includes(\"?\") ? searchString : \"*\"+searchString+\"*\"\n\n        let structs = {}\n\n        let toggles = [this.state.displayStructures, this.state.displayPlotables]\n        let objs = [this.props.structures, this.props.plotables]\n\n        //Filter both structures and plotables\n        objs.forEach( (object, index) => {\n\n            if (!toggles[index]) return\n\n            const isPlotable = index == 1\n\n            let newStructs = Object.keys(object).reduce( (structs, structID) => {\n\n                const struct = object[structID]\n    \n                const toTest = this.state.searchByFolder ? struct.path.split(\"/\").slice(-2,-1)[0] : struct.name.replace(\".fdf\", \"\")\n    \n                if (wildTest(searchString, toTest)){\n    \n                    structs[structID] = { \n                        ...struct,\n                        selected: [...this.selectedStructs, ...this.selectedPlotables].includes(structID),\n                        isPlotable,\n                        id: structID,\n                    }\n                }\n    \n                return structs\n            }, {})\n\n            structs = {...structs, ...newStructs}\n\n        })\n\n        return structs\n\n    }\n\n    newSearchString = (searchString) => {\n\n        this.setState({searchString: searchString})\n    }\n\n    noStructuresMessage = () => {\n\n        return <div>\n            <div style={{color: \"darkred\"}}>No structures in the search scope right now.</div>\n            <div>Try to change file system settings or initialize the GUI from a different directory</div>\n            <NavigateButton to=\"settings\" style={{marginTop: 10}}/>\n        </div>\n    }\n\n    noMatchingStructuresMessage = () => {\n        return <div>\n            <div style={{color: \"darkred\"}}>No structure that matches your search.</div>\n            <div>Try to change file system settings or initialize the GUI from a different directory</div>\n            <NavigateButton to=\"settings\" style={{marginTop: 10}}/>\n        </div>\n    }\n\n    render() {\n\n        let structsAndPlotables = this.filterStructs()\n\n        if (this.state.alphabeticSorting){\n            structsAndPlotables = _.orderBy(structsAndPlotables, \"name\", this.state.alphabeticSorting)\n        }\n        if (this.state.selectedSorting){\n            structsAndPlotables = _.orderBy(structsAndPlotables, \"selected\", \"desc\")\n        }\n        \n        return (\n            <div style={{height: \"100vh\", overflow: \"hidden\", display: \"flex\", flexDirection: \"column\"}}>\n                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\n                    <TextInput\n                        noLayout\n                        autocomplete=\"off\"\n                        style={{marginBottom:0}}\n                        value={this.state.searchString} \n                        onChange={(e) => this.newSearchString(e.target.value)}/>\n                    <div style={{width: 20}}/>\n                    <div\n                        data-tip=\"Search by folder\"\n                        className={\"structPickerToggle \" + (this.state.searchByFolder ? \"active\" : \"\")}\n                        onClick={this.toggleSearchByFolder} style={{cursor: \"pointer\"}}><Icon>folder</Icon></div>\n                </div>\n                <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: 5}}>\n                    <span\n                        data-tip=\"Show structures\"\n                        className={\"structPickerToggle \" + (this.state.displayStructures ? \"active\" : \"\")} \n                        onClick={this.toggleStructDisplay} style={{cursor: \"pointer\"}}>Struct</span>\n                    <span\n                        data-tip=\"Show plotables\"\n                        className={\"structPickerToggle \" + (this.state.displayPlotables ? \"active\" : \"\")}\n                        onClick={this.togglePlotablesDisplay} style={{cursor: \"pointer\"}}>Plotables</span>\n                </div>\n                <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: 5}}>\n                    <span \n                        className={\"structPickerToggle \" + (this.state.alphabeticSorting ? \"active\" : \"\")} \n                        onClick={this.toggleAlphabeticSorting} style={{cursor: \"pointer\"}}>A-Z</span>\n                    <span\n                        data-tip=\"Show selected first\"\n                        className={\"structPickerToggle \" + (this.state.selectedSorting ? \"active\" : \"\")}\n                        onClick={this.toggleSelectedSorting} style={{cursor: \"pointer\"}}>sel</span>\n                    <span \n                        className=\"structPickerToggle\" \n                        onClick={this.toggleAll} style={{cursor: \"pointer\"}}>All</span>\n                </div>\n\n                {Object.keys({...this.props.structures, ...this.props.plotables}).length == 0 ? \n                    this.noStructuresMessage() : Object.values(structsAndPlotables).length == 0 ? \n                        this.noMatchingStructuresMessage() : null\n                }\n\n                <div className=\"scrollView\" style={{flex:1}}>\n                    {Object.values(structsAndPlotables).map(obj => {\n                        if (obj.isPlotable) {\n                            return <PlotableTag id={obj.id} \n                                plotable={obj} \n                                togglePlotable={ () => this.togglePlotable(obj)}\n                            />\n                        } else {\n                            return <StructureTag id={obj.id} \n                                struct={obj} \n                                toggleStruct={ () => this.toggleStruct(obj)}\n                            />\n                        }\n                        \n                    })}\n                </div>  \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeStructs: state.active.structs,\n    activePlotables: state.active.plotables,\n    plotables: state.plotables,\n})\n\nconst mapDispatchToProps = {\n    setActiveStructs,\n    setActivePlotables\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StructurePicker);\n","import { CLEAR_SESSION, SET_SESSION, CHANGE_SESSION_SETTINGS} from '../actions/actionTypes'\nimport _ from \"lodash\"\n\nconst defaultState = {}\n\nconst session = (state = defaultState, action) => {\n\n    switch (action.type) {\n        case SET_SESSION:\n            console.log(\"REDUX: Setting current session...\")\n            var newState = action.session\n            console.log(newState)\n\n            return newState\n        \n        case CHANGE_SESSION_SETTINGS:\n            console.log(\"REDUX: Changing current session settings (not submitting yet)...\")\n            var newState = {\n                ...state,\n                settings: {\n                    ...state.settings,\n                    [action.settingKey]: action.value\n                }\n            }\n            console.log(newState)\n            return newState\n\n        \n        case CLEAR_SESSION:\n            return defaultState\n\n        default:\n            return state\n    }\n}\n\nexport default session","import { ADD_PLOTS, CLEAR_SESSION, REMOVE_PLOT } from '../actions/actionTypes'\nimport _ from \"lodash\"\n\nconst defaultState = {};\n\nconst plots = (state = defaultState, action) => {\n    switch (action.type) {\n        case ADD_PLOTS:\n            console.log(\"REDUX: Storing a new plot...\")\n            let newState = {\n                ...state,\n                ...action.newPlots,\n            }\n            console.log(newState)\n            return newState\n        \n        case REMOVE_PLOT:\n            return _.omit(state, [action.plotID])\n        \n        case CLEAR_SESSION:\n            return defaultState\n            \n        default:\n            return state\n    }\n}\n\nexport default plots","import { SET_STRUCTURES, CLEAR_SESSION } from '../actions/actionTypes'\n\nconst defaultState = {}\n\nconst structures = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_STRUCTURES:\n            console.log(\"REDUX: Setting the new structures...\")\n            let newState = {\n                ...action.newStructures\n            }\n            console.log(newState)\n            return newState\n\n        default:\n            return state\n    }\n}\n\nexport default structures","import { CLEAR_SESSION, SET_SESSION_TABS, SET_TAB_PLOTS} from '../actions/actionTypes'\nimport _ from \"lodash\"\n\nconst defaultState = []\n\nconst tabs = (state = defaultState, action) => {\n\n    switch (action.type) {\n        case SET_SESSION_TABS:\n            console.log(\"REDUX: Setting session tabs...\")\n            var newState = action.tabs\n            console.log(newState)\n\n            return newState\n        \n        case SET_TAB_PLOTS:\n            console.log(\"REDUX: Setting tab plots...\")\n            const iTab = _.findIndex(state, [\"id\", action.tabID])\n\n            var newState = _.cloneDeep(state)\n\n            newState[iTab] = {...state[iTab], plots: action.plots}\n            \n            console.log(newState)\n            return newState\n\n        case CLEAR_SESSION:\n            return defaultState\n\n        default:\n            return state\n    }\n}\n\nexport default tabs","import { \n    SET_ACTIVE_PLOT,\n    SET_ACTIVE_TAB,\n    CLEAR_SESSION,\n    CHANGE_PLOT_SETTINGS,\n    SET_ACTIVE_STRUCTS,\n    SET_ACTIVE_PLOTABLES,\n    DEACTIVATE_STRUCT,\n    SET_ACTIVE_PAGE,\n    DEACTIVATE_PLOTABLE,\n    SET_STRUCTURES,\n    SET_PLOTABLES\n} from '../actions/actionTypes'\n\nimport _ from \"lodash\"\n\nconst defaultState = {plot: undefined, tab: undefined, structs: [], plotables:[], page: \"plots\"};\n\nconst active = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_PLOT:\n            console.log(\"REDUX: Setting active plot...\")\n            var newState = {\n                ...state,\n                plot: action.activePlot,\n            }\n            console.log(newState)\n            return newState\n        \n        case CHANGE_PLOT_SETTINGS:\n            console.log(\"REDUX: Changing plot settings (not submitting yet)...\")\n            var newState = {\n                ...state,\n                plot: {\n                    ...state.plot,\n                    settings: {\n                        ...state.plot.settings,\n                        [action.settingKey]: action.value\n                    }\n                },\n            }\n            console.log(newState)\n            return newState\n\n        case SET_ACTIVE_TAB:\n            console.log(\"REDUX: Setting active tab...\")\n            var newState = {\n                ...state,\n                tab: action.activeTab,\n            }\n            console.log(newState)\n            return newState\n        \n        case SET_ACTIVE_STRUCTS:\n            \n            var newState = {\n                ...state,\n                structs: action.structs,\n            }\n\n            return newState\n        \n        case SET_STRUCTURES:\n\n            return { ...state, structs: []}\n        \n        case DEACTIVATE_STRUCT:\n\n            let structsToDeactivate = Array.isArray(action.structID) ? action.structID : [action.structID]\n\n            var newState = {\n                ...state,\n                structs: state.structs.filter( structID => !structsToDeactivate.includes(structID) ),\n            }\n\n            return newState\n        \n        case SET_ACTIVE_PAGE:\n\n            var newState = {\n                ...state,\n                page: action.pageName,\n            }\n\n            return newState\n        \n        case SET_ACTIVE_PLOTABLES:\n        \n            var newState = {\n                ...state,\n                plotables: action.plotables,\n            }\n\n            return newState\n        \n        case SET_PLOTABLES:\n\n            return { ...state, plotables: [] }\n        \n        case DEACTIVATE_PLOTABLE:\n\n            let plotablesToDeactivate = Array.isArray(action.plotableID) ? action.plotableID : [action.plotableID]\n    \n            var newState = {\n                ...state,\n                plotables: state.plotables.filter( plotableID => !plotablesToDeactivate.includes(plotableID) ),\n            }\n\n            return newState\n        \n        case CLEAR_SESSION:\n            return defaultState\n                \n        default:\n            return state\n    }\n}\n\nexport default active","import { \n    START_LOADING_PLOT,\n    END_LOADING_PLOT\n} from '../actions/actionTypes'\n\nimport _ from 'lodash';\n\nconst loading = (state = {plots:{}}, action) => {\n    switch (action.type) {\n        case START_LOADING_PLOT:\n            console.log(\"REDUX: Setting active plot...\")\n            var newState = {\n                ...state,\n                plots: {\n                    ...state.plots,\n                    [action.plot.id]: {\n                        ...action.plot,\n                        from: new Date()\n                    }\n                }\n            }\n            console.log(newState)\n            return newState\n        \n        case END_LOADING_PLOT:\n            console.log(\"REDUX: Changing plot settings (not submitting yet)...\")\n            var newState = {\n                ...state,\n                plots: _.omit(state.plots, [action.plotID]),\n            }\n            console.log(newState)\n            return newState\n                \n        default:\n            return state\n    }\n}\n\nexport default loading","import { SET_PLOTABLES, CLEAR_SESSION } from '../actions/actionTypes'\n\nconst defaultState = {}\n\nconst plotables = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_PLOTABLES:\n            console.log(\"REDUX: Setting the new plotables...\")\n            let newState = {\n                ...action.newPlotables\n            }\n            console.log(newState)\n            return newState\n\n\n        default:\n            return state\n    }\n}\n\nexport default plotables","import storage from \"redux-persist/lib/storage\"\nimport { persistReducer } from 'redux-persist';\nexport function persist(key, whitelist, reducer) {\n    return persistReducer({\n        key,\n        storage,\n        whitelist,\n    }, reducer);\n}","import { combineReducers } from 'redux'\nimport {createResponsiveStateReducer} from 'redux-responsive'\n\nimport session from './session'\nimport plots from './plots'\nimport structures from './structures'\nimport tabs from './tabs'\nimport active from './active'\nimport loading from './loading'\nimport plotables from './plotables'\nimport { persist } from './persist'\n\nexport default combineReducers({\n    session,\n    plots,\n    structures,\n    plotables,\n    tabs,\n    loading: persist('loading', ['plots'], loading),\n    active: persist( 'active', ['tab', 'plot'], active),\n    browser: createResponsiveStateReducer({\n        small: 600,\n        medium: 992,\n    })\n})\n\nexport const selectActiveStructs = (state) => {\n    return state.active.structs.map(structID => state.structures[structID])\n}\n\nexport const selectActivePlotables = (state) => {\n    return state.active.plotables.map(plotableID => state.plotables[plotableID])\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport {Row} from 'react-materialize'\nimport Select from 'react-select'\n\nimport _ from \"lodash\"\nimport PythonApi from '../../apis/PythonApi'\n\nclass PlotTypePicker extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={}\n    }\n\n    componentDidMount(){\n        //Get the available plots\n        PythonApi.getPlotOptions( plotOptions => this.setState({plotOptions}) )\n    }\n\n    render() {\n\n        const value = _.find(this.state.plotOptions, [\"value\", this.props.value])\n\n        return (\n            <Select\n                options={this.state.plotOptions}\n                placeholder=\"Choose the plot type...\"\n                isClearable isSearchable isMulti\n                onChange={(obj) => this.props.onChange(obj ? obj.value || obj.map(selected => selected.value) : undefined)}\n                value={value}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.tabs,\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, null)(PlotTypePicker);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport {Row} from 'react-materialize'\nimport Select from 'react-select'\n\nimport _ from \"lodash\"\n\nclass TabPicker extends Component {\n    render() {\n\n        const options = this.props.tabs.map( (tab) => ({label: tab.name, value: tab.id }))\n        const value = _.find(options, [\"value\", this.props.value])\n        return (\n            <Select\n                placeholder=\"Choose a tab...\"\n                options={options}\n                defaultValue={this.props.active.tab && _.find(this.props.tabs, [\"id\", this.props.active.tab])? {label: _.find(this.props.tabs, [\"id\", this.props.active.tab]).name, value: this.props.active.tab } : null}\n                isSearchable\n                onChange={(obj) => this.props.onChange(obj ? obj.value : undefined)}\n                value={value}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.tabs,\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, null)(TabPicker);\n","import React, { Component } from 'react'\nimport Icon from 'react-materialize/lib/Icon'\nimport { connect } from 'react-redux'\nimport { deactivateStruct, setActiveStructs } from '../../redux/actions'\n\nclass StructureRow extends Component {\n\n    render() {\n\n        const struct = this.props.structure\n        const groupActive = this.props.groupActive\n\n        return (\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", alignItems: \"center\", marginTop: 10, marginBottom: 10}}>\n                <div \n                    style={{color: \"darkred\", cursor: \"pointer\", display: \"flex\", justifyContent: \"center\", alignItems:\"center\"}}\n                    onClick={() => this.props.deactivateStruct(struct.id)}>\n                    <Icon>remove</Icon>\n                </div>\n                <div \n                    style={{cursor: groupActive ? \"default\" : \"pointer\", marginRight: 20, marginLeft: 20, padding: 10, backgroundColor: groupActive ? \"whitesmoke\" : \"#ccc\", borderRadius: 3}}\n                    onClick={groupActive ? undefined : this.props.moveStructToActiveGroup}>\n                    {struct.name.replace(\".fdf\", \"\")}\n                </div>\n                <div data-tip={struct.path}>{\".../\" + struct.path.split(\"/\").slice(-2,-1)[0]}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n    deactivateStruct,\n    setActiveStructs\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StructureRow);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Select from 'react-select'\n\nimport _ from \"lodash\"\n\nconst OPTIONS = [\n    {label: \"Plot individually\", value:\"separatePlot\"},\n    {label: \"Merge in single plot\", value:\"jointPlot\"},\n    {label: \"Build animation\", value:\"jointAnimation\"},\n    {label: \"Animation for each\", value:\"separateAnimation\"},\n]\n\nclass MergeMethodPicker extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={}\n    }\n\n    render() {\n        return (\n            <Select\n                options={OPTIONS}\n                defaultValue={OPTIONS[0]}\n                placeholder=\"Choose the plotting method...\"\n                isSearchable\n                onChange={(obj) => this.props.onChange(obj ? obj.value || obj.map(selected => selected.value) : undefined)}\n                value={_.find(OPTIONS, [\"value\", this.props.value])}\n            />\n                \n        )\n    }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, null)(MergeMethodPicker);","import React, { Component } from 'react'\nimport PlotTypePicker from './PlotTypePicker'\nimport TabPicker from './TabPicker'\nimport StructureRow from './StructureRow'\nimport MergeMethodPicker from './MergeMethodPicker'\nimport { deactivateStruct } from '../../redux/actions'\nimport { connect } from 'react-redux'\n\nclass StructuresGroup extends Component {\n\n    render() {\n\n        const {tabID, plotClasses, mergeMethod} = this.props.initializingOptions\n        const activenessStyles = this.props.active ? {\n            backgroundColor: \"#ccc\"\n        } : {\n            backgroundColor: \"whitesmoke\"\n        }\n\n        return (\n            <div>\n                <div style={{display: \"flex\", flexDirection: \"row\"}}>\n                    <div className=\"structGroupAction\" style={activenessStyles} onClick={this.props.splitGroup}>Split</div>\n                    <div className=\"structGroupAction\" style={activenessStyles} onClick={this.props.removeGroup}>Remove</div>\n                    {this.props.active ? \n                        null\n                            : \n                        <div className=\"structGroupAction\" style={activenessStyles} onClick={this.props.setGroupAsActive}>Mark as receptive</div>\n                    }\n                    <div style={{flex:1}}/>\n                </div>\n                <div className=\"row\" style={{transition: \"all 300ms\", display:\"flex\", flexWrap: \"wrap\", padding: 20, marginTop: 0, marginBottom: 20, borderRadius: 5, borderTopLeftRadius: 0, justifyContent: \"center\", alignItems: \"center\", ...activenessStyles}}>\n                    <div className=\"col s12 m4 l3\">\n                        {this.props.structs.map(struct => <StructureRow structure={struct} groupActive={this.props.active} moveStructToActiveGroup={() => this.props.moveStructToActiveGroup(struct.id)}/>)}\n                    </div>\n                    <div className=\"col s12 m4 l3\">\n                        <PlotTypePicker value={plotClasses} onChange={(val) => this.props.onInitParamChange(\"plotClasses\", val) }/>\n                    </div>\n                    <div className=\"col s12 m4 l3\">\n                        <TabPicker value={tabID} onChange={(val) => this.props.onInitParamChange(\"tabID\", val) }/>\n                    </div>\n                    <div className=\"col s12 m4 l3\">\n                        <MergeMethodPicker value={mergeMethod} onChange={(val) => this.props.onInitParamChange(\"mergeMethod\", val) }/>\n                    </div>\n                </div>\n            </div>      \n        )\n    }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {\n    deactivateStruct\n}\n\nexport default connect(null, mapDispatchToProps)(StructuresGroup);","import React, { Component } from 'react'\n\nimport _ from \"lodash\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Card, Icon} from 'react-materialize'\n\nimport PythonApi from '../../apis/PythonApi'\n\nimport { connect } from 'react-redux'\nimport { selectActiveStructs, selectActivePlotables } from '../../redux/reducers'\nimport { setActiveTab, addPlots, setActiveStructs, informLoadingPlot, informLoadedPlot, deactivateStruct, deactivatePlotable, setActivePlotables } from '../../redux/actions'\nimport StructuresGroup from './StructuresGroup';\n\nclass PlotInitializer extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            structureGroups: [],\n            plotables: [],\n        }\n        \n    }\n\n    get selectedStructs(){\n        return this.props.activeStructs || []\n    }\n\n    get selectedPlotables(){\n        return this.props.activePlotables || []\n    }\n\n    get defaultTabID(){\n        return this.props.active.tab ? this.props.active.tab : this.props.tabs.length && this.props.tabs.length > 0 ? this.props.tabs[0].id : undefined\n    }\n\n    componentDidMount(){\n\n        this.onStructsUpdate([])\n\n    }\n\n    componentWillUnmount(){\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if ( !_.isEqual(prevProps.active.structs, this.props.active.structs) ){\n\n            this.onStructsUpdate(prevProps.active.structs)\n            \n        }\n    }\n\n    onStructsUpdate = (prevActiveStructs) => {\n\n        let structureGroups = [];\n\n        const newStructs = this.selectedStructs.filter(({id:structID}) => !prevActiveStructs.includes(structID))\n\n        if (this.state.structureGroups.length == 0){\n            //In this case build a new group and mark it as active\n            structureGroups = this.markActiveGroup(0, [this.newGroup(this.selectedStructs)])\n        } else {\n            const activeGroupIndex = _.findIndex(this.state.structureGroups, \"active\" )\n            const activeGroup = this.state.structureGroups[activeGroupIndex]\n\n            //Add the structure to the receptive group\n            structureGroups = [\n                ...this.state.structureGroups.slice(0,activeGroupIndex),\n                {...activeGroup, structs: [...activeGroup.structs, ...newStructs]},\n                ...this.state.structureGroups.slice(activeGroupIndex + 1)\n            ]\n        }\n\n        structureGroups = this.cleanUnselectedFromGroups(structureGroups)\n\n        //Ensure that there is an active group\n        if ( !_.find(structureGroups, \"active\") ){\n            structureGroups = this.markActiveGroup(structureGroups.length - 1, structureGroups)\n        }\n\n        this.setState({structureGroups})\n    }\n\n    cleanUnselectedFromGroups = (groups) => {\n        /* Removes unselected structures */\n        return groups.reduce((cleanGroups, group) => {\n            group = {...group, structs: group.structs.filter(({id: structID}) => this.props.active.structs.includes(structID))}\n\n            if (group.structs.length > 0){\n                cleanGroups.push(group)\n            }\n            \n            return cleanGroups\n        },[])\n    }\n\n    newGroup = (structs, groupParams) => {\n\n        return {\n            structs: structs || [],\n            initializingOptions: {tabID: this.defaultTabID, plotClasses: [], mergeMethod: \"separatePlot\"},\n            ...groupParams\n        }\n    }\n\n    addGroup = ({structs}) => {\n\n        const structureGroups = this.markActiveGroup(this.state.structureGroups.length,\n            [...this.state.structureGroups, this.newGroup(structs)])\n\n        this.setState({structureGroups})\n    }\n\n    removeGroup = (iGroup) => {\n\n        const group = this.state.structureGroups[iGroup]\n        \n        if (group.structs.length > 0){\n\n            //We need to deactivate all structures in the group, this will automatically update groups\n            this.props.deactivateStruct(group.structs.map(struct => struct.id))\n        } else {\n            //If no structures in the group, we just delete it\n\n            let structureGroups = this.state.structureGroups.filter((g, i) => i != iGroup)\n\n            if (group.active){\n                structureGroups = this.markActiveGroup(structureGroups.length - 1, structureGroups)\n            }\n\n            this.setState({structureGroups})\n        }\n        \n    }\n\n    splitGroup = (iGroup) => {\n        const group = this.state.structureGroups[iGroup]\n\n        const splitted = group.structs.map( struct => this.newGroup([struct], _.omit(group, [\"structs\"])) )\n\n        //Remove the old group\n        let structureGroups = this.state.structureGroups.filter( (g, i) => i != iGroup)\n\n        //Add the new ones\n        structureGroups = [...structureGroups.slice(0,iGroup), ...splitted, ...structureGroups.slice(iGroup) ]\n\n        //If it was the active group, we can't leave all groups as active!\n        if (group.active) structureGroups = this.markActiveGroup(iGroup, structureGroups)\n\n        this.setState({structureGroups})\n\n    }\n\n    markActiveGroup = (iGroup, groups) => {\n        groups = groups || this.state.structureGroups\n        \n        return groups.map((group, i) => {\n            return {...group, active: i == iGroup}\n        })\n    }\n\n    setGroupAsActive = (iGroup) => {\n        this.setState({structureGroups: this.markActiveGroup(iGroup)})\n    }\n\n    moveStructToActiveGroup = (structID) => {\n        \n        //Get the structure\n        const struct = _.find(this.selectedStructs, [\"id\", structID])\n\n        //Remove the structure from its actual group and move it to the active group\n        //THIS WILL BE A PROBLEM IF AT SOME POINT THE SAME STRUCTURE IS ALLOWED IN TWO GROUPS AT THE SAME TIME\n        //WE SHOULD THEN SPECIFY THE ORIGIN GROUP!!!!!!!!!!!!!!\n        const structureGroups = this.state.structureGroups.map( group => {\n\n            let structs = group.active ? [...group.structs, struct] : group.structs.filter( ({id}) => id != structID)\n            \n            return {...group, structs}\n        })\n\n        this.setState({structureGroups})\n\n    }\n\n    updateGroupInitParams = (iGroup, key, val) => {\n\n        const structureGroups = this.state.structureGroups.map((group, i) => {\n            return i == iGroup ? {...group, initializingOptions: {...group.initializingOptions, [key]: val}}: group\n        })\n\n        this.setState({structureGroups})\n    }\n\n    toggleVisibility = () => {\n\n        document.dispatchEvent( new Event(\"togglePlotInitializer\"))\n    }\n\n    updateInitializingOptions = (key, value) => {\n        this.setState({ [key]: value})\n    }\n\n    afterPlot = (plot, reqParams, processID) => {\n\n        this.props.addPlots({[plot.id]: plot})\n\n        //this.props.setActiveTab(reqParams.tabID)\n\n        this.props.informLoadedPlot(processID)\n        document.dispatchEvent(new Event(\"newPlot\"))\n    }\n\n    getNewPlot = () => {\n\n        //Plot plotables\n        this.selectedPlotables.forEach(plotable => {\n\n            let processID = uuidv4()\n            this.props.informLoadingPlot({id: processID, name: plotable.name})\n\n            PythonApi.getNewPlot(\n                {tabID: this.defaultTabID, plotableID: plotable.id},\n                (plot, reqParams) => this.afterPlot(plot, reqParams, processID)\n            )\n        })\n\n        //Plot the structures\n        this.state.structureGroups.forEach( ({structs, initializingOptions}) =>  {\n\n            if (initializingOptions.mergeMethod.includes(\"separate\")){\n\n                const animation = initializingOptions.mergeMethod.includes(\"Animation\")\n\n                structs.forEach( struct => {\n                    \n                    initializingOptions.plotClasses.forEach( plotClass => {\n                        \n                        let processID = uuidv4()\n                        this.props.informLoadingPlot({id: processID, struct: struct, plotClass: plotClass })\n                    \n                        PythonApi.getNewPlot(\n                            {tabID: initializingOptions.tabID, structID: struct.id, animation, plotClass: plotClass},\n                            (plot, reqParams) => this.afterPlot(plot, reqParams, processID)\n                        )\n        \n                    })\n                    \n                    \n                })\n            }\n            \n        })\n\n        this.toggleVisibility()\n\n        this.props.setActiveStructs([])\n        this.props.setActivePlotables([])\n\n    }\n\n    renderPlotable = (plotable) => {\n        return <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"center\", marginTop: 10}}>\n            <div style={{color: \"darkred\", cursor: \"pointer\", display: \"flex\", justifyContent: \"center\", alignItems:\"center\"}} onClick={() => this.props.deactivatePlotable(plotable.id)}>\n                <Icon>remove</Icon>\n            </div>\n            <div style={{marginRight: 20, marginLeft: 20, padding: 10, backgroundColor: \"whitesmoke\", borderRadius: 3}}>\n                {plotable.name}\n            </div>\n            <div data-tip={plotable.path}>{\".../\" + plotable.path.split(\"/\").slice(-2,-1)[0]}</div>\n        </div> \n    }\n\n    nothingToPlotMessage = () => {\n        return <div>\n            <div style={{color: \"darkred\", fontSize: \"1.3em\", fontWeight: \"bold\"}}>There's nothing to plot currently</div>\n            <div>Select a structure or plotable to begin.</div>\n        </div>\n    }\n\n    render() {\n\n        if (this.props.tabs.length == 0) return null\n\n        let plotables = _.groupBy(this.selectedPlotables, \"plot\")\n\n        return (\n            <div className=\"plotInitializer\" style={this.props.style}>\n\n                <Card\n                    style={{marginLeft: 20, marginRight: 20, background: \"aliceblue\"}}\n                    actions={\n                        <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\n\n                            <a\n                                className=\"btn-flat black-text initPlotBtn\"\n                                onClick={this.toggleVisibility}>\n                                Dismiss\n                                <Icon right>close</Icon>\n                            </a>\n\n                            <a \n                                className=\"btn-flat black-text initPlotBtn\"\n                                onClick={this.getNewPlot}\n                                >\n                                Initialize plots\n                                <Icon right>done</Icon>\n                            </a>\n\n                            <a className=\"btn-flat black-text initPlotBtn\"><Icon>refresh</Icon></a>\n                        </div>     \n                    }>\n                    {this.selectedStructs.length > 0 ? <div>\n                        <div className=\"sectionHeader\">\n                            Structures\n                        </div>\n                        {this.state.structureGroups.map( (group, i) => {\n                            return <StructuresGroup \n                                {...group}\n                                onInitParamChange={(paramName, val) => this.updateGroupInitParams(i, paramName, val)}\n                                setGroupAsActive={() => this.setGroupAsActive(i)}\n                                removeGroup={() => this.removeGroup(i)}\n                                splitGroup={() => this.splitGroup(i)}\n                                moveStructToActiveGroup={this.moveStructToActiveGroup}\n                            />\n                        })}\n                        <div onClick={this.addGroup}>New Group</div>\n                    </div>: null}\n\n                    {this.selectedPlotables.length > 0 ? <div className=\"sectionHeader\">\n                        Plotables\n                    </div> : null}\n\n                    {Object.keys(plotables).map(plot => <div>\n                        <div style={{textAlign: \"left\", fontSize: \"1.1em\", marginTop: 20}}>{plot}</div>\n                        <div style={{marginLeft: 30, paddingLeft: 20, borderLeftStyle: \"solid\", borderWidth: 1, borderColor: \"#ccc\"}}>\n                            {plotables[plot].map(plotable => this.renderPlotable(plotable))}\n                        </div>\n                    </div>)}\n\n                    {[...this.selectedPlotables, ...this.selectedStructs].length == 0 ? this.nothingToPlotMessage() : null} \n\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeStructs: selectActiveStructs(state),\n    activePlotables: selectActivePlotables(state),\n    tabs: state.tabs,\n    active: state.active,\n})\n\nconst mapDispatchToProps = {\n    setActiveTab,\n    addPlots,\n    setActiveStructs,\n    setActivePlotables,\n    informLoadingPlot,\n    informLoadedPlot,\n    deactivateStruct,\n    deactivatePlotable\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotInitializer);\n","import React, { Component } from 'react'\n\nimport moment from \"moment\"\nimport { informLoadedPlot } from '../../redux/actions';\n\nimport {connect} from \"react-redux\"\n\nclass LoadingChip extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            time: Date.now()\n        }\n    }\n\n    componentDidMount(){\n        this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    getLoadingTime = (loadingInit) => {\n\n        return moment(moment().diff(loadingInit)).format(\"mm:ss\")\n    }\n\n    render() {\n\n        console.warn(this.props.info)\n\n        let processName = this.props.info.name\n        \n        if (!processName && this.props.info.struct){\n            processName = this.props.info.struct.name ? [this.props.info.struct.name.replace(\".fdf\", \"\"), this.props.info.plotClass].join(\" \") : \"No name\"\n        }\n        let elapsed = this.getLoadingTime(this.props.info.from)\n\n        return (\n            <div className=\"loadingChip\">\n                <span style={{paddingRight: 10}}>{processName}</span>\n                <span>{elapsed}</span>\n                <span className=\"removeTabBut\" onClick={() => this.props.informLoadedPlot(this.props.info.id)}>X</span>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    informLoadedPlot\n}\n\nexport default connect(null, mapDispatchToProps)(LoadingChip);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport LoadingChip from './LoadingChip'\n\nexport class LoadingTracker extends Component {\n    \n    render() {\n\n        return (\n            <div className={\"loadingTracker\" + (Object.values(this.props.loading.plots).length == 0 ? \" empty\" : \"\")}>\n                {Object.values(this.props.loading.plots).map(loadingInfo => <LoadingChip info={loadingInfo}/>)}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    loading: state.loading\n})\n\nexport default connect(mapStateToProps, null)(LoadingTracker);\n","import React, { Component } from 'react'\nimport TextInput from 'react-materialize/lib/TextInput'\n\n\nexport default class Text extends Component {\n    render() {\n\n        const value = this.props.value || \"\" \n\n        return (\n            <TextInput\n                noLayout\n                value={value}\n                onChange={(e) => this.props.onChange(e.target.value)}\n                label={this.props.setting.name}\n                {...this.props.inputField.params}/>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Switch from 'react-materialize/lib/Switch'\n\nexport default class SwitchInput extends Component {\n    render() {\n        return (\n            <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <Switch\n                    id = {this.props.setting.key}\n                    checked={this.props.value}\n                    onChange={(e) => this.props.onChange(e.target.checked) }\n                    {...this.props.inputField.params}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport Select from \"react-select\"\n\nimport _ from 'lodash'\n\nexport default class Dropdown extends Component {\n    render() {\n        return (\n            <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                <div style={{paddingRight: 20}}>{this.props.setting.name + \":\"}</div>\n                <div style={{flex:1}}>\n                    <Select\n                        value={ Array.isArray(this.props.value) ? this.props.value.map(val => _.find(this.props.inputField.params.options, {value: val})) : _.find(this.props.inputField.params.options, {value: this.props.value})}\n                        onChange={(obj) => this.props.onChange(Array.isArray(obj) ? obj.map(obj => obj.value) : obj ? obj.value : null )}\n                        {...this.props.inputField.params}/>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ChromePicker } from 'react-color';\n\nexport default class ColorPicker extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state ={\n            tempcolor: undefined\n        }\n    }\n\n    toggleColorPicker = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n    };\n    \n    render() {\n\n        let colorPicker = this.state.displayColorPicker ? (\n            <div style={{position: \"absolute\", bottom: 60}}>\n                <ChromePicker\n                    color={this.state.tempcolor || this.props.value || 'black'}\n                    onChange={(color) => {this.setState({tempcolor: color.hex})}}\n                    onChangeComplete={(color) => {this.props.onChange(color.hex); this.setState({tempcolor: undefined})}}\n                    {...this.props.inputField.params}/>\n            </div>\n        ) : null;\n\n        return (\n            <div style={{position: \"relative\",display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div \n                    className=\"z-depth-2\"\n                    onClick={this.toggleColorPicker}\n                    style={{width: 30, height: 30, borderRadius: 30, background: this.props.value}}/>\n                \n                {colorPicker}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { Range } from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nexport default class RangeSlider extends Component {\n    render() {\n\n        const value = this.props.value || [0,0]\n\n        return (\n            <div style={{paddingLeft: \"10%\", paddingRight: \"10%\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <Range\n                    value={value}\n                    onChange={(value) => this.props.onChange(value)}\n                    {...this.props.inputField.params}\n                    />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport InputField from '../InputField'\n\nexport default class Range extends Component {\n\n    render() {\n\n        const value = this.props.value != null ? this.props.value : [\"\", \"\"]\n\n        return (\n            <div>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div style={{display: 'flex'}}>\n                    <input\n                        style={{marginRight: 30, flex:1}}\n                        type=\"number\"\n                        value={value[0]}\n                        onChange={(e) => value[1] >= Number(e.target.value) ? \n                            this.props.onChange( [InputField.number(e.target.value), value[1]] ) : null}\n                        {...this.props.inputField.params}/>\n                    <input\n                        style={{marginLeft: 30, flex:1}}\n                        type=\"number\"\n                        value={value[1]}\n                        onChange={(e) => Number(e.target.value) >= value[0] ? \n                            this.props.onChange( [value[0], InputField.number(e.target.value)] ) : null }\n                        {...this.props.inputField.params}/>\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport InputField from '../InputField'\n\nexport default class Numeric extends Component {\n    render() {\n\n        const additionalProps = this.props.inputField ? this.props.inputField.params : {}\n\n        const value = this.props.value || \"\" \n\n        return (\n            <div>\n                {this.props.setting ? <div style={{paddingBottom: 10}}>{this.props.setting.name}</div> : null}\n                <input\n                    type=\"number\"\n                    value={value}\n                    onChange={(e) => this.props.onChange( InputField.number(e.target.value) )}\n                    style = {this.props.style}\n                    {...additionalProps}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n//--Components\nimport { Card, TextInput, Switch, Button } from 'react-materialize'\nimport Select from \"react-select\"\nimport { ChromePicker } from \"react-color\"\nimport { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport _ from \"lodash\"\nimport InputField from '../InputField';\n\nexport default class QueriesField extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            displayColorPicker: {}\n        }\n    }\n\n    toggleColorPicker = (pickerID) => {\n        this.setState({ displayColorPicker: {\n            ...this.state.displayColorPicker,\n            [pickerID] : ! this.state.displayColorPicker[pickerID]\n        } })\n    };\n\n    addQuery = () => {\n\n        let newQuery = this.props.setting.inputField.queryForm.reduce((map, queryParam) => {\n            map[queryParam.key] = queryParam.default || null\n            return map\n        }, {})\n\n        newQuery.active = true\n\n        this.props.onChange([...this.props.value, newQuery])\n    }\n\n    changeSettingValue = (iQuery, paramKey, paramValue) => {\n\n        let newValue = _.cloneDeep(this.props.value)\n\n        newValue[iQuery] = { ...newValue[iQuery], [paramKey]: paramValue}\n\n        this.props.onChange(newValue)\n    }\n\n    renderInputField = (queryParam, value, iQuery) => {\n\n        let inputField = queryParam.inputField\n\n        if (!inputField) return null\n\n        let fieldLayout;\n\n        if (inputField.type == \"textinput\"){\n\n            fieldLayout = <TextInput\n                    noLayout\n                    value={value}\n                    onChange={(e) => this.changeSettingValue(iQuery, queryParam.key, e.target.value)}\n                    label={queryParam.name}\n                    {...inputField.params}/>\n\n        } else if (inputField.type == \"switch\"){\n\n            fieldLayout = <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n                    <div style={{paddingBottom: 10}}>{queryParam.name}</div>\n                    <Switch\n                        id = {iQuery+queryParam.key}\n                        checked={value}\n                        onChange={(e) => this.changeSettingValue(iQuery, queryParam.key, e.target.checked) }\n                        {...inputField.params}/>\n                </div>\n\n        } else if (inputField.type == \"dropdown\") {\n\n            fieldLayout = <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n                <div style={{paddingRight: 20}}>{queryParam.name + \":\"}</div>\n                <Select\n                        className=\"querySelect\"\n                        value={ Array.isArray(value) ? value.map(val => _.find(inputField.params.options, {value: val})) : _.find(inputField.params.options, {value: value})}\n                        onChange={(obj) => this.changeSettingValue(iQuery, queryParam.key, \n                            Array.isArray(obj) ? obj.map(obj => obj.value) : obj ? obj.value : null )}\n                        {...inputField.params}/>\n                </div>\n\n        } else if (inputField.type == \"color\") {\n\n            let pickerID = String(iQuery) + queryParam.key\n\n            let colorPicker = this.state.displayColorPicker && this.state.displayColorPicker[pickerID] ? (\n                <div style={{position: \"absolute\", bottom: 60}}>\n                    <ChromePicker\n                        color={value ? value : \"#00F0F8FF\"}\n                        onChangeComplete={(color) => this.changeSettingValue(iQuery, queryParam.key, color.hex)}\n                        {...inputField.params}/>\n                </div>\n            ) : null;\n\n            fieldLayout = <div style={{position: \"relative\",display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n                    <div style={{paddingBottom: 10}}>{queryParam.name}</div>\n                    <div \n                        className=\"z-depth-2\"\n                        onClick={() => this.toggleColorPicker(pickerID)}\n                        style={{width: 30, height: 30, borderRadius: 30, background: value}}/>\n                    \n                    {colorPicker}\n                </div>\n        } else if (inputField.type == \"rangeslider\"){\n\n            fieldLayout = <div style={{paddingLeft: \"10%\", paddingRight: \"10%\"}}>\n            <div style={{paddingBottom: 10}}>{queryParam.name}</div>\n            <Range\n                value={value}\n                onChange={(value) => this.changeSettingValue(iQuery, queryParam.key, value)}\n                {...inputField.params}/>\n          </div>\n\n        } else if (inputField.type == \"number\"){\n\n            fieldLayout = <div>\n                <div style={{paddingBottom: 10}}>{queryParam.name}</div>\n                <input\n                    type=\"number\"\n                    value={value}\n                    onChange={(e) => this.changeSettingValue( iQuery, queryParam.key, InputField.number(e.target.value) )}\n                    {...inputField.params}/>\n                </div>\n        }\n\n        return <div style={{marginBottom: 5, marginTop: 5, paddingLeft: 10, paddingRight: 10, width: this.props.w(inputField.width), ...inputField.style}}>{fieldLayout}</div>\n    }\n\n    renderQuery = (query, iQuery) => {\n\n        return (\n\n            <div key={iQuery} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <Switch\n                    id={iQuery+\"active\"}\n                    checked={query.active}\n                    onChange={(e) => this.changeSettingValue(iQuery, \"active\", e.target.checked) }/>\n                <Card className=\"queryCard\" style={{flex: 1, background: query.active ? \"#CBFFC0\" : \"#ffc3cd\", borderRadius: 10}}>\n                    <div style={{display:\"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\"}}>\n                        {this.props.setting.inputField.queryForm.map(queryParam => this.renderInputField(queryParam, query[queryParam.key], iQuery))}\n                    </div>   \n                </Card>\n            </div>\n            \n        )\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div>\n                    {this.props.value.map( (query, iQuery) => this.renderQuery(query, iQuery))}\n                    <Button\n                        data-tip=\"Add a new query\"\n                        onClick={this.addQuery}>\n                        Add Query\n                    </Button>\n                </div>\n            </div>\n            \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport NumericInput from './Numeric'\n\nimport _ from \"lodash\"\n\nexport default class ArrayInput extends Component {\n\n    changeValue = (newVal, i) => {\n        const value = _.cloneDeep(this.props.value)\n\n        value[i] = newVal\n\n        this.props.onChange(value)\n    }\n\n    render() {\n\n        //Params to pass to numeric inputs\n        const orientationStyles = this.props.inputField.params.vertical ? {\n            marginLeft: 20, marginRight: 20, marginBottom: 0, width: 70\n        } : {\n            marginLeft: 5, marginRight: 5, paddingLeft: 10, marginBottom: 0, width: 50\n        }\n        const inputStyle = { ...orientationStyles, paddingLeft: 10, textAlign: \"center\", borderStyle:\"solid\", borderWidth: 1, borderColor: \"black\"}\n\n        return (\n            <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div style={{display: \"flex\", flexDirection: this.props.inputField.params.vertical ? \"column\" : \"row\", justifyContent: \"center\", alignItems: \"center\"}} className=\"arrayContainer\">\n                    {this.props.value.map((val, i) => <NumericInput value={val} onChange={(val) => this.changeValue(val, i)} style={inputStyle}/>)}\n                </div>  \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport _ from \"lodash\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { changeSettings } from \"../../redux/actions\"\n\n/*  All the different input fields */\nimport TextInput from './inputFields/TextInput';\nimport Switch from './inputFields/Switch';\nimport Dropdown from './inputFields/Dropdown';\nimport ColorPicker from './inputFields/ColorPicker';\nimport RangeSlider from './inputFields/RangeSlider';\nimport Range from './inputFields/Range';\nimport Numeric from './inputFields/Numeric';\nimport QueriesField from './inputFields/QueriesInput';\nimport ArrayInput from './inputFields/Array';\n\nconst INPUT_FIELDS = {\n    textinput: TextInput,\n    switch: Switch,\n    dropdown: Dropdown,\n    color: ColorPicker,\n    rangeslider: RangeSlider,\n    range: Range,\n    number: Numeric,\n    queries: QueriesField,\n    vector: ArrayInput\n}\n\nclass InputField extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state ={}\n    }\n\n    w = (string) => {\n\n        if (!string) return undefined\n\n        let isSizeDefined = [\"s\", \"m\", \"l\"].map(sizeLabel => string.indexOf(sizeLabel) >= 0)\n\n        let iWindowSize = [\"small\", \"medium\", \"infinity\"].indexOf(this.props.browser.mediaType)\n\n        for (var i = iWindowSize; i > -1; i--) {\n            \n            if(isSizeDefined[i]){\n                let width = _.find(string.split(\" \"), (str) => str.indexOf([\"s\",\"m\",\"l\"][i]) >= 0)\n                return width.substr(1)\n            }\n          }\n\n        return undefined\n    }\n\n    changeSettingValue = (newValue) => {\n\n        this.props.changeSettings(this.props.onSettingChangeType, this.props.setting.key, newValue)\n        \n    }\n\n    static number = (value) => [\"\", \"-\"].includes(value) ? value : Number(value)\n\n    render() {\n\n        let inputField = this.props.setting.inputField\n\n        // Get the input field that we need\n        const InputComponent = INPUT_FIELDS[inputField.type]\n        \n        if (!InputComponent) return null\n\n        const fieldLayout = <InputComponent\n            {...this.props}\n            inputField={inputField}\n            onChange={(value) => this.changeSettingValue(value)}\n            w={this.w} //This is only needed by the queries field, maybe there is a better way to do it\n        />\n\n        let tooltipParams = {\n            \"data-tip\": (this.props.setting.help ? this.props.setting.help + \"<br>\" : \"\") + \"Default: \" + (this.props.setting.default || \"None\"),\n            \"data-multiline\": true,\n            \"data-effect\": \"solid\",\n            \"data-place\": inputField.type == \"color\" ? \"bottom\" : \"top\", \n        }\n\n        const backgroundColor = this.props.value == null ? \"rgba(230,230,230,0.4)\" : undefined\n\n        return <div\n            onClick={(e) => e.ctrlKey ? this.changeSettingValue(this.props.value == null ? this.props.setting.default : null) : null}\n            style={{backgroundColor, paddingTop: 10, paddingBottom: 10, paddingLeft: 20, paddingRight: 20, borderRadius: 3, marginTop: 20, marginBottom: 20, width: this.w(inputField.width), ...inputField.style}}\n            {...tooltipParams}>\n                {fieldLayout}\n            </div>\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    browser: state.browser\n})\n\nconst mapDispatchToProps = dispatch => ({\n    changeSettings: (actionType, settingKey, newValue) => dispatch(changeSettings(actionType, settingKey, newValue)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\n\n\n// if (inputField.type == \"textinput\"){\n\n//     fieldLayout = <TextInput\n//             noLayout\n//             value={this.props.value}\n//             onChange={(e) => this.changeSettingValue(e.target.value)}\n//             label={this.props.setting.name}\n//             {...inputField.params}/>\n\n// } else if (inputField.type == \"switch\"){\n\n//     fieldLayout = <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n//             <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//             <Switch\n//                 id = {this.props.setting.key}\n//                 checked={this.props.value}\n//                 onChange={(e) => this.changeSettingValue(e.target.checked) }\n//                 {...inputField.params}/>\n//         </div>\n\n// } else if (inputField.type == \"dropdown\") {\n\n//     fieldLayout = <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n//         <div style={{paddingRight: 20}}>{this.props.setting.name + \":\"}</div>\n//         <div style={{flex:1}}>\n//             <Select\n//                 value={ Array.isArray(this.props.value) ? this.props.value.map(val => _.find(inputField.params.options, {value: val})) : _.find(inputField.params.options, {value: this.props.value})}\n//                 onChange={(obj) => this.changeSettingValue(Array.isArray(obj) ? obj.map(obj => obj.value) : obj ? obj.value : null )}\n//                 {...inputField.params}/>\n//         </div>\n//         </div>\n\n// } else if (inputField.type == \"color\") {\n\n//     let colorPicker = this.state.displayColorPicker ? (\n//         <div style={{position: \"absolute\", bottom: 60}}>\n//             <ChromePicker\n//                 color={this.props.value}\n//                 onChangeComplete={(color) => this.changeSettingValue(color.hex)}\n//                 {...inputField.params}/>\n//         </div>\n//     ) : null;\n\n//     fieldLayout = <div style={{position: \"relative\",display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n//             <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//             <div \n//                 className=\"z-depth-2\"\n//                 onClick={this.toggleColorPicker}\n//                 style={{width: 30, height: 30, borderRadius: 30, background: this.props.value}}/>\n            \n//             {colorPicker}\n//         </div>\n// } else if (inputField.type == \"rangeslider\"){\n\n//     fieldLayout = <div style={{paddingLeft: \"10%\", paddingRight: \"10%\"}}>\n//     <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//     <Range\n//         value={this.props.value}\n//         onChange={(value) => this.changeSettingValue(value)}\n//         {...inputField.params}\n//         />\n//   </div>\n\n// } else if (inputField.type == \"range\"){\n\n//     fieldLayout = <div>\n//         <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//         <div style={{display: 'flex'}}>\n//             <input\n//                 style={{marginRight: 30, flex:1}}\n//                 type=\"number\"\n//                 value={this.props.value[0]}\n//                 onChange={(e) => this.props.value[1] >= Number(e.target.value) ? \n//                     this.changeSettingValue( [InputField.number(e.target.value), this.props.value[1]] ) : null}\n//                 {...inputField.params}/>\n//             <input\n//                 style={{marginLeft: 30, flex:1}}\n//                 type=\"number\"\n//                 value={this.props.value[1]}\n//                 onChange={(e) => Number(e.target.value) >= this.props.value[0] ? \n//                     this.changeSettingValue( [this.props.value[0], InputField.number(e.target.value)] ) : null }\n//                 {...inputField.params}/>\n//         </div>\n        \n//     </div>\n\n// } else if (inputField.type == \"number\"){\n\n//     fieldLayout = <div>\n//         <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//         <input\n//             type=\"number\"\n//             value={this.props.value}\n//             onChange={(e) => this.changeSettingValue( InputField.number(e.target.value) )}\n//             {...inputField.params}/>\n//         </div>\n// } else if (inputField.type == \"queries\"){\n\n//     fieldLayout = <div>\n//         <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//         <QueriesField \n//             changeSettingValue={this.changeSettingValue}\n//             setting={this.props.setting}\n//             value={this.props.value}\n//             w={this.w}/>\n//     </div>\n// }\n","import React, { Component } from 'react'\n\nimport { Row, Collapsible, CollapsibleItem, Icon, Col, Button} from 'react-materialize'\nimport InputField from \"./InputField\"\n\nimport parse from 'html-react-parser';\nimport _ from \"lodash\"\nimport { HotKeys, ObserveKeys } from 'react-hotkeys';\nimport { SETTING_GROUP_HOT_KEYS, SETTING_CONTAINER_HOT_KEYS } from '../../utils/hotkeys';\n\nexport default class SettingsContainer extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    hotKeysHandlers = {\n        MOVE_EXPANDED_UP: () => this.moveExpanded(\"up\"),\n        MOVE_EXPANDED_DOWN: () => this.moveExpanded(\"down\")\n    }\n\n    moveExpanded = (direction = \"down\") => {\n\n        var newExpanded;\n        if (direction == \"up\"){\n            newExpanded = this.state.expanded != 0 ? this.state.expanded - 1 : 2\n        } else if (direction == \"down\"){\n            newExpanded = this.state.expanded != 2 ? this.state.expanded + 1 : 0 \n        }\n\n        console.warn(this.refs)\n\n        this.setState({expanded: newExpanded})\n    }\n\n    renderSettingsGroup = (settingsGroup) => {\n\n        return settingsGroup.map(setting => {\n\n            if (!setting.inputField) return null\n        \n            return <InputField \n                        key={setting.key}\n                        setting={setting} \n                        value={this.props.settings[setting.key]}\n                        onSettingChangeType={this.props.onSettingChangeType}/>\n        }) \n    }\n\n    renderSettingsGroups = (groupedParams) => {\n\n        return this.props.paramGroups.map((paramGroup, iParamGroup) => {\n\n            let groupKey = paramGroup.key ? paramGroup.key : \"null\";\n\n            let settingsGroup = groupedParams[groupKey]\n\n            if (!settingsGroup) return null\n\n            let subGrouped = _.groupBy(settingsGroup, \"subGroup\")\n\n            let subGroups = paramGroup.subGroups ? [{key: \"null\", name: null},  ...paramGroup.subGroups] : [{key: \"null\", name: null}]\n\n            let itemContent = subGroups.map(({key, name}) => {\n\n                if ( ! subGrouped[key] ) return null\n                \n                return <div key={key}>\n                    <div style={{paddingBottom: 20, fontWeight:\"bold\", fontSize: \"1.3em\", textAlign: \"left\"}}>{name}</div>\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\", alignItems: \"center\"}}>{this.renderSettingsGroup(subGrouped[key])}</div>\n                </div>\n            })\n\n            const submitSettings = () => this.props.submitSettings( settingsGroup.reduce((settings, setting) => {\n                settings[setting.key] = this.props.settings[setting.key]\n                return settings\n            }, {}))\n\n            const hotKeysHandlers = {\n                SUBMIT_SETTINGS: submitSettings,\n                UNDO_SETTINGS: this.props.undoSettings,\n            }\n\n            return (\n                <CollapsibleItem\n                    key={groupKey}\n                    header={paramGroup.name} \n                    icon={<Icon>{paramGroup.icon}</Icon>}>\n                    <HotKeys keyMap={SETTING_GROUP_HOT_KEYS} handlers={hotKeysHandlers}>\n                        <ObserveKeys>\n                        <blockquote style={{textAlign: \"left\"}}>\n                            {parse(paramGroup.description)}\n                        </blockquote>\n                        {itemContent}\n                        <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\"}}>\n                            <Button\n                                onClick={this.props.undoSettings}\n                                data-tip=\"This will roll back to previous settings.<br> IT AFFECTS ALL GROUPS OF PARAMETERS, not only this one.\"\n                                className=\"orange\"\n                                style={{margin:20}}>\n                                    <Icon left>arrow_back_ios</Icon>Previous settings\n                            </Button>\n\n                            <Button\n                                data-tip=\"This will restore all settings to the plot's defaults\"\n                                className=\"red\" style={{margin:20}}><Icon left>refresh</Icon>Restore defaults</Button>\n\n                            <Button\n                                data-tip=\"This will change the settings and will update everything accordingly.<br> IT ONLY AFFECTS THIS GROUP OF SETTINGS, not all settings\"\n                                onClick={submitSettings}\n                                className=\"blue\" \n                                style={{margin:20}}>\n                                    Submit settings<Icon right>arrow_forward_ios</Icon>\n                            </Button>\n                            \n                        </div>\n                        </ObserveKeys>\n                    </HotKeys>\n                </CollapsibleItem> \n            )\n\n        })\n    }\n\n    render() {\n\n        let groupedParams = _.groupBy(this.props.params, \"group\")\n\n        return (\n            <Collapsible popout defaultActiveKey={this.props.defaultActiveKey || 0}>\n                {this.renderSettingsGroups(groupedParams)}          \n            </Collapsible>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Row, Col} from 'react-materialize'\nimport ReactTooltip from \"react-tooltip\"\n\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Components\nimport PlotCard from '../components/plots/PlotCard'\nimport SettingsContainer from '../components/settings/SettingsContainer'\n\nimport { toast } from 'react-toastify';\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { addPlots, setNewStructures, setActivePlot, setCurrentSession, informLoadedPlot, informLoadingPlot } from \"../redux/actions\"\nimport { CHANGE_PLOT_SETTINGS } from '../redux/actions/actionTypes'\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { PLOT_TWEAKING_HOT_KEYS } from '../utils/hotkeys'\n\n\n\nclass PlotTweaking extends Component {\n\n    hotKeysHandlers = {\n        UNDO_SETTINGS: () => this.undoSettings(),\n        SUBMIT_ALL_SETTINGS: () => this.submitSettings(\"all\")\n    }\n\n    componentDidMount(){\n\n        PythonApi.getSessionSettings(session => this.props.setCurrentSession(session))\n    }\n\n    submitSettings = (settings) => {\n\n        if (settings = \"all\"){\n            settings = this.props.active.plot.settings\n        }\n\n        this.props.informLoadingPlot({id: this.props.active.plot.id, ...this.props.active.plot, struct: {name: this.props.active.plot.struct}})\n\n        PythonApi.updatePlotSettings(this.props.active.plot.id, settings, (plot) => {\n            this.props.addPlots( {[plot.id]: plot})\n\n            if (this.props.active.plot.id == plot.id){\n                this.props.setActivePlot(plot)\n            }\n\n            toast.success(\"Settings submitted\")\n            this.props.informLoadedPlot(plot.id)\n            document.dispatchEvent(new Event(\"newPlot\"))\n            \n        })\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoPlotSettings(this.props.active.plot.id, (plot) => {\n            this.props.addPlots( {[plot.id]: plot})\n\n            if (this.props.active.plot.id == plot.id){\n                this.props.setActivePlot(plot)\n            }\n\n            toast.success(\"Rolled back settings\")\n        })\n    }\n\n    render() {\n\n        if (! this.props.active.plot ) return null\n\n        let setsCont = <SettingsContainer\n                            settings={this.props.active.plot.settings}\n                            params={this.props.active.plot.params}\n                            paramGroups={this.props.active.plot.paramGroups}\n                            onSettingChangeType={CHANGE_PLOT_SETTINGS}\n                            submitSettings={this.submitSettings}\n                            undoSettings={this.undoSettings}/>\n        \n        return (\n            <div style={{...this.props.style}}>\n                <GlobalHotKeys keyMap={PLOT_TWEAKING_HOT_KEYS.global} handlers={this.hotKeysHandlers}/>\n                <Row>\n                    <Col className=\"s12 l4\" style={{height:\"90vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems:\"center\"}}>\n                        <PlotCard plot={this.props.active.plot} style={{height: \"80vh\"}}/>\n                    </Col>\n                    <Col className=\"s12 l8\" >\n                        {this.props.browser.mediaType == \"infinity\" ? <div className=\"scrollView\" style={{ maxHeight: \"90vh\" }}>{setsCont}</div> : setsCont}\n                    </Col>\n                </Row>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>  \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    structures: state.structures,\n    active: state.active,\n    session: state.session,\n    browser: state.browser\n})\n\nconst mapDispatchToProps = {\n    setCurrentSession,\n    addPlots,\n    setActivePlot,\n    setNewStructures,\n    informLoadedPlot,\n    informLoadingPlot\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotTweaking);\n","import React, { Component } from 'react'\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Components\nimport ReactTooltip from \"react-tooltip\"\nimport SettingsContainer from \"../components/settings/SettingsContainer\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setCurrentSession } from \"../redux/actions\"\n\nimport { toast } from 'react-toastify';\n\nimport _ from \"lodash\"\nimport { CHANGE_SESSION_SETTINGS } from '../redux/actions/actionTypes'\n\nclass Settings extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {}\n    }\n\n    submitSettings = (settings) => {\n\n        PythonApi.updateSessionSettings(this.props.session.id, settings, (session) => {\n            this.props.setCurrentSession(session)\n            document.dispatchEvent(new CustomEvent(\"syncWithSession\", {detail: {session}}))\n            toast.success(\"Session settings have been updated\")\n        })\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoSessionSettings(this.props.session.id, (session) => {\n            this.props.setCurrentSession(session)\n            document.dispatchEvent(new CustomEvent(\"syncWithSession\", {detail: {session}}))\n            toast.success(\"Session settings have been rolled back\")  \n            \n        })\n    }\n\n    componentDidMount(){\n        PythonApi.getSessionSettings( session => this.props.setCurrentSession(session))\n    }\n\n    render() {\n\n        if ( _.isEmpty(this.props.session) ) return null\n\n        return (\n            <div style={{...this.props.style, padding: 20}}>\n                <SettingsContainer\n                    defaultActiveKey={1}\n                    settings={this.props.session.settings}\n                    params={this.props.session.params}\n                    paramGroups={this.props.session.paramGroups}\n                    onSettingChangeType={CHANGE_SESSION_SETTINGS}\n                    submitSettings={this.submitSettings}\n                    undoSettings={this.undoSettings}/>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    session: state.session\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentSession: (session) => dispatch(setCurrentSession(session)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React, { Component } from 'react'\nimport ReactMarkDown from \"react-markdown\"\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io'\nimport PythonApi from '../../apis/PythonApi'\n\nexport default class Method extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            showingDetails: false\n        }\n    }\n\n    applyMethod = () => {\n        PythonApi.callPlotShortcut(this.props.plot.id, {sequence: this.props.shortcut})\n    }\n\n    renderDetails = () => {\n\n        return <div style={{transition: \"all 1s\", maxHeight: this.state.showingDetails ? undefined : 0, overflow: \"hidden\"}}>\n            <div style={{padding: 20, fontSize: 13}}>\n                <ReactMarkDown source={this.props.info.description}/>\n            </div>\n            <div onClick={this.applyMethod} style={{cursor: \"pointer\"}}>APPLY METHOD</div>\n        </div>\n    }\n\n    render() {\n\n        const iconRot = this.state.showingDetails ? \"rotate(180deg)\" : \"rotate(0)\"\n        const headerColor =  this.state.showingDetails ? \"#ccc\" : \"whitesmoke\"\n        return (\n            <div>\n                <div\n                    className=\"hoverable\"\n                    style={{display: \"flex\", padding: 20, cursor: \"pointer\", justifyContent: \"space-between\", alignItems: \"center\", backgroundColor: headerColor, transition: \"all 500ms\"}} \n                    onClick={() => this.setState({showingDetails: !this.state.showingDetails})}>\n                    <div>\n                        <span style={{color: \"gray\", marginRight: 10}}>{this.props.shortcut}</span>\n                        <span style={{fontWeight: \"bold\"}}>{this.props.info.name}</span>\n                    </div>\n                    <IoIosArrowDown style={{transition: \"all 500ms\", transform: iconRot}}/>\n                </div>\n                {this.renderDetails()}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Method from './Method'\n\nexport default class Methods extends Component {\n    render() {\n        return (\n            <div style={{textAlign: \"left\", backgroundColor: \"white\", borderRadius: 3, overflow: \"hidden\"}}>\n                {Object.keys(this.props.plot.shortcuts).map((sequence) => <Method plot={this.props.plot} shortcut={sequence} info={this.props.plot.shortcuts[sequence]}/>)}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Row, Col} from 'react-materialize'\nimport ReactTooltip from \"react-tooltip\"\n\n//--Components\nimport PlotCard from '../components/plots/PlotCard'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { addPlots, setNewStructures, setActivePlot, setCurrentSession, informLoadedPlot, informLoadingPlot } from \"../redux/actions\"\nimport { CHANGE_PLOT_SETTINGS } from '../redux/actions/actionTypes'\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { PLOT_TWEAKING_HOT_KEYS } from '../utils/hotkeys'\nimport Methods from '../components/pythonMethods/Methods'\n\n\n\nclass PlotMethods extends Component {\n\n    hotKeysHandlers = {\n    }\n\n    render() {\n\n        if (! this.props.active.plot ) return null\n        \n        return (\n            <div style={{...this.props.style}}>\n                <GlobalHotKeys keyMap={PLOT_TWEAKING_HOT_KEYS.global} handlers={this.hotKeysHandlers}/>\n                <Row>\n                    <Col className=\"s12 l4\" style={{height:\"90vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems:\"center\"}}>\n                        <PlotCard plot={this.props.active.plot} style={{height: \"80vh\"}}/>\n                    </Col>\n                    <Col className=\"s12 l8\" style={{paddingTop: 100}}>\n                        <Methods plot={this.props.active.plot}/>\n                    </Col>\n                </Row>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>  \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    structures: state.structures,\n    active: state.active,\n    session: state.session,\n    browser: state.browser\n})\n\nconst mapDispatchToProps = {\n    setCurrentSession,\n    addPlots,\n    setActivePlot,\n    setNewStructures,\n    informLoadedPlot,\n    informLoadingPlot\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotMethods);\n","import React, { Component } from 'react'\n\nimport _ from \"lodash\"\n\n//--Components\nimport ReactTooltip from \"react-tooltip\"\nimport PlotDashboard from '../components/plots/PlotDashboard';\n\n//--Python api \nimport PythonApi from '../apis/PythonApi'\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport {addPlots, addTabs, setNewStructures, setActiveTab, setActivePlot, setSessionTabs, setCurrentSession, setNewPlotables, setActivePage, setActiveStructs} from \"../redux/actions\"\nimport StructurePicker from '../components/structures/StructurePicker'\nimport PlotInitializer from '../components/plotInitializer/PlotInitializer'\nimport LoadingTracker from '../components/loading/LoadingTracker'\nimport Tabs from '../components/tabs/Tabs'\nimport Controls from '../components/controls/Controls'\nimport PlotTweaking from './PlotTweaking'\nimport Settings from './Settings'\n\nimport {getApplicationKeyMap, GlobalHotKeys, configure} from 'react-hotkeys'\nimport { GLOBAL_HOT_KEYS, ADDITIONAL_GLOBAL_HOT_KEYS } from '../utils/hotkeys';\nimport PlotMethods from './PlotMethods';\n\nconfigure({logLevel: \"debug\", simulateMissingKeyPressEvents: false})\nclass Plots extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            displayPlotInitializer: false,\n            plotToInitialize: {\n                struct: false,\n                animation: false\n            },\n            loadingPlots: [],\n            plotOptions:[]\n        }\n\n        this.syncWithSession()\n\n        document.addEventListener(\"syncWithSession\", (e) => this.syncWithSession(e.detail.session) )\n\n        document.addEventListener(\"updateTabs\", (e) => this.updateTabs(e.detail.tabs))\n\n        document.addEventListener(\"newPlot\", () => this.updateTabs())\n\n        document.addEventListener(\"sessionUpdate\", (e) => {\n            e.detail.justUpdated.forEach( plotID => {\n\n                console.log(plotID)\n                \n                this.setState({loadingPlots: [...this.state.loadingPlots, plotID]})\n                PythonApi.getPlot(plotID, plot => {\n                    this.props.addPlots({[plot.id]: plot})\n                    this.setState({loadingPlots: this.state.loadingPlots.filter(id => id != plotID)})\n                })\n\n            })\n\n        })\n\n        this.hotKeysListener()\n            \n    }\n\n    hotKeysHandlers = {\n        GO_TO_SETTINGS: () => this.props.setActivePage(\"settings\"),\n        GO_TO_DASHBOARD: () => this.props.setActivePage(\"plots\"),\n        SHOW_AVAIL_HOTKEYS: () => console.warn(getApplicationKeyMap())\n    }\n\n    syncWithSession = (session) => {\n\n        this.updateTabs()\n\n        PythonApi.getPlotOptions( plotOptions => this.setState({plotOptions}) )\n\n        PythonApi.getAvailableStructs( (structures, {plotables}) => {this.props.setNewStructures(structures);this.props.setNewPlotables(plotables)} )\n        \n        if (session){\n            this.props.setCurrentSession(session)\n        } else {\n            PythonApi.getSessionSettings(session => this.props.setCurrentSession(session))\n        }\n        \n    }\n\n    hotKeysListener = () => {\n\n        // document.addEventListener(\"keydown\", (e) => {\n        //     hotKeyAction(e, this, this._mainCompRef)\n        // })\n    }\n\n    componentDidMount(){\n\n        this.props.setActivePlot(undefined)\n\n        //Add the listener to display or not the plot initializer\n        this.listener = document.addEventListener(\"togglePlotInitializer\", this.togglePlotInitializer)\n        \n    }\n\n    componentDidUpdate(){\n\n        let activeTab = _.find(this.props.tabs, [\"id\", this.props.active.tab]) \n        \n        if (!activeTab) return\n\n        //Get the missing plots if there are any\n        activeTab.plots.forEach(plotID => {\n\n            if ( !this.props.plots[plotID] && this.state.loadingPlots.indexOf(plotID) == -1){\n\n                this.setState({loadingPlots: [...this.state.loadingPlots, plotID]})\n                PythonApi.getPlot(plotID, plot => {\n                    this.props.addPlots({[plot.id]: plot})\n                    this.setState({loadingPlots: this.state.loadingPlots.filter(id => id != plotID)})\n                })\n                \n            }\n        })\n\n    }\n\n    updateTabs = (tabs) => {\n\n        if (tabs){\n            this.props.setSessionTabs(tabs)\n        } else {\n            PythonApi.getSessionTabs( tabs => {\n                this.props.setSessionTabs(tabs)\n                \n                let activeTab = _.find(tabs, [\"id\", this.props.active.tab])\n\n                if (!activeTab) this.props.setActiveTab( tabs.length > 0 ? tabs[0].id : undefined)\n            })\n        }\n\n    }\n\n    getNewPlot = () => {\n\n        this.setState({isLoading: true})\n\n        PythonApi.getNewPlot({tabID: this.props.active.tab, ...this.state.plotToInitialize}, (plot, reqParams) => {\n\n            this.updateTabs()\n            this.props.addPlots({[plot.id]: plot})\n\n            this.togglePlotInitializer()\n            this.props.setActiveTab(reqParams.tabID)\n            this.setState({isLoading: false})\n        })\n\n    }\n\n    togglePlotInitializer = (e) => {\n\n        let currentlyShowing = this.props.active.page == \"plotInitializer\"\n\n        if (e != undefined & e.detail != undefined) {\n            if (e.detail.forceShow &&  !currentlyShowing){\n                this.props.setActivePage(\"plotInitializer\")\n            } if (e.detail.forceHide && currentlyShowing){\n                this.props.setActivePage(\"plots\")\n            }\n        } else {\n            this.props.setActivePage(currentlyShowing ? \"plots\" : \"plotInitializer\")\n        }\n\n    }\n\n    render() {\n\n        const MainComponent = {\n            'plots': PlotDashboard,\n            'settings': Settings,\n            'plotTweaking': PlotTweaking,\n            'plotMethods': PlotMethods,\n            'plotInitializer': PlotInitializer\n        }[this.props.active.page]\n\n        return (\n            <div style={{marginBottom: 0, display: \"flex\", flexWrap: \"wrap\"}}>\n                <GlobalHotKeys keyMap={{...GLOBAL_HOT_KEYS}} handlers={this.hotKeysHandlers}/>\n                <div style={{marginLeft: 15, marginRight: 15, width: \"10vw\", minWidth: 150}}>\n                    <StructurePicker structures={this.props.structures}/>   \n                </div>\n                <div style={{flex: 1, height: \"100vh\", display: \"flex\", flexDirection: \"column\"}}>\n                    <LoadingTracker/>\n                    {this.props.active.page == \"plots\" ? <Tabs/> : null}\n                    <MainComponent style={{flex: 1}}/>\n                    <Controls/>\n                </div>\n                <ToastContainer/>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    structures: state.structures,\n    tabs: state.tabs,\n    active: state.active,\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setCurrentSession,\n    setActiveTab,\n    setSessionTabs,\n    setActivePlot,\n    addPlots,\n    setNewStructures,\n    setNewPlotables,\n    setActivePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plots);","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport Route from \"./Route\";\n\nimport Plots from \"../pages/Plots\";\nimport Settings from \"../pages/Settings\";\nimport PlotTweaking from \"../pages/PlotTweaking\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/plots\" exact component={Plots} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/plotTweaking\" component={PlotTweaking}/>\n\n      {/* redirect user to SignIn page if route does not exist and user is not authenticated */}\n      <Route component={Plots} />\n    </Switch>\n  );\n}\n","import { createStore } from 'redux'\nimport {responsiveStoreEnhancer} from 'redux-responsive'\nimport { persistStore} from 'redux-persist'\n\nimport rootReducer from '../reducers'\n\nexport default () => {\n  let store = createStore(rootReducer, responsiveStoreEnhancer)\n  let persistor = persistStore(store)\n  //persistor.purge()\n  return { store, persistor }\n}","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\"\n//import Oks from './apis/Socket'\n\n//--Navigation\nimport { Router } from 'react-router-dom';\nimport history from './apis/history';\nimport Routes from './routes';\n\n//--Redux\nimport getStoreAndPersistor from './redux/store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst {store, persistor} = getStoreAndPersistor()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <div className=\"App\" style={{display: \"flex\", flexDirection: \"column\"}}>\n          <div className = \"appContent\" style={{height: \"100vh\"}}>\n            <Router history={history}>\n              <Routes />\n            </Router>\n          </div>   \n        </div>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}