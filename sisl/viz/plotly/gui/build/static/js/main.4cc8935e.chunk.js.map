{"version":3,"sources":["redux/reducers/session.js","redux/actions/actionTypes.js","redux/reducers/plots.js","redux/reducers/active.js","redux/reducers/loading.js","redux/reducers/persist.js","redux/reducers/index.js","redux/actions/index.js","components/settings/inputFields/TextInput.js","components/prompts/Prompt.js","apis/PythonApi.js","utils/hotkeys.js","components/plots/PlotCard.js","components/tabs/Tab.js","components/tabs/Tabs.js","components/plots/PlotDashboard.js","components/structures/StructureTag.js","components/controls/Controls.js","components/controls/NavigateButton.js","components/structures/PlotableTag.js","components/structures/StructurePicker.js","components/plotInitializer/PlotTypePicker.js","components/plotInitializer/TabPicker.js","components/plotInitializer/StructureRow.js","components/plotInitializer/MergeMethodPicker.js","components/plotInitializer/StructuresGroup.js","components/plotInitializer/PlotableRow.js","components/plotInitializer/PlotInitializer.js","components/settings/inputFields/Switch.js","components/settings/inputFields/Dropdown.js","components/settings/inputFields/ColorPicker.js","components/settings/inputFields/RangeSlider.js","components/settings/inputFields/Range.js","components/settings/inputFields/Numeric.js","components/settings/inputFields/QueriesInput.js","components/settings/inputFields/Array.js","components/settings/inputFields/List.js","components/settings/inputFields/CreatableDropown.js","components/settings/InputField.js","components/settings/SettingsContainer.js","pages/PlotTweaking.js","pages/Settings.js","components/pythonMethods/Method.js","components/pythonMethods/Methods.js","pages/PlotMethods.js","components/settings/inputFields/Files.js","components/controls/ConnectionStatus.js","components/structureView/MoleculeViewer.js","pages/PlotEditor.js","components/loading/NotConnected.js","pages/Plots.js","redux/store/index.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","session","state","action","type","console","log","warn","newState","settings","settingKey","value","chosenPlots","plotables","plotableID","plots","newPlots","_","omit","plotID","extraParams","toast","error","unsubmittedSettings","plot","undefined","tab","structs","page","active","activeTab","activeTabInSession","find","tabs","anyTab","length","id","structsToDeactivate","Array","isArray","structID","filter","includes","pageName","plotablesToDeactivate","loading","from","Date","persist","key","whitelist","reducer","persistReducer","storage","combineReducers","browser","createResponsiveStateReducer","small","medium","selectActiveStructs","map","structures","selectActivePlotables","selectActivePlot","setCurrentSession","addPlots","tabsIDs","setNewStructures","newStructures","setSessionTabs","setActivePlot","setActiveTab","setActiveStructs","deactivateStruct","informLoadingPlot","informLoadedPlot","setActivePage","setActivePlotables","deactivatePlotable","Text","this","props","label","setting","name","TextField","variant","onChange","e","target","style","width","inputField","params","Component","Prompt","controlClose","closeToast","callback","paddingBottom","content","setState","inputProps","Button","onClick","prompt","autoClose","closeOnClick","onClose","arg","connect","address","apiAddress","externalListeners","socket","io","listeners","forEach","listener","on","connectionTimeOut","setTimeout","currentAddress","newAddress","trim","connected","disconnect","close","onConnect","args","push","onDisconnect","setupListeners","clearTimeout","requestSession","askForAuth","err","handleError","document","dispatchEvent","CustomEvent","detail","info","authenticating","toastPrompt","username","emit","path","loadSession","newProcessId","uuidv4","_sessionMethod","methodName","kwargs","updateSessionSettings","newSettings","undoSessionSettings","addTab","tabName","removeTab","tabID","updateTab","newParams","setTabLayouts","layouts","saveSession","getPlot","plot_id","newPlot","newPlotKwargs","removePlot","movePlot","mergePlots","plotIDs","to","_plotMethod","showPlotFullScreen","updatePlotSettings","undoPlotSettings","updatePlotLayout","layoutUpdates","updateFigure","layout","data","frames","overwrite","callPlotShortcut","sequence","dispatchPlotEvent","event","sendFile","file","user","api","GLOBAL_HOT_KEYS","SHOW_AVAIL_HOTKEYS","GO_TO_SETTINGS","GO_TO_DASHBOARD","GO_TO_MOLECULEVIEWER","SAVE_SESSION","sequences","LOAD_SESSION","TABS_HOT_KEYS","global","MOVE_TO_NEXT_TAB","MOVE_TO_PREVIOUS_TAB","NEW_TAB","TRY","PLOTS_HOT_KEYS","PLOT_CARD_HOT_KEYS","GO_TO_PLOT_SETTINGSEDITING","GO_TO_PLOT_LAYOUTEDITING","GO_TO_PLOT_METHODS","FULL_SCREEN","REMOVE_PLOT","UNDO_PLOT_SETTINGS","SETTING_GROUP_HOT_KEYS","SUBMIT_SETTINGS","PLOT_TWEAKING_HOT_KEYS","UNDO_SETTINGS","SUBMIT_ALL_SETTINGS","PlotCard","hotKeys","querySelectorAll","hotKeysHandlers","goToPlotLayoutEditing","goToPlotSettingsEditing","goToPlotMethods","undoSettings","shortcuts","PythonApi","handlePlotClick","points","handlePlotRelayout","keys","Object","setPlotAsActive","togglePlotAsActive","isActivePlot","isLoading","addEventListener","cou","Math","random","Card","className","borderRadius","figure","backColor","paper_bgcolor","hotKeysKeyMap","TESTING","reduce","plotShortcuts","shortcut","replace","activeStyles","component","elevation","keyMap","handlers","allowChanges","height","display","flexDirection","overflow","background","paddingTop","flex","ref","plotlyRef","useResizeHandler","autosize","onRelayout","onUpdate","config","editable","responsive","paddingLeft","paddingRight","Provider","size","margin","color","textAlign","data-tip","href","disable","showTooltips","mapDispatchToProps","Tab","updateTabs","updateTabParams","newTabParams","updateTabName","blur","textContent","contentEditable","onBlur","onKeyUp","keyCode","Tabs","moveThroughTabs","newTab","direction","newI","i","findIndex","noTabsMessage","flexWrap","alignItems","marginTop","marginBottom","data-place","ResponsiveReactGridLayout","WidthProvider","Responsive","selectedPlotStyles","backgroundColor","PlotDashboard","currentBreakpoint","compactType","mounted","lg","emptyDashboard","noPlotsMessage","justifyContent","fontSize","fontWeight","padding","toggleSelected","selected","onBreakpointChange","breakpoint","onResizeStop","finalL","initL","higher","h","shouldComponentUpdate","newProps","_plotsInLayout","hasDifferentPlots","isDifferentTab","isEqual","onLayoutChange","onDrop","elemParams","alert","JSON","stringify","getLayout","newPlotLayout","draggableCancel","measureBeforeMount","useCSSTransforms","preventCollision","rowHeight","generateDOM","removePlots","movePlots","iTab","renderSelectedManager","nSelected","Paper","merge","toggleSelect","l","ctrlKey","hotKeysHandler","pick","React","defaultProps","cols","md","sm","xs","xxs","x","grid_dims","y","w","setTabPlots","withHotKeys","StructureTag","struct","toggleStruct","data-effect","split","slice","useStyles","makeStyles","theme","root","transform","flexGrow","exampleWrapper","position","spacing","radioGroup","speedDial","bottom","right","top","left","SpeedDials","classes","useState","open","setOpen","hidden","SpeedDial","ariaLabel","icon","SpeedDialIcon","onOpen","actions","SpeedDialAction","tooltipTitle","tip","tooltipPlacement","Controls","saveCurrentSession","syncWithSession","showPage","rootDir","Control","tooltip","floating","ROUTES","hotKey","NavigateButton","route","PlotableTag","plotable","togglePlotable","StructurePicker","togglePlotInitializer","selectedStructs","selectedPlotables","forceShow","forceHide","selectStructs","selectPlotables","xor","toggleStructDisplay","displayStructures","togglePlotablesDisplay","displayPlotables","toggleAlphabeticSorting","toggles","alphabeticSorting","toggleSearchByFolder","searchByFolder","toggleSelectedSorting","selectedSorting","toggleAll","onDisplay","filterStructs","onDisplaySelected","intersection","displayedStructs","displayedPlotables","searchString","object","index","isPlotable","newStructs","str","toTest","RegExp","test","newSearchString","noStructuresMessage","noMatchingStructuresMessage","structsAndPlotables","orderBy","autocomplete","placeholder","marginRight","cursor","values","obj","activeStructs","activePlotables","ValueContainer","components","Placeholder","CustomValueContainer","children","isFocused","selectProps","Children","child","PlotTypePicker","plotOptions","options","isClearable","isSearchable","isMulti","styles","container","provided","valueContainer","hasValue","inputValue","transition","marginLeft","TabPicker","defaultValue","StructureRow","structure","groupActive","moveStructToActiveGroup","OPTIONS","MergeMethodPicker","StructuresGroup","initializingOptions","plotClasses","mergeMethod","activenessStyles","splitGroup","removeGroup","setGroupAsActive","Grid","borderTopLeftRadius","item","val","onInitParamChange","PlotableRow","plotOption","plotTypes","setPlotablePlots","PlotInitializer","onStructsUpdate","prevActiveStructs","structureGroups","markActiveGroup","newGroup","activeGroupIndex","activeGroup","cleanUnselectedFromGroups","groups","cleanGroups","group","groupParams","defaultTabID","addGroup","iGroup","g","splitted","updateGroupInitParams","toggleVisibility","Event","updateInitializingOptions","getNewPlot","plotType","plotable_path","plot_method","animation","plotClass","nothingToPlotMessage","prevProps","paramName","endIcon","SwitchInput","Switch","checked","Dropdown","ColorPicker","toggleColorPicker","displayColorPicker","tempcolor","colorPicker","hex","onChangeComplete","RangeSlider","Range","Number","InputField","number","Numeric","additionalProps","QueriesField","addQuery","newQuery","queryForm","queryParam","default","changeSettingValue","iQuery","paramKey","paramValue","newValue","cloneDeep","renderQuery","query","String","onValueChange","ArrayInput","changeValue","newVal","handleNone","shape","fill","orientationStyles","vertical","inputStyle","DragHandle","sortableHandle","SortableItem","sortableElement","sortable","remove","SortableContainer","sortableContainer","ListInput","sanitizeVal","addItem","removeItem","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","itemInput","CreatableDropdown","santitizeValue","sanitized","handleChange","INPUT_FIELDS","textinput","TextInput","switch","dropdown","rangeslider","range","queries","vector","list","string","isSizeDefined","sizeLabel","indexOf","mediaType","substr","changeSettings","onSettingChangeType","onSettingChangeExtraParams","InputComponent","fieldLayout","tooltipParams","help","actionType","SettingsContainer","MOVE_EXPANDED_UP","moveExpanded","MOVE_EXPANDED_DOWN","newExpanded","expanded","renderSettingsGroup","settingsGroup","renderSettingsGroups","groupedParams","paramGroups","paramGroup","iParamGroup","groupKey","subGrouped","groupBy","itemContent","subGroups","submitSettings","Icon","parse","description","PlotTweaking","activePlot","plotSettings","setsCont","maxHeight","multiline","Settings","isEmpty","defaultActiveKey","dispatch","Method","applyMethod","renderDetails","showingDetails","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","source","ExpansionPanelActions","Methods","PlotMethods","FilesInput","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","ConnectionStatus","data-background-color","MoleculeViewer","Speck","canvasContainerID","canvasID","PlotEditor","plotly","debug","advancedTraceTypeSelector","Box","mesh","useRef","hovered","setHover","setActive","useFrame","current","rotation","scale","onPointerOver","onPointerOut","attach","NotConnected","sign","configure","logLevel","simulateMissingKeyPressEvents","Plots","getApplicationKeyMap","askForSession","plotToInitialize","currentlyShowing","loadingPlots","justUpdated","MainComponent","connectedProps","minWidth","borderRight","Files","camera","setNewPlotables","newPlotables","store","createStore","rootReducer","responsiveStoreEnhancer","persistor","persistStore","getStoreAndPersistor","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cc8935e.chunk.js","sourcesContent":["import { CLEAR_SESSION, SET_SESSION, CHANGE_SESSION_SETTINGS, SET_PLOTABLE_PLOTS, DEACTIVATE_PLOTABLE} from '../actions/actionTypes'\nimport _ from \"lodash\"\n\nconst defaultState = {}\n\nconst session = (state = defaultState, action) => {\n\n    switch (action.type) {\n        case SET_SESSION:\n            console.log(\"REDUX: Setting current session...\")\n            console.warn(action.session)\n            var newState = action.session\n            console.log(newState)\n\n            return newState\n        \n        case CHANGE_SESSION_SETTINGS:\n            console.log(\"REDUX: Changing current session settings (not submitting yet)...\")\n            var newState = {\n                ...state,\n                settings: {\n                    ...state.settings,\n                    [action.settingKey]: action.value\n                }\n            }\n            console.log(newState)\n            return newState\n\n        \n        case CLEAR_SESSION:\n            return defaultState\n\n        case DEACTIVATE_PLOTABLE:\n\n            action.chosenPlots = []\n\n        case SET_PLOTABLE_PLOTS:\n\n            var newState = {\n                ...state,\n                plotables: {\n                    ...state.plotables,\n                    [action.plotableID]: {\n                        ...state.plotables[action.plotableID],\n                        chosenPlots: action.chosenPlots\n                    }\n                }\n            }\n\n            return newState\n\n        default:\n            return state\n    }\n}\n\nexport default session","export const ADD_PLOTS = 'ADD_PLOTS'\nexport const REMOVE_PLOT = 'REMOVE_PLOT'\nexport const CHANGE_PLOT_SETTINGS = 'CHANGE_PLOT_SETTINGS'\nexport const ADD_TABS = 'ADD_TABS'\nexport const SET_STRUCTURES = 'SET_STRUCTURES'\nexport const SET_PLOTABLES = 'SET_PLOTABLES'\nexport const SET_TAB_PLOTS = 'SET_TAB_PLOTS'\nexport const SET_SESSION_TABS = 'SET_SESSION_TABS'\n//Activate\nexport const SET_ACTIVE_PLOT = 'SET_ACTIVE_PLOT'\nexport const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB'\nexport const SET_ACTIVE_STRUCTS = 'SET_ACTIVE_STRUCTS'\nexport const SET_ACTIVE_PLOTABLES = 'SET_ACTIVE_PLOTABLES'\n//Deactivate\nexport const DEACTIVATE_STRUCT = 'DEACTIVATE_STRUCT'\nexport const DEACTIVATE_PLOTABLE = 'DEACTIVATE_PLOTABLE'\nexport const SET_SESSION = 'SET_SESSION'\nexport const CHANGE_SESSION_SETTINGS = 'CHANGE_SESSION_SETTINGS'\nexport const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const START_LOADING_PLOT = 'START_LOADING_PLOT'\nexport const END_LOADING_PLOT = 'END_LOADING_PLOT'\nexport const SET_ACTIVE_PAGE = 'SET_ACTIVE_PAGE'\n\nexport const SET_PLOTABLE_PLOTS = 'SET_PLOTABLE_PLOTS'\n\n\n","import { ADD_PLOTS, CLEAR_SESSION, REMOVE_PLOT, CHANGE_PLOT_SETTINGS } from '../actions/actionTypes'\nimport _ from \"lodash\"\nimport { toast } from 'react-toastify';\n\nconst defaultState = {};\n\nconst plots = (state = defaultState, action) => {\n    switch (action.type) {\n        case ADD_PLOTS:\n            console.log(\"REDUX: Storing a new plot...\")\n            var newState = {\n                ...state,\n                ...action.newPlots,\n            }\n            console.log(newState)\n            return newState\n        \n        case REMOVE_PLOT:\n            return _.omit(state, [action.plotID])\n        \n        case CHANGE_PLOT_SETTINGS:\n            console.log(\"REDUX: Changing plot settings (not submitting yet)...\")\n\n            let plotID = action.extraParams.plotID\n            if (!state[plotID]) {\n                toast.error(\"You are trying to change the settings of a plot that does not exist\")\n                return state\n            }\n\n            var newState = {\n                ...state,\n                [plotID]: {\n                    ...state[plotID],\n                    unsubmittedSettings: {\n                        ...state[plotID].unsubmittedSettings,\n                        [action.settingKey]: action.value\n                    }\n                }\n            }\n            console.log(newState)\n            return newState\n        \n        case CLEAR_SESSION:\n            return defaultState\n            \n        default:\n            return state\n    }\n}\n\nexport default plots","import { \n    SET_ACTIVE_PLOT,\n    SET_ACTIVE_TAB,\n    CLEAR_SESSION,\n    CHANGE_PLOT_SETTINGS,\n    SET_ACTIVE_STRUCTS,\n    SET_ACTIVE_PLOTABLES,\n    DEACTIVATE_STRUCT,\n    SET_ACTIVE_PAGE,\n    DEACTIVATE_PLOTABLE,\n    SET_STRUCTURES,\n    SET_PLOTABLES,\n    SET_SESSION\n} from '../actions/actionTypes'\n\nimport _ from \"lodash\"\n\nconst defaultState = {plot: undefined, tab: undefined, structs: [], plotables:[], page: \"plots\"};\n\nconst active = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_PLOT:\n            console.log(\"REDUX: Setting active plot...\")\n            var newState = {\n                ...state,\n                plot: action.plotID,\n            }\n            console.log(newState)\n            return newState\n\n        case SET_ACTIVE_TAB:\n            console.log(\"REDUX: Setting active tab...\")\n            var newState = {\n                ...state,\n                tab: action.activeTab,\n            }\n            console.log(newState)\n            return newState\n        \n        case SET_SESSION:\n\n            const activeTabInSession = _.find(action.session.tabs, [\"id\", state.tab])\n            const anyTab = action.session.tabs.length > 0\n            \n            if (activeTabInSession) {\n                return state\n            } else if (anyTab){\n                return {...state, tab: action.session.tabs[0].id}\n            } else {\n                return { ...state, tab: null}\n            }\n        \n        case SET_ACTIVE_STRUCTS:\n            \n            var newState = {\n                ...state,\n                structs: action.structs,\n            }\n\n            return newState\n        \n        case SET_STRUCTURES:\n\n            return { ...state, structs: []}\n        \n        case DEACTIVATE_STRUCT:\n\n            let structsToDeactivate = Array.isArray(action.structID) ? action.structID : [action.structID]\n\n            var newState = {\n                ...state,\n                structs: state.structs.filter( structID => !structsToDeactivate.includes(structID) ),\n            }\n\n            return newState\n        \n        case SET_ACTIVE_PAGE:\n\n            var newState = {\n                ...state,\n                page: action.pageName,\n            }\n\n            return newState\n        \n        case SET_ACTIVE_PLOTABLES:\n        \n            var newState = {\n                ...state,\n                plotables: action.plotables,\n            }\n\n            return newState\n        \n        case SET_PLOTABLES:\n\n            return { ...state, plotables: [] }\n        \n        case DEACTIVATE_PLOTABLE:\n\n            let plotablesToDeactivate = Array.isArray(action.plotableID) ? action.plotableID : [action.plotableID]\n    \n            var newState = {\n                ...state,\n                plotables: state.plotables.filter( plotableID => !plotablesToDeactivate.includes(plotableID) ),\n            }\n\n            return newState\n        \n        case CLEAR_SESSION:\n            return defaultState\n                \n        default:\n            return state\n    }\n}\n\nexport default active","import { \n    START_LOADING_PLOT,\n    END_LOADING_PLOT\n} from '../actions/actionTypes'\n\nimport _ from 'lodash';\n\nconst loading = (state = {plots:{}}, action) => {\n    switch (action.type) {\n        case START_LOADING_PLOT:\n            console.log(\"REDUX: Setting active plot...\")\n            var newState = {\n                ...state,\n                plots: {\n                    ...state.plots,\n                    [action.plot.id]: {\n                        ...action.plot,\n                        from: new Date()\n                    }\n                }\n            }\n            console.log(newState)\n            return newState\n        \n        case END_LOADING_PLOT:\n            console.log(\"REDUX: Changing plot settings (not submitting yet)...\")\n            var newState = {\n                ...state,\n                plots: _.omit(state.plots, [action.plotID]),\n            }\n            console.log(newState)\n            return newState\n                \n        default:\n            return state\n    }\n}\n\nexport default loading","import storage from \"redux-persist/lib/storage\"\nimport { persistReducer } from 'redux-persist';\nexport function persist(key, whitelist, reducer) {\n    return persistReducer({\n        key,\n        storage,\n        whitelist,\n    }, reducer);\n}","import { combineReducers } from 'redux'\nimport {createResponsiveStateReducer} from 'redux-responsive'\nimport _ from \"lodash\"\n\nimport session from './session'\nimport plots from './plots'\nimport active from './active'\nimport loading from './loading'\nimport { persist } from './persist'\n\nexport default combineReducers({\n    session,\n    plots,\n    loading: persist('loading', ['plots'], loading),\n    active: persist( 'active', ['tab', 'plot'], active),\n    browser: createResponsiveStateReducer({\n        small: 600,\n        medium: 992,\n    })\n})\n\nexport const selectActiveStructs = (state) => {\n    return state.active.structs.map(structID => state.session.structures[structID])\n}\n\nexport const selectActivePlotables = (state) => {\n    return state.active.plotables.map(plotableID => state.session.plotables[plotableID])\n}\n\nexport const selectActivePlot = (state) => {\n    return state.plots[state.active.plot]\n}","import { \n    ADD_PLOTS,\n    REMOVE_PLOT,\n    ADD_TABS,\n    SET_STRUCTURES,\n    SET_TAB_PLOTS,\n    SET_SESSION_TABS,\n    SET_ACTIVE_PLOT,\n    SET_ACTIVE_TAB,\n    CLEAR_SESSION,\n    SET_SESSION,\n    SET_ACTIVE_STRUCTS,\n    DEACTIVATE_STRUCT,\n    START_LOADING_PLOT,\n    END_LOADING_PLOT,\n    SET_ACTIVE_PAGE,\n    DEACTIVATE_PLOTABLE,\n    SET_ACTIVE_PLOTABLES,\n    SET_PLOTABLES,\n    SET_PLOTABLE_PLOTS\n} from './actionTypes'\n\nexport const setCurrentSession = (session) => {\n\n    return {\n        type: SET_SESSION,\n        session\n    }\n}\n    \nexport const addPlots = (newPlots, tabsIDs) => ({\n    type: ADD_PLOTS,\n    newPlots,\n    tabsIDs\n})\n\nexport const removePlot = (plotID, tabID) => ({\n    type: REMOVE_PLOT,\n    plotID,\n    tabID\n})\n\nexport const changeSettings = (actionType, settingKey, value, extraParams) => ({\n    type: actionType, //Valid action types are all of type CHANGE_<something>_SETTINGS\n    settingKey,\n    value,\n    extraParams // Here the plotID is passed, for example, if the actionType is CHANGE_PLOT_SETTINGS\n})\n\nexport const addTabs = (newTabs) => ({\n    type: ADD_TABS,\n    newTabs\n})\n\nexport const setNewStructures = (newStructures) => ({\n    type: SET_STRUCTURES,\n    newStructures\n})\n\nexport const setTabPlots = (tabID, plots) => ({\n    type: SET_TAB_PLOTS,\n    tabID,\n    plots\n})\n\nexport const setSessionTabs = (tabs) => ({\n    type: SET_SESSION_TABS,\n    tabs\n})\n\nexport const setActivePlot = (plot) => ({\n    type: SET_ACTIVE_PLOT,\n    plotID: plot ? typeof(plot) == \"string\" ? plot : plot.id : undefined\n})\n\nexport const setActiveTab = (tab) => ({\n    type: SET_ACTIVE_TAB,\n    activeTab: tab\n})\n\nexport const clearSession = () => ({\n    type: CLEAR_SESSION,\n})\n\nexport const setActiveStructs = (structs) => ({\n    type: SET_ACTIVE_STRUCTS,\n    structs: structs\n})\n\nexport const deactivateStruct = (structID) => ({\n    type: DEACTIVATE_STRUCT,\n    structID\n})\n\nexport const informLoadingPlot = (plot) => ({\n    type: START_LOADING_PLOT,\n    plot\n})\n\nexport const informLoadedPlot = (plotID) => ({\n    type: END_LOADING_PLOT,\n    plotID\n})\n\nexport const setActivePage = (pageName) => ({\n    type: SET_ACTIVE_PAGE,\n    pageName\n})\n\nexport const setNewPlotables = (newPlotables) => ({\n    type: SET_PLOTABLES,\n    newPlotables\n})\n\nexport const setActivePlotables = (plotables) => ({\n    type: SET_ACTIVE_PLOTABLES,\n    plotables\n})\n\nexport const deactivatePlotable = (plotableID) => ({\n    type: DEACTIVATE_PLOTABLE,\n    plotableID\n})\n\nexport const setPlotablePlots = (plotableID, chosenPlots) => ({\n    type: SET_PLOTABLE_PLOTS,\n    plotableID,\n    chosenPlots\n})\n\n\n\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\n\nexport default class Text extends Component {\n    render() {\n\n        const value = this.props.value || \"\"\n\n        const label = this.props.label || (this.props.setting ? this.props.setting.name : \"\")\n\n        return (\n            <TextField\n                variant=\"outlined\"\n                value={value}\n                onChange={(e) => this.props.onChange(e.target.value)}\n                label={label}\n                style={{width: \"100%\", ...this.props.style}}\n                {...(this.props.inputField ? this.props.inputField.params : this.props.params)}/>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { toast } from 'react-toastify'\n\nimport TextInput from \"../settings/inputFields/TextInput\"\nimport { Button } from '@material-ui/core'\nimport PythonApi from '../../apis/PythonApi'\n\nexport class Prompt extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            value: \"\"\n        }\n\n        if (props.controlClose){\n            props.controlClose(props.closeToast)\n        }\n    }\n\n    componentWillUnmount(){\n        this.props.callback(this.state.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{paddingBottom: 10}}>{this.props.content}</div>\n                <TextInput value={this.state.value} onChange={(value) => {this.setState({value})}} label={this.props.inputProps.label}/>\n                <Button onClick={this.props.closeToast}>Submit</Button>\n            </div>\n        )\n    }\n\n}\n\nconst prompt = (content, callback, props) => {\n\n    toast(<Prompt content={content} callback={callback} {...props}/>, {autoClose: false, closeOnClick: false, onClose: (arg) => {console.warn(arg)} })\n\n}\n\nexport const connectionPrompt = (currentAddress, callback, props) => {\n\n    const content = <div>\n        <div>{\"Couldn't connect to \" + currentAddress}</div>\n        <div>Do you want to specify a different address for the API?</div>\n        <div> (http(s)://host:port)</div>\n    </div>\n\n    prompt(content, callback, {inputProps: {label: \"New address\" }, ...props})\n\n}\n\nexport const authPrompt = (callback, props) => {\n\n    const content = <div>\n        <div>Authorization is required</div>\n        <div>We need you to provide your username:</div>\n    </div>\n\n    prompt(content, callback, { inputProps: { label: \"Username\" }, ...props })\n\n} \n\nexport default prompt;\n","import io from 'socket.io-client';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport toastPrompt, {connectionPrompt} from '../components/prompts/Prompt';\n\nexport class PythonApi {\n\n    constructor() {\n\n        this.apiAddress = 'http://localhost:4000'\n        this.user = undefined\n\n        this.listeners = []\n        this.setupListeners()\n\n        this.connect()\n\n        /*This can be dangerous in the browser if the user let's other websites\n        access this tab. By default it is not possible, one would have to download\n        an extension to make it possible, but still. */ \n        document.api = this\n\n    }\n\n    connect = (address) => {\n\n        if (address) this.apiAddress = address\n\n        this.externalListeners = {}\n\n        this.socket = io(this.apiAddress);\n        this.listeners.forEach(listener => this.socket.on(...listener))\n\n        // Timeout to prompt the user for a new api address if the socket fails to connect\n        this.connectionTimeOut = setTimeout(() => {\n\n            connectionPrompt(this.apiAddress, (newAddress) => {\n                if (newAddress) {\n                    this.apiAddress = newAddress.trim()\n                }\n                if (!this.socket.connected){\n                    this.disconnect()\n                    this.connect()\n                }\n\n            }, {controlClose: (close) => this.onConnect(close)})\n            \n        }, 3000)\n\n        this.socket.connect()\n\n    }\n\n    disconnect = () => {\n        this.socket.disconnect()\n    }\n\n    on = (...args) => {\n\n        if (this.socket){\n            this.socket.on(...args)\n        }\n        // In this way all the listeners are registered each time\n        // The socket changes\n        this.listeners.push(args)\n    }\n\n    onConnect = (...args) => {\n        this.on('connect', ...args)\n    }\n\n    onDisconnect = (...args) => {\n        this.on('disconnect', ...args)\n    }\n\n    setupListeners = () => {\n\n        this.on('connect', () => {\n            //document.dispatchEvent(new Event('socket_connect'))\n            clearTimeout(this.connectionTimeOut)\n            this.requestSession()\n        });\n\n        this.on('disconnect', () => {\n            this.disconnect()\n            this.connect()\n        });\n\n        this.on('auth_required', this.askForAuth)\n\n        this.on('logged_in', this.requestSession)\n\n        this.on('error', (err) => this.handleError(err, \"socket\"));\n\n        this.on('server_error', (err) => this.handleError(err, \"server\"));\n        \n        this.on('current_session', (session) => {\n            document.dispatchEvent(new CustomEvent(\"syncWithSession\", { detail: { session } }))\n        })\n\n        this.on('loading_plot', (info) => {\n            document.dispatchEvent(new CustomEvent(\"loadingPlot\", { detail: info }))\n        })\n\n        this.on('plot', (plot) => {\n            document.dispatchEvent(new CustomEvent(\"plot\", { detail: { plot } }))\n        })\n\n    }\n\n    handleError = (err, type) => {\n        if (type == \"server\"){\n            toast.error(\"THERE WAS A PYTHON ERROR:\\n\" + err)\n        } else {\n            toast.error(err)\n        }\n        \n    }\n\n    askForAuth = () => {\n\n        if (this.authenticating) return\n\n        this.authenticating = true\n        toastPrompt((username) => {\n            this.socket.emit(\"login\", username)\n            this.authenticating = false\n        })\n    }\n\n    requestSession = (path) => {\n        this.socket.emit('request_session', path)\n    }\n\n    loadSession = (path) => {\n        this.requestSession(path)\n    }\n\n    newProcessId = uuidv4\n\n    _sessionMethod = (methodName, kwargs, callback, ...args) => {\n        /* With this you can call any session method\n        \n        However this method should not be directly used.\n        A new method should be defined in this class to avoid \n        headaches with changes in method names in sisl.viz.Session\n        \n        You have the possibility to set up a callback, but remember that \n        by default the session will be emitted by the server and its update\n        is automatic. Therefore, only use the callback if you are using a\n        \"getter\" method and you want to act according to the results. You may\n        want also to inform the user that the process has finished. But again,\n        this behavior should also be taken care of automatically.*/\n\n        if (callback) {\n            \n        }\n\n        this.socket.emit(\"apply_method_on_session\", methodName, kwargs, ...args)\n    }\n\n    updateSessionSettings = (newSettings) => {\n        this._sessionMethod(\"update_settings\", newSettings)\n    }\n\n    undoSessionSettings = () => {\n        this._sessionMethod(\"undo_settings\")\n    }\n\n    addTab = (tabName) => {\n        this._sessionMethod(\"add_tab\", {name: tabName})\n    }\n\n    removeTab = (tabID) => {\n        this._sessionMethod(\"remove_tab\", {tabID})\n    }\n\n    updateTab = (tabID, newParams) => {\n        this._sessionMethod(\"update_tab\", { tabID, newParams })\n    }\n\n    setTabLayouts = (tabID, layouts) => {\n        this.updateTab(tabID, {layouts})\n    }\n\n    saveSession = (path) => {\n        this._sessionMethod(\"save\", {path})\n    }\n\n    getPlot = (plotID) => {\n        document.dispatchEvent(new CustomEvent(\"updatingPlot\", {detail: {plot_id: plotID}}))\n        this.socket.emit(\"get_plot\", plotID)\n    }\n\n    newPlot = (newPlotKwargs) => {\n        this._sessionMethod(\"new_plot\", newPlotKwargs)\n    }\n\n    removePlot = (plotID) => {\n        this._sessionMethod(\"remove_plot\", null, null, plotID)\n    }\n\n    movePlot = (plotID, tab) => {\n        this._sessionMethod(\"move_plot\", null, null, plotID, tab)\n    }\n\n    mergePlots = (plotIDs, to) => {\n        this._sessionMethod(\"merge_plots\", {to}, null, plotIDs)\n    }\n\n    _plotMethod = (plotID, methodName, kwargs, callback, ...args) => {\n        this._sessionMethod(\"_run_plot_method\", kwargs, callback, plotID, methodName, ...args)\n    }\n\n    showPlotFullScreen = (plotID) => {\n        this._plotMethod(plotID, \"show\")\n    }\n\n    updatePlotSettings = (plotID, settings) => {\n        this._plotMethod(plotID, \"update_settings\", settings)\n    }\n\n    undoPlotSettings = (plotID) => {\n        this._plotMethod(plotID, \"undo_settings\")\n    }\n\n    updatePlotLayout = (plotID, layoutUpdates) => {\n        this._plotMethod(plotID, \"update_layout\", layoutUpdates)\n    }\n\n    updateFigure = (plotID, {layout, data, frames, overwrite}) => {\n        this._plotMethod(plotID, \"update\", {layout, data, frames, overwrite})\n    }\n\n    callPlotShortcut = (plotID, sequence) => {\n        this._plotMethod(plotID, \"call_shortcut\", null, null, sequence)\n    }\n\n    dispatchPlotEvent = (plotID, event, data) => {\n        this._plotMethod(plotID, 'dispatch_event', data, null, event)\n    }\n\n    sendFile = (file) => {\n        this.socket.emit(\"upload_file\", file, file.name)\n    }\n\n}\n\nexport default new PythonApi();","import _ from 'lodash'\n\nexport const GLOBAL_HOT_KEYS = {\n\n    //HELP\n    SHOW_AVAIL_HOTKEYS:{\n        name: \"Show available hotkeys\",\n        sequence: \"shift+?\"\n    },\n\n    //NAVIGATION\n    GO_TO_SETTINGS: {\n        name: \"Go to settings\",\n        sequence: \"shift+s\",\n    },\n    GO_TO_DASHBOARD: {\n        name: \"Go to the plot's dashboard\",\n        sequence: \"shift+d\",\n    },\n    GO_TO_MOLECULEVIEWER: {\n        name: \"Go to the molecule viewer\",\n        sequence: \"shift+m\",\n    },\n\n    //SESSION\n    SAVE_SESSION: {\n        name: \"Save session\",\n        sequences: [\"ctrl+shift+s\", \"ctrl+alt+s\"]\n    },\n    LOAD_SESSION: {\n        name: \"Load session\",\n        sequences: [\"ctrl+shift+l\", \"ctrl+alt+l\"]\n    }\n\n}\n\nexport const ADDITIONAL_GLOBAL_HOT_KEYS = {\n    settings: {\n\n    },\n    plots:{\n        \n\n    }\n}\n\nexport const SETTINGS_HOT_KEYS = {\n\n}\n\nexport const TABS_HOT_KEYS = {\n    global: {\n        // TAB NAVIGATION\n        MOVE_TO_NEXT_TAB: {\n            name: \"Move to next tab\",\n            sequence: \"shift+t+right\",\n        },\n        MOVE_TO_PREVIOUS_TAB: {\n            name: \"Move to previous tab\",\n            sequence: \"shift+t+left\",\n        },\n        NEW_TAB: {\n            name: \"New tab\",\n            sequence: \"shift+t\",\n            action: \"keyup\"\n        },\n        TRY: \"shift+t+r\"\n    }\n}\n\nexport const PLOTS_HOT_KEYS = {\n    global: {\n        // TAB NAVIGATION\n        MOVE_TO_NEXT_TAB: {\n            name: \"Move to next tab\",\n            sequence: \"shift+right\",\n        },\n        MOVE_TO_PREVIOUS_TAB: {\n            name: \"Move to previous tab\",\n            sequence: \"shift+left\",\n        },\n    }\n}\n\nexport const PLOT_CARD_HOT_KEYS = {\n\n    GO_TO_PLOT_SETTINGSEDITING: {\n        name: \"Edit current plot's settings\",\n        sequence: \"s\"\n    },\n    GO_TO_PLOT_LAYOUTEDITING: {\n        name: \"Edit current plot's layout\",\n        sequence: \"e\"\n    },\n    GO_TO_PLOT_METHODS: {\n        name: \"Go to current plot methods\",\n        sequence: \"m\"\n    },\n    FULL_SCREEN: {\n        name: \"See current plot in full screen in a different browser's tab\",\n        sequence: \"f\"\n    },\n    REMOVE_PLOT: {\n        name: \"Remove current plot\",\n        sequences: [\"del\",\"backspace\"]\n    },\n    UNDO_PLOT_SETTINGS: {\n        name: \"Undo current plot settings\",\n        sequence: \"ctrl+z\"\n    },\n\n}\n\nexport const STRUCTURE_PICKER_HOT_KEYS = {\n\n}\n\nexport const SETTING_CONTAINER_HOT_KEYS = {\n\n    MOVE_EXPANDED_UP:{\n        name: \"Expand the previous settings group\",\n        sequence: \"up\"\n    },\n    MOVE_EXPANDED_DOWN:{\n        name: \"Expand the next settings group\",\n        sequence: \"down\"\n    }\n\n}\n\nexport const SETTING_GROUP_HOT_KEYS = {\n\n    SUBMIT_SETTINGS:{\n        name: \"Submit this group's settings\",\n        sequence: \"shift+enter\"\n    },\n    \n}\n\nexport const PLOT_TWEAKING_HOT_KEYS = {\n    global:{\n        UNDO_SETTINGS: {\n            name:\"Undo settings\",\n            sequence: \"ctrl+z\"\n        },\n\n        SUBMIT_ALL_SETTINGS: {\n            name: \"Submit all settings\",\n            sequence: \"shift+enter\"\n        }\n    }\n}","import React, { Component } from 'react'\nimport Plot from 'react-plotly.js';\nimport Card from \"@material-ui/core/Card\"\nimport { AiOutlineEdit, AiOutlineDelete, AiOutlineExport, AiOutlineFullscreen } from 'react-icons/ai'\nimport { FaHammer } from 'react-icons/fa'\nimport { MdSettings } from 'react-icons/md'\nimport { IconContext } from 'react-icons'\n\nimport ReactTooltip from \"react-tooltip\"\n\nimport _ from \"lodash\"\nimport {unflatten} from \"flat\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setActivePlot, removePlot, setSessionTabs, setActivePage, addPlots} from \"../../redux/actions\"\nimport PythonApi from '../../apis/PythonApi';\nimport { HotKeys } from 'react-hotkeys';\nimport { PLOT_CARD_HOT_KEYS } from '../../utils/hotkeys';\nimport { toast } from 'react-toastify';\n\nclass PlotCard extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isLoading: false,\n        }\n\n    }\n\n    hotKeys = () => document.querySelectorAll(\".plotCardHotKeys\")\n\n    hotKeysHandlers = {\n        GO_TO_PLOT_LAYOUTEDITING: () => this.goToPlotLayoutEditing(),\n        GO_TO_PLOT_SETTINGSEDITING: () => this.goToPlotSettingsEditing(),\n        GO_TO_PLOT_METHODS: () => this.goToPlotMethods(),\n        FULL_SCREEN: () => this.showPlotFullScreen(),\n        UNDO_PLOT_SETTINGS: () => this.undoSettings(),\n        REMOVE_PLOT: () => this.removePlot(),\n    }\n\n    callPlotShortcut = (sequence) => {\n        toast.warn(\"Applying \" + this.props.plot.shortcuts[sequence].name + \" shortcut\")\n        PythonApi.callPlotShortcut(this.props.plot.id, sequence)\n    }\n\n    handlePlotClick = ({points}) => {\n        const data = _.omit(points[0], [\"data\", \"fullData\", \"xaxis\", \"yaxis\"])\n        console.warn(data)\n        PythonApi.dispatchPlotEvent(this.props.plot.id, \"click\", data)\n    }\n\n    handlePlotRelayout = (layoutUpdates) => {\n        if (layoutUpdates[\"scene.camera\"]) return\n\n        const keys = Object.keys(layoutUpdates)\n        if (keys.includes(\"autosize\")) return \n        else if (keys.length == 0) return\n        else {\n            PythonApi.updatePlotLayout(this.props.plot.id, layoutUpdates)\n        }\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoPlotSettings(this.props.plot.id)\n    }\n\n    componentDidMount(){\n        document.addEventListener(\"plotResize\", (e) => {\n            \n            if (e.detail.id == this.props.plot.id || e.detail.id == \"all\"){\n                this.setState({cou: Math.random()})          \n            }\n            \n        })\n    }\n\n    removePlot = () => {\n        PythonApi.removePlot(this.props.plot.id)   \n    }\n\n    goToPlotSettingsEditing = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotTweaking\")\n    }\n\n    goToPlotLayoutEditing = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotLayoutEditor\")\n    }\n\n    goToPlotMethods = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotMethods\")\n    }\n\n    setPlotAsActive = () => {\n        this.props.setActivePlot(this.props.plot)\n    }\n\n    togglePlotAsActive = () => {\n        if (this.isActivePlot){\n            this.props.setActivePlot(undefined)\n        } else {\n            this.setPlotAsActive()\n        }\n    }\n\n    get isActivePlot(){\n        return this.props.plot.id == this.props.active.plot\n    }\n\n    showPlotFullScreen = () => {\n        PythonApi.showPlotFullScreen(this.props.plot.id)\n    }\n\n    render() {\n\n        if (this.state.isLoading || !this.props.plot) {\n            return (\n                <Card \n                    className=\"plotcard\"\n                    style={{borderRadius: 15}}>\n                    <div>We are working hard to load your plot.</div>\n                </Card>\n            )\n        }\n\n        let layout = this.props.plot.figure.layout;\n        let backColor = layout.paper_bgcolor || \"white\"\n\n        const hotKeysKeyMap = {\n            ...PLOT_CARD_HOT_KEYS,\n            TESTING: \"shift+r\",\n            ...Object.keys(this.props.plot.shortcuts).reduce((plotShortcuts, sequence) => {\n                let shortcut = this.props.plot.shortcuts[sequence]\n                if ([\"ctrl+z\", \"ctrl+alt+l\"].includes(sequence)) return plotShortcuts\n                    plotShortcuts[shortcut.name.replace(/ /g, \"_\")] = {\n                    sequence: sequence,\n                    ...shortcut\n                }\n                return plotShortcuts\n            }, {})\n        }\n\n        const hotKeysHandlers = {\n            ...this.hotKeysHandlers,\n            ...Object.keys(this.props.plot.shortcuts).reduce((plotShortcuts, sequence) => {\n                let shortcut = this.props.plot.shortcuts[sequence]\n                if ([\"ctrl+z\", \"ctrl+alt+l\"].includes(sequence)) return plotShortcuts\n                plotShortcuts[shortcut.name.replace(/ /g, \"_\")] = () => this.callPlotShortcut(sequence)\n                return plotShortcuts\n            }, {})\n        }\n\n        const activeStyles = this.isActivePlot && false ? {\n            borderStyle: \"dashed\",\n            borderWidth: \"2px\",\n            borderColor: \"black\"\n        } : {}\n\n        return <HotKeys\n                 className=\"plotCardHotKeys\"\n                 //onClick={(e) => {if (e.ctrlKey && false){this.togglePlotAsActive()}}}\n                 component={Card}\n                 elevation={this.props.elevation || 1}\n                 keyMap={hotKeysKeyMap} handlers={hotKeysHandlers} allowChanges={true}\n                 style={ {width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"column\", borderRadius: 3, overflow:\"hidden\", background: backColor, paddingTop: 5, ...activeStyles, ...this.props.style}}>\n                <div style={{flex:1}}>\n                    <Plot\n                        ref={plotlyRef => {\n                            this.plotlyRef = plotlyRef;\n                        }}\n                        useResizeHandler\n                        style={{ width: \"100%\", height: \"100%\"}}\n                        data={this.props.plot.figure.data}\n                        layout={{autosize: true, ...layout}}\n                        frames={this.props.plot.figure.frames}\n                        onClick={this.handlePlotClick}\n                        onRelayout={this.handlePlotRelayout}\n                        onUpdate={(figure) => {}}//PythonApi.updateFigure(this.props.plot.id, figure)}\n                    config={{editable: true, responsive: true}}\n                    />\n                </div>\n                \n            <div style={{ display: \"flex\", paddingLeft: 10, paddingRight: 20, background: backColor}} className=\"card-action\">\n                <IconContext.Provider value={{ size: 25, style: { margin: 5 }, color: \"#6eb6ff\"}}>\n                    <div style={{flex:1, textAlign: \"left\"}}>\n                        <a data-tip=\"Full screen (f)\" href=\"#\" onClick={this.showPlotFullScreen}><AiOutlineFullscreen/></a> \n                    </div>\n\n                    <div>\n                        <a\n                            data-tip=\"Settings (s)\"\n                            href=\"#\"\n                            onClick={this.goToPlotSettingsEditing}><MdSettings /></a>\n                        <a\n                            data-tip=\"Methods (m)\"\n                            href=\"#\"\n                            onClick={this.goToPlotMethods}><FaHammer/></a>\n                        <a\n                            data-tip=\"Edit layout (e)\"\n                            href=\"#\"\n                            onClick={this.goToPlotLayoutEditing}><AiOutlineEdit/></a>\n                        <span data-tip=\"Export data (comming soon)\" href=\"#\"><AiOutlineExport color=\"#ccc\"/></span>\n                        <a data-tip=\"Remove (supr)\" href=\"#\" onClick={this.removePlot}><AiOutlineDelete color=\"red\"/></a>\n                    </div> \n                </IconContext.Provider>\n                <ReactTooltip disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false} /> \n            </div>\n        </HotKeys>\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    active: state.active,\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setSessionTabs,\n    setActivePlot,\n    removePlot,\n    setActivePage,\n    addPlots\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotCard);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport PythonApi from '../../apis/PythonApi'\nimport { setActiveTab } from '../../redux/actions'\n\nimport { MdRemoveCircle } from 'react-icons/md'\n\nimport _ from \"lodash\"\n\nclass Tab extends Component {\n\n    updateTabs = (tabs) => {\n        document.dispatchEvent(new CustomEvent(\"updateTabs\", {detail: {tabs: tabs}}))\n    }\n\n    updateTabParams = (tabID, newTabParams) => {\n\n        PythonApi.updateTab(tabID, newTabParams)\n    }\n\n    removeTab = (tabID) => {\n\n        PythonApi.removeTab(tabID)\n\n    }\n\n    updateTabName = (e) => {e.target.blur(); this.updateTabParams(e.target.id, {name: e.target.textContent})}\n\n    render() {\n\n        let {id: tabID, name: tabName} = this.props.tab\n\n        let active = tabID == this.props.active.tab\n\n        return (\n            <div\n                    key={tabID}\n                    className={active ? \"active plotTab\" : \"plotTab\"}\n                    onClick={active ? null : ()=> this.props.setActiveTab(tabID)}>\n                <div\n                    id={tabID}\n                    contentEditable={active}\n                    \n                    onBlur={this.updateTabName}\n                    onKeyUp={(e) => {if (e.keyCode === 13) this.updateTabName(e)}}\n                    >{tabName}</div>\n                {active ? <div className=\"removeTabBut\" onClick={() => this.removeTab(tabID)}><MdRemoveCircle size={20}/></div> : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    active: state.active,\n    tabs: state.tabs,\n})\n\nconst mapDispatchToProps = {\n    setActiveTab\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tab);\n","import React, { Component } from 'react'\nimport Tab from './Tab'\nimport { setActiveTab } from '../../redux/actions'\nimport PythonApi from '../../apis/PythonApi'\nimport { connect } from 'react-redux'\nimport { MdCreateNewFolder, MdAddCircle} from 'react-icons/md'\n\nimport _ from \"lodash\"\nimport { GlobalHotKeys, HotKeys } from 'react-hotkeys'\nimport { TABS_HOT_KEYS } from '../../utils/hotkeys'\nimport { Button } from '@material-ui/core'\n\nexport class Tabs extends Component {\n\n    hotKeysHandlers = {\n        MOVE_TO_NEXT_TAB: () => this.moveThroughTabs(\"right\"),\n        MOVE_TO_PREVIOUS_TAB: () => this.moveThroughTabs(\"left\"),\n        NEW_TAB: () => this.newTab(),\n        TRY: () => console.warn(\"YES\")\n    }\n    \n    moveThroughTabs = (direction) => {\n\n        const tabs = this.props.tabs\n        const i = _.findIndex(tabs, [\"id\", this.props.active.tab])\n\n        var newI;\n        if (direction == \"left\"){\n            newI = i != 0 ? i-1 : tabs.length -1\n        } else if (direction == \"right\"){\n            newI = i != tabs.length - 1 ? i+1 : 0 \n        }\n\n        this.props.setActiveTab(tabs[newI].id)\n    }\n\n    updateTabs = (tabs) => {\n        document.dispatchEvent(new CustomEvent(\"updateTabs\", {detail: {tabs: tabs}}))\n    }\n\n    newTab = () => {\n\n        PythonApi.addTab()\n        \n    }\n\n    noTabsMessage = () => {\n        return <div style={{paddingLeft: 20}}>\n            <span style={{color: \"darkred\"}}>You don't seem to have any tab. </span>\n            That's wierd, but if that's what you want...\n        </div>\n    }\n\n    render() {\n\n        const tabs = this.props.tabs || []\n\n        return (\n            <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems:\"center\", marginTop: 10, marginBottom: 5}}>\n                <GlobalHotKeys keyMap={TABS_HOT_KEYS.global} handlers={this.hotKeysHandlers}/>\n                {tabs.length == 0 ? \n                    this.noTabsMessage()\n                    :\n                    tabs.map( tab => <Tab tab={tab}/>)\n                }\n                <MdAddCircle onClick={this.newTab} data-tip=\"New tab\" data-place=\"right\" color=\"green\" size={20} className=\"newTabIcon\"/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.session.tabs,\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n    setActiveTab\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabs);\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\"\n\n//--Components\nimport PlotCard from \"./PlotCard\";\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setTabPlots, setSessionTabs, setActivePlot} from \"../../redux/actions\"\nimport PythonApi from \"../../apis/PythonApi\";\n\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport { Checkbox, Paper, Button } from '@material-ui/core';\n\nimport 'react-grid-layout/css/styles.css'\nimport'react-resizable/css/styles.css'\n\nimport { HotKeys, withHotKeys, GlobalHotKeys } from \"react-hotkeys\";\nimport { PLOTS_HOT_KEYS, ADDITIONAL_GLOBAL_HOT_KEYS } from \"../../utils/hotkeys\";\nimport Tabs from \"../tabs/Tabs\";\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nconst selectedPlotStyles = { backgroundColor: \"#757eff\",  paddingTop: 5, marginTop: -5}\n\nclass PlotDashboard extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this._plotsInLayout = false\n\n    this.state = {\n      selected: []\n    }\n\n  }\n\n  static defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function() {},\n    cols: { lg: 12, md: 12, sm: 6, xs: 4, xxs: 2 },\n  };\n\n  state = {\n    currentBreakpoint: \"lg\",\n    compactType: \"vertical\",\n    mounted: false,\n    layouts: { lg: [] }\n  };\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n    this.props.setActivePlot(undefined)\n  }\n\n  emptyDashboard = () => {\n    return null\n  }\n\n  noTabsMessage = () => {\n    return null\n  }\n\n  noPlotsMessage = () => {\n    //className=\"attentionLeft\"\n    return <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\"}}>\n      <div style={{fontSize: \"5em\", fontWeight: \"bold\"}}>This is the plots dashboard.</div>\n      <div style={{fontSize: \"1.2em\"}}>We would like to display your plots here, but currently you don't seem to have any</div>\n      <div style={{backgroundColor: \"white\",  fontSize: \"2em\", margin: 20, padding: 20, paddingLeft: 50, paddingRight: 50, borderRadius: 70}}> You can try to create one by clicking on your structures</div>\n    </div>\n  }\n\n  static newPlotLayout = (plot, layouts) => {\n    return {\n      x: plot.grid_dims[0]*(layouts.lg.length),\n      y: 2,\n      w: plot.grid_dims[0],\n      h: plot.grid_dims[1],\n      i: plot.id,\n    };\n  }\n\n  generateDOM(layouts, plots, selected, toggleSelect) {\n    return _.map(layouts, function(l, i) {\n      return <div key={plots[i].id} onClick={(e) => e.ctrlKey ? toggleSelect(plots[i].id) : null}> \n        <PlotCard \n          plot={plots[i]} \n          style={selected.includes(plots[i].id) ? selectedPlotStyles : {}}/>\n      </div>\n    });\n  }\n\n  toggleSelected = (plotID) => {\n\n    let selected;\n\n    if (this.state.selected.includes(plotID)){\n      selected = this.state.selected.filter(id => id != plotID)\n    } else {\n      selected = [...this.state.selected, plotID]\n    }\n\n    this.setState({selected})\n  }\n\n  onBreakpointChange = (breakpoint) => {\n    document.dispatchEvent(new CustomEvent(\"plotResize\", {detail: {id: \"all\"}}))\n  };\n\n  onResizeStop = (layouts, finalL, initL) => {\n    document.dispatchEvent(new CustomEvent(\"plotResize\", {detail: {id: initL.i, higher: finalL.h > initL.h}}))\n  }\n\n  shouldComponentUpdate = (newProps) => {\n\n    if( !this._plotsInLayout ) return true\n\n    const isDifferentTab = newProps.active.tab != this.props.active.tab\n    let hasDifferentPlots;\n    if (!isDifferentTab){\n      let tab = _.find(this.props.tabs, [\"id\", this.props.active.tab])\n      let newTab = _.find(newProps.tabs, [\"id\", newProps.active.tab])\n\n      if (!tab || !newTab) return true\n      else if (!tab.layouts || !newTab.layouts) return true\n      else if (_.isEqual(tab.layouts, newTab.layouts)) return true\n      else if (! _.isEqual(this._plotsInLayout, newTab.plots)) return true\n\n      hasDifferentPlots = ! _.isEqual(tab.plots, newTab.plots)\n    }\n    \n    return isDifferentTab || hasDifferentPlots\n  }\n\n  onLayoutChange = (layout, layouts) => {\n    this.props.onLayoutChange(layout, layouts);\n\n    PythonApi.setTabLayouts(this.props.active.tab, layouts)\n  };\n\n  onDrop = (elemParams) => {\n    alert(`Element parameters: ${JSON.stringify(elemParams)}`);\n  };\n\n  getLayout = () => {\n    if (!this.props.active.tab ) return this.noTabsMessage()\n\n    let tab = _.find(this.props.tabs, [\"id\", this.props.active.tab])\n\n    if (!tab) return this.noTabsMessage()\n    if (tab.plots.length == 0) return this.noPlotsMessage()\n    \n    let plots = tab.plots.map(plotID => this.props.plots[plotID])\n\n    plots = plots.filter( plot => plot)\n\n    // Wait for all plots to draw a first layout\n    // THIS IS KEY in order to avoid the layout going crazy\n    if (plots.length != tab.plots.length) return null\n\n    let layouts = tab.layouts\n\n    if (layouts.lg.length != plots.length){\n      layouts.lg = plots.map(plot => {\n        let layout = _.find(layouts.lg, [\"i\", plot.id])\n        return layout || PlotDashboard.newPlotLayout(plot, layouts)\n      })\n    }\n\n    this._plotsInLayout = tab.plots\n\n    return (\n      <ResponsiveReactGridLayout\n        {...this.props}\n        layouts={layouts}\n        onBreakpointChange={this.onBreakpointChange}\n        onLayoutChange={this.onLayoutChange}\n        onDrop={this.onDrop}\n        onResizeStop={this.onResizeStop}\n        draggableCancel=\".infolayer, .draglayer, .shapelayer, #scene\" //Avoids plot being dragged when zooming and other drag actions\n        // WidthProvider option\n        measureBeforeMount={false}\n        // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n        // and set `measureBeforeMount={true}`.\n        useCSSTransforms={this.state.mounted}\n        compactType={this.state.compactType}\n        preventCollision={!this.state.compactType}\n        rowHeight={10}\n      >\n        {this.generateDOM(layouts.lg, plots, this.state.selected, this.toggleSelected)}\n      </ResponsiveReactGridLayout>\n    )\n\n  }\n\n  mergePlots = (to) => {\n    PythonApi.mergePlots(this.state.selected, to)\n    this.setState({selected: []})\n  }\n\n  removePlots = () => {\n    this.state.selected.forEach(plotID => PythonApi.removePlot(plotID))\n    this.setState({ selected: [] })\n  }\n\n  movePlots = () => {\n    // For now, we will just move the plots to the next tab\n    // (testing if it works)\n    let iTab = _.findIndex(this.props.tabs, [\"id\", this.props.active.tab ]) + 1\n    if (this.props.tabs.length == iTab) iTab = 0\n\n    console.warn(iTab)\n\n    this.state.selected.forEach(plotID => PythonApi.movePlot(plotID, this.props.tabs[iTab].id ))\n    this.setState({ selected: [] })\n  }\n\n  renderSelectedManager = () => {\n\n    const nSelected = this.state.selected.length\n\n    if (nSelected == 0) return null\n\n    const availableMerges = [\n      {\"to\": \"multiple\"}, {\"to\": \"subplots\"}, {\"to\": \"animation\"}\n    ]\n\n    return <Paper style={{padding: 10, marginBottom: 10}} elevation={3}>\n      {`You have ${nSelected} plots selected. What do you want to do?`}\n      <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n        {nSelected > 1 ? availableMerges.map(\n          merge => <Button onClick={() => this.mergePlots(merge.to)}>{`Merge as ${merge.to}`}</Button>) \n        : null}\n        <Button onClick={this.removePlots}>Remove</Button>\n        <Button onClick={this.movePlots}>Move to other tab</Button>\n      </div>\n    </Paper>\n  }\n\n  render() {\n\n    // We will reuse some of the tabs hot keys handlers\n    const tabs = <Tabs/>\n    const handlers = {...this.hotKeysHandler, ..._.pick(tabs.hotKeysHandler, [\"MOVE_TO_NEXT_TAB\", \"MOVE_TO_PREVIOUS_TAB\"]) }\n\n    // eslint-disable-next-line no-unused-vars\n    return (\n      <div style={{padding: 10, ...this.props.style}} className=\"scrollView\">\n        <GlobalHotKeys keyMap={PLOTS_HOT_KEYS.global} handlers={handlers}/>\n        {this.renderSelectedManager()}\n        {this.getLayout()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  plots: state.plots,\n  structures: state.session.structures,\n  tabs: state.session.tabs,\n  active: state.active,\n  session: state.session\n})\n\nconst mapDispatchToProps = {\n  setSessionTabs,\n  setTabPlots,\n  setActivePlot\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withHotKeys(PlotDashboard));","import React, { Component } from 'react'\n\nexport default class StructureTag extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {}\n    }\n\n    render() {\n\n        return (\n            <div \n                className={\"structTag \" + (this.props.struct.selected ? \"active\" : \"\")} \n                onClick={this.props.toggleStruct}\n                data-tip={this.props.struct.path}\n                data-effect=\"solid\">\n                <div>{this.props.struct.name.replace(\".fdf\", \"\")}</div>\n                <div style={{fontSize: \"0.7em\", color: \"gray\"}}>{\".../\" + this.props.struct.path.split(\"/\").slice(-2,-1)[0]}</div>\n            </div>\n        )\n    }\n}\n\n\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nimport { FaSave} from 'react-icons/fa'\nimport { AiOutlineUpload } from 'react-icons/ai'\nimport { setActivePage } from '../../redux/actions'\n\nimport PythonApi from '../../apis/PythonApi'\nimport { ROUTES } from './NavigateButton'\n\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { GLOBAL_HOT_KEYS } from '../../utils/hotkeys'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        transform: 'translateZ(0px)',\n        flexGrow: 1,\n    },\n    exampleWrapper: {\n        position: 'relative',\n        marginTop: theme.spacing(3),\n    },\n    radioGroup: {\n        margin: theme.spacing(1, 0),\n    },\n    speedDial: {\n        position: 'absolute',\n        '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n        },\n        '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n            top: theme.spacing(2),\n            left: theme.spacing(2),\n        },\n    },\n}));\n\nfunction SpeedDials(props) {\n    const classes = useStyles();\n    const [direction, setDirection] = React.useState('left');\n    const [open, setOpen] = React.useState(false);\n    const [hidden, setHidden] = React.useState(false);\n\n    const handleDirectionChange = (event) => {\n        setDirection(event.target.value);\n    };\n\n    const handleHiddenChange = (event) => {\n        setHidden(event.target.checked);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <SpeedDial\n            ariaLabel=\"SpeedDial example\"\n            className={classes.speedDial}\n            hidden={hidden}\n            icon={<SpeedDialIcon />}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            open={open}\n            direction={direction}\n        >\n            {props.actions.map((action) => (\n                <SpeedDialAction\n                    key={action.name}\n                    icon={action.icon}\n                    tooltipTitle={action.tip || action.name}\n                    tooltipPlacement={\"top\"}\n                    onClick={action.onClick}\n                />\n            ))}\n        </SpeedDial>\n    );\n}\n\nclass Controls extends Component {\n\n    hotKeysHandler = {\n        SAVE_SESSION: () => this.saveCurrentSession(),\n        LOAD_SESSION: () => this.loadSession()\n    }\n\n    syncWithSession = (session) => {\n        document.dispatchEvent(new CustomEvent(\"syncWithSession\", {detail: {session}}))\n    }\n\n    showPage = (pageName) => {\n        this.props.setActivePage(pageName)\n    }\n\n    saveCurrentSession = () => {\n        let path = prompt(\"Please provide the path to save the session.\\n\\nRoot directory:\\n\" + this.props.session.settings.rootDir)\n        if (!path) return \n\n        PythonApi.saveSession(path)\n    }\n\n    loadSession = () => {\n\n        let path = prompt(\"Please provide the path of the saved session.\\n\\nRoot directory:\\n\" + this.props.session.settings.rootDir)\n        if (!path) return\n\n        PythonApi.loadSession(path)\n    }\n\n    render() {\n\n        const margins = { marginRight: 20, padding: 0, display:\"flex\", justifyContent: \"center\", alignItems: \"center\"}\n\n        const actions = [{\n            name: \"Save session\",\n            icon: <FaSave size={20} />,\n            onClick: this.saveCurrentSession\n        }, {\n            name: \"Load session\",\n                icon: <AiOutlineUpload size={20} />,\n            onClick: this.loadSession\n        }]\n\n        return <SpeedDials actions={actions} />\n    }\n}\n\nexport class Control extends Component {\n\n    render(){\n        \n        return <Button\n                    data-tip={this.props.tooltip}\n                    style={this.props.style}\n                    floating\n                    icon={this.props.icon}\n                    onClick={this.props.onClick}\n                    className={this.props.className} />\n    }\n}\n\nconst mapStateToProps = state => ({\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setActivePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);\n","import React, { Component } from 'react'\nimport { Control } from './Controls'\nimport { connect } from 'react-redux'\nimport { setActivePage } from '../../redux/actions'\nimport { IoMdSettings } from 'react-icons/io'\nimport { MdDashboard } from 'react-icons/md'\n\nexport const ROUTES = {\n    settings: {\n        name: \"Settings\",\n        icon: <IoMdSettings size={20}/>,\n        color: \"grey\",\n        hotKey: \"Shift + s\",\n    },\n    plots: {\n        name: \"Dashboard\",\n        icon: <MdDashboard/>,\n        color: \"grey\",\n        hotKey: \"Shift + d\"\n    }\n}\n\nclass NavigateButton extends Component {\n\n    showPage = () => {\n        this.props.setActivePage(this.props.to)\n    }\n\n    render() {\n\n        const route = ROUTES[this.props.to]\n\n        return <Control \n            icon={route.icon} \n            className={route.color}\n            tooltip={\"Go to \" + this.props.to + \" (\" + route.hotKey + \")\"}\n            onClick={this.showPage}\n            {...this.props}/>\n    }\n}\n\nconst mapDispatchToProps = {\n    setActivePage\n}\n\nexport default connect(null, mapDispatchToProps)(NavigateButton);\n","import React, { Component } from 'react'\n\nexport default class PlotableTag extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {}\n    }\n\n    render() {\n\n        return (\n            <div \n                className={\"plotableTag \" + (this.props.plotable.selected ? \"active\" : \"\")} \n                onClick={this.props.togglePlotable}\n                data-tip={this.props.plotable.path}\n                data-effect=\"solid\">\n                <div>{this.props.plotable.name}</div>\n                <div style={{fontSize: \"0.7em\", color: \"gray\"}}>{\".../\" + this.props.plotable.path.split(\"/\").slice(-2,-1)[0]}</div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport StructureTag from './StructureTag'\nimport _ from \"lodash\"\nimport { setActiveStructs, setActivePlotables } from '../../redux/actions'\nimport { MdFolder, MdFolderOpen} from 'react-icons/md'\n\nimport { connect } from 'react-redux'\nimport NavigateButton from '../controls/NavigateButton'\nimport PlotableTag from './PlotableTag'\nimport TextField from '@material-ui/core/TextField'\nimport TextInput from '../settings/inputFields/TextInput'\n\nfunction wildTest(wildcard, str) {\n    const re = new RegExp(`^${wildcard.replace(/\\*/g,'.*').replace(/\\?/g,'.')}$`,'i');\n    return re.test(str); // remove last 'i' above to have case sensitive\n}\n\nexport class StructurePicker extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            searchString: \"\",\n            alphabeticSorting: false,\n            selectedSorting: false,\n            searchByFolder: false,\n            displayStructures: true,\n            displayPlotables: false,\n        }\n\n    }\n\n    togglePlotInitializer = (selectedStructs, selectedPlotables) => {\n\n        let forceShow, forceHide;\n\n        if ([...selectedStructs, ...selectedPlotables].length != 0){\n            forceShow = true\n        } else {\n            forceHide = true\n        }\n\n        document.dispatchEvent(new CustomEvent(\"togglePlotInitializer\", {detail: {forceShow, forceHide}}))\n\n    }\n\n    selectStructs = (structs) => {\n        this.props.setActiveStructs(structs)\n        this.togglePlotInitializer(structs, this.selectedPlotables)\n    }\n\n    get selectedStructs(){\n        return this.props.activeStructs || []\n    }\n\n    selectPlotables = (plotables) => {\n        this.props.setActivePlotables(plotables)\n        this.togglePlotInitializer(this.selectedStructs, plotables)\n    }\n\n    get selectedPlotables(){\n        return this.props.activePlotables || []\n    }\n\n    toggleStruct = ({id: structID}) => {\n        \n        //this.setState({selectedStructures: _.xor(this.selectedStructs, [structID])})\n\n        this.selectStructs(_.xor(this.selectedStructs, [structID]))\n      \n    }\n\n    togglePlotable = ({id: plotableID}) => {\n        \n        //this.setState({selectedPlotableures: _.xor(this.selectedPlotables, [PlotableID])})\n\n        this.selectPlotables(_.xor(this.selectedPlotables, [plotableID]))\n      \n    }\n\n    toggleStructDisplay = () => {\n        this.setState({displayStructures: !this.state.displayStructures})\n    }\n\n    togglePlotablesDisplay = () => {\n        this.setState({displayPlotables: !this.state.displayPlotables})\n    }\n\n    toggleAlphabeticSorting = () => {\n\n        const toggles = { [false]: \"asc\", asc: \"desc\", desc: false}\n        this.setState({alphabeticSorting: toggles[this.state.alphabeticSorting]})\n    }\n\n    toggleSearchByFolder = () => {\n\n        this.setState({searchByFolder: !this.state.searchByFolder})\n    }\n\n    toggleSelectedSorting = () => {\n        this.setState({selectedSorting: !this.state.selectedSorting})\n    }\n\n    toggleAll = () => {\n\n        const onDisplay = Object.keys(this.filterStructs())\n\n        const onDisplaySelected = _.intersection([...this.selectedStructs, ...this.selectedPlotables], onDisplay).length == 0\n\n        const displayedStructs = _.intersection(Object.keys(this.props.structures), onDisplay)\n        const displayedPlotables = _.intersection(Object.keys(this.props.plotables), onDisplay)\n\n        this.selectStructs(onDisplaySelected ? \n            [...displayedStructs, ...this.selectedStructs] \n                : \n            this.selectedStructs.filter( structID => !displayedStructs.includes(structID) )\n        )\n\n        this.selectPlotables(onDisplaySelected ? \n            [...displayedPlotables, ...this.selectedPlotables] \n                : \n            this.selectedPlotables.filter( plotableID => !displayedPlotables.includes(plotableID) )\n        )\n\n    }\n\n    filterStructs = (searchString) => {\n\n        searchString = searchString || this.state.searchString\n\n        console.warn(searchString)\n        searchString = searchString.includes(\"*\") || searchString.includes(\"?\") ? searchString : \"*\"+searchString+\"*\"\n\n        let structs = {}\n\n        let toggles = [this.state.displayStructures, this.state.displayPlotables]\n        \n        const structures = this.props.structures || []\n        const plotables = this.props.plotables || []\n        let objs = [structures, plotables]\n\n        //Filter both structures and plotables\n        objs.forEach( (object, index) => {\n\n            if (!toggles[index]) return\n\n            const isPlotable = index == 1\n\n            let newStructs = Object.keys(object).reduce( (structs, structID) => {\n\n                const struct = object[structID]\n    \n                const toTest = this.state.searchByFolder ? struct.path.split(\"/\").slice(-2,-1)[0] : struct.name.replace(\".fdf\", \"\")\n    \n                if (wildTest(searchString, toTest)){\n    \n                    structs[structID] = { \n                        ...struct,\n                        selected: [...this.selectedStructs, ...this.selectedPlotables].includes(structID),\n                        isPlotable,\n                        id: structID,\n                    }\n                }\n    \n                return structs\n            }, {})\n\n            structs = {...structs, ...newStructs}\n\n        })\n\n        return structs\n\n    }\n\n    newSearchString = (searchString) => {\n\n        this.setState({searchString: searchString})\n    }\n\n    noStructuresMessage = () => {\n\n        return <div>\n            <div style={{color: \"darkred\"}}>No structures in the search scope right now.</div>\n            <div>Try to change file system settings or initialize the GUI from a different directory</div>\n            <NavigateButton to=\"settings\" style={{marginTop: 10}}/>\n        </div>\n    }\n\n    noMatchingStructuresMessage = () => {\n        return <div>\n            <div style={{color: \"darkred\"}}>No structure that matches your search.</div>\n            <div>Try to change file system settings or initialize the GUI from a different directory</div>\n            <NavigateButton to=\"settings\" style={{marginTop: 10}}/>\n        </div>\n    }\n\n    render() {\n\n        let structsAndPlotables = this.filterStructs()\n\n        if (this.state.alphabeticSorting){\n            structsAndPlotables = _.orderBy(structsAndPlotables, \"name\", this.state.alphabeticSorting)\n        }\n        if (this.state.selectedSorting){\n            structsAndPlotables = _.orderBy(structsAndPlotables, \"selected\", \"desc\")\n        }\n        \n        return (\n            <div style={{height: \"100vh\", overflow: \"hidden\", display: \"flex\", flexDirection: \"column\", backgroundColor: \"white\", ...this.props.style}}>\n                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginTop: 20, marginBottom: 20 }}>\n                    <TextInput\n                        label=\"Search string\"\n                        autocomplete=\"off\"\n                        placeholder=\"Enter your search string...\"\n                        style={{marginRight: 10}}\n                        value={this.state.searchString} \n                        onChange={this.newSearchString}/>\n                    <div\n                        data-tip=\"Search by folder\"\n                        className={\"structPickerToggle \" + (this.state.searchByFolder ? \"active\" : \"\")}\n                        onClick={this.toggleSearchByFolder} style={{cursor: \"pointer\"}}>{this.state.searchByFolder ? <MdFolder/> : <MdFolderOpen/>}</div>\n                </div>\n                <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: 5}}>\n                    <span\n                        data-tip=\"Show structures\"\n                        className={\"structPickerToggle \" + (this.state.displayStructures ? \"active\" : \"\")} \n                        onClick={this.toggleStructDisplay} style={{cursor: \"pointer\"}}>Struct</span>\n                    <span\n                        data-tip=\"Show plotables\"\n                        className={\"structPickerToggle \" + (this.state.displayPlotables ? \"active\" : \"\")}\n                        onClick={this.togglePlotablesDisplay} style={{cursor: \"pointer\"}}>Plotables</span>\n                </div>\n                <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: 5}}>\n                    <span \n                        className={\"structPickerToggle \" + (this.state.alphabeticSorting ? \"active\" : \"\")} \n                        onClick={this.toggleAlphabeticSorting} style={{cursor: \"pointer\"}}>A-Z</span>\n                    <span\n                        data-tip=\"Show selected first\"\n                        className={\"structPickerToggle \" + (this.state.selectedSorting ? \"active\" : \"\")}\n                        onClick={this.toggleSelectedSorting} style={{cursor: \"pointer\"}}>sel</span>\n                    <span \n                        className=\"structPickerToggle\" \n                        onClick={this.toggleAll} style={{cursor: \"pointer\"}}>All</span>\n                </div>\n\n                {Object.keys({...this.props.structures, ...this.props.plotables}).length == 0 ? \n                    this.noStructuresMessage() : Object.values(structsAndPlotables).length == 0 ? \n                        this.noMatchingStructuresMessage() : null\n                }\n\n                <div className=\"scrollView\" >\n                    {Object.values(structsAndPlotables).map(obj => {\n                        if (obj.isPlotable) {\n                            return <PlotableTag id={obj.id} \n                                plotable={obj} \n                                togglePlotable={ () => this.togglePlotable(obj)}\n                            />\n                        } else {\n                            return <StructureTag id={obj.id} \n                                struct={obj} \n                                toggleStruct={ () => this.toggleStruct(obj)}\n                            />\n                        }\n                        \n                    })}\n                </div>  \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeStructs: state.active.structs,\n    activePlotables: state.active.plotables,\n    plotables: state.session.plotables,\n    structures: state.session.structures\n})\n\nconst mapDispatchToProps = {\n    setActiveStructs,\n    setActivePlotables\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StructurePicker);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Select, { components } from 'react-select'\n\nimport _ from \"lodash\"\n\nconst { ValueContainer, Placeholder } = components;\n\nconst CustomValueContainer = ({ children, ...props }) => {\n    return (\n        <ValueContainer {...props}>\n            <Placeholder {...props} isFocused={props.isFocused}>\n                {props.selectProps.placeholder}\n            </Placeholder>\n            {React.Children.map(children, child =>\n                child && child.type !== Placeholder ? child : null\n            )}\n        </ValueContainer>\n    );\n};\n\nclass PlotTypePicker extends Component {\n\n    render() {\n\n        const plotOptions = this.props.options || this.props.session.plotOptions\n\n        let value;\n\n        if (Array.isArray(this.props.value)){\n            value = this.props.value.map(value => _.find(plotOptions, [\"value\", value]))\n        } else {\n            value = _.find(plotOptions, [\"value\", this.props.value])\n        }\n\n        return (\n            <Select\n                options={plotOptions}\n                placeholder=\"Choose the plot type...\"\n                isClearable isSearchable isMulti\n                onChange={(obj) => this.props.onChange(obj ? obj.value || obj.map(selected => selected.value) : undefined)}\n                value={value}\n                components={{\n                    ValueContainer: CustomValueContainer\n                }}\n                styles={{\n                    container: (provided, state) => ({\n                        ...provided,\n                        marginTop: 20,\n                        marginBottom: 20\n                    }),\n                    valueContainer: (provided, state) => ({\n                        ...provided,\n                        overflow: \"visible\"\n                    }),\n                    placeholder: (provided, state) => ({\n                        ...provided,\n                        position: \"absolute\",\n                        top: state.hasValue || state.selectProps.inputValue ? -15 : \"50%\",\n                        transition: \"top 0.1s, font-size 0.1s\",\n                        fontSize: (state.hasValue || state.selectProps.inputValue) && 13,\n                        color: state.hasValue || state.selectProps.inputValue ? \"blue\" : \"#ccc\",\n                        marginLeft: state.hasValue || state.selectProps.inputValue ? -5 : 0,\n                    })\n                }}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.tabs,\n    active: state.active,\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, null)(PlotTypePicker);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Select from 'react-select'\n\nimport _ from \"lodash\"\n\nclass TabPicker extends Component {\n    render() {\n\n        const options = this.props.tabs.map( (tab) => ({label: tab.name, value: tab.id }))\n        const value = _.find(options, [\"value\", this.props.value])\n        return (\n            <Select\n                placeholder=\"Choose a tab...\"\n                options={options}\n                defaultValue={this.props.active.tab && _.find(this.props.tabs, [\"id\", this.props.active.tab])? {label: _.find(this.props.tabs, [\"id\", this.props.active.tab]).name, value: this.props.active.tab } : null}\n                isSearchable\n                onChange={(obj) => this.props.onChange(obj ? obj.value : undefined)}\n                value={value}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.session.tabs,\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, null)(TabPicker);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { deactivateStruct, setActiveStructs } from '../../redux/actions'\nimport { MdRemove } from 'react-icons/md'\n\nclass StructureRow extends Component {\n\n    render() {\n\n        const struct = this.props.structure\n        const groupActive = this.props.groupActive\n\n        return (\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", alignItems: \"center\", marginTop: 10, marginBottom: 10}}>\n                <div \n                    style={{color: \"darkred\", cursor: \"pointer\", display: \"flex\", justifyContent: \"center\", alignItems:\"center\"}}\n                    onClick={() => this.props.deactivateStruct(struct.id)}>\n                    <MdRemove/>\n                </div>\n                <div \n                    style={{cursor: groupActive ? \"default\" : \"pointer\", marginRight: 20, marginLeft: 20, padding: 10, backgroundColor: groupActive ? \"whitesmoke\" : \"#ccc\", borderRadius: 3}}\n                    onClick={groupActive ? undefined : this.props.moveStructToActiveGroup}>\n                    {struct.name.replace(\".fdf\", \"\")}\n                </div>\n                <div data-tip={struct.path}>{\".../\" + struct.path.split(\"/\").slice(-2,-1)[0]}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n    deactivateStruct,\n    setActiveStructs\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StructureRow);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Select from 'react-select'\n\nimport _ from \"lodash\"\n\nconst OPTIONS = [\n    {label: \"Plot individually\", value:\"separatePlot\"},\n    {label: \"Merge in single plot\", value:\"jointPlot\"},\n    {label: \"Build animation\", value:\"jointAnimation\"},\n    {label: \"Animation for each\", value:\"separateAnimation\"},\n]\n\nclass MergeMethodPicker extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={}\n    }\n\n    render() {\n        return (\n            <Select\n                options={OPTIONS}\n                defaultValue={OPTIONS[0]}\n                placeholder=\"Choose the plotting method...\"\n                isSearchable\n                onChange={(obj) => this.props.onChange(obj ? obj.value || obj.map(selected => selected.value) : undefined)}\n                value={_.find(OPTIONS, [\"value\", this.props.value])}\n            />\n                \n        )\n    }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, null)(MergeMethodPicker);","import React, { Component } from 'react'\nimport PlotTypePicker from './PlotTypePicker'\nimport TabPicker from './TabPicker'\nimport StructureRow from './StructureRow'\nimport MergeMethodPicker from './MergeMethodPicker'\nimport { deactivateStruct } from '../../redux/actions'\nimport { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nclass StructuresGroup extends Component {\n\n    render() {\n\n        const {tabID, plotClasses, mergeMethod} = this.props.initializingOptions\n        const activenessStyles = this.props.active ? {\n            backgroundColor: \"#ccc\"\n        } : {\n            backgroundColor: \"whitesmoke\"\n        }\n\n        return (\n            <div>\n                <div style={{display: \"flex\", flexDirection: \"row\", margin: -4}}>\n                    <div className=\"structGroupAction\" style={activenessStyles} onClick={this.props.splitGroup}>Split</div>\n                    <div className=\"structGroupAction\" style={activenessStyles} onClick={this.props.removeGroup}>Remove</div>\n                    {this.props.active ? \n                        null\n                            : \n                        <div className=\"structGroupAction\" style={activenessStyles} onClick={this.props.setGroupAsActive}>Mark as receptive</div>\n                    }\n                    <div style={{flex:1}}/>\n                </div>\n                <Grid container spacing={1} style={{transition: \"all 300ms\", display:\"flex\", flexWrap: \"wrap\", padding: 20, marginTop: 0, marginBottom: 20, borderRadius: 5, borderTopLeftRadius: 0, justifyContent: \"center\", alignItems: \"center\", ...activenessStyles}}>\n                    <Grid item sm={12} md={4} lg={3}>\n                        {this.props.structs.map(struct => <StructureRow structure={struct} groupActive={this.props.active} moveStructToActiveGroup={() => this.props.moveStructToActiveGroup(struct.id)}/>)}\n                    </Grid>\n                    <Grid item sm={12} md={4} lg={3}>\n                        <PlotTypePicker value={plotClasses} onChange={(val) => this.props.onInitParamChange(\"plotClasses\", val) }/>\n                    </Grid>\n                    <Grid item sm={12} md={4} lg={3}>\n                        <TabPicker value={tabID} onChange={(val) => this.props.onInitParamChange(\"tabID\", val) }/>\n                    </Grid>\n                    <Grid item sm={12} md={4} lg={3}>\n                        <MergeMethodPicker value={mergeMethod} onChange={(val) => this.props.onInitParamChange(\"mergeMethod\", val) }/>\n                    </Grid>\n                </Grid>\n            </div>      \n        )\n    }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {\n    deactivateStruct\n}\n\nexport default connect(null, mapDispatchToProps)(StructuresGroup);","import React, { Component } from 'react'\nimport { MdRemove } from 'react-icons/md'\nimport { deactivatePlotable, setPlotablePlots } from '../../redux/actions'\n\nimport { connect } from 'react-redux'\nimport PlotTypePicker from './PlotTypePicker'\n\nclass PlotableRow extends Component {\n    render() {\n\n        const plotable = this.props.plotable\n\n        return (\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", marginTop: 10 }}>\n                <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\"}}>\n                    <div style={{ color: \"darkred\", cursor: \"pointer\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} onClick={() => this.props.deactivatePlotable(plotable.id)}>\n                        <MdRemove />\n                    </div>\n                    <div data-tip={plotable.path} style={{marginLeft: 20}}>{\"(.../\" + plotable.path.split(\"/\").slice(-2, -1)[0] + \")\"}</div>\n                    <div style={{  marginLeft: 20, padding: 10, backgroundColor: \"whitesmoke\", borderRadius: 3 }}>\n                        {plotable.name}\n                    </div>\n                </div>\n                <div style={{flex: 1, paddingLeft: 20, paddingRight: 20}}>\n                    <PlotTypePicker \n                        options={plotable.plots.map(plotOption => ({value: plotOption, label: plotOption}))} \n                        value={plotable.chosenPlots}\n                        onChange={(plotTypes) => this.props.setPlotablePlots(plotable.id, plotTypes)}\n                    />\n                </div>\n                \n            </div> \n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    deactivatePlotable,\n    setPlotablePlots\n}\n\nexport default connect(null, mapDispatchToProps)(PlotableRow);\n\n","import React, { Component } from 'react'\n\nimport _ from \"lodash\"\n\nimport Card from '@material-ui/core/Card'\n\nimport PythonApi from '../../apis/PythonApi'\n\nimport { connect } from 'react-redux'\nimport { selectActiveStructs, selectActivePlotables } from '../../redux/reducers'\nimport { setActiveTab, addPlots, setActiveStructs, informLoadingPlot, informLoadedPlot, deactivateStruct, deactivatePlotable, setActivePlotables } from '../../redux/actions'\nimport StructuresGroup from './StructuresGroup';\nimport { MdClose, MdDone, MdRefresh } from 'react-icons/md'\nimport { Button } from '@material-ui/core'\nimport PlotableRow from './PlotableRow'\n\nclass PlotInitializer extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            structureGroups: [],\n            plotables: [],\n        }\n        \n    }\n\n    get selectedStructs(){\n        return this.props.activeStructs || []\n    }\n\n    get selectedPlotables(){\n        return this.props.activePlotables || []\n    }\n\n    get defaultTabID(){\n        return this.props.active.tab ? this.props.active.tab : this.props.tabs.length && this.props.tabs.length > 0 ? this.props.tabs[0].id : undefined\n    }\n\n    componentDidMount(){\n\n        this.onStructsUpdate([])\n\n    }\n\n    componentWillUnmount(){\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if ( !_.isEqual(prevProps.active.structs, this.props.active.structs) ){\n\n            this.onStructsUpdate(prevProps.active.structs)\n            \n        }\n    }\n\n    onStructsUpdate = (prevActiveStructs) => {\n\n        let structureGroups = [];\n\n        const newStructs = this.selectedStructs.filter(({id:structID}) => !prevActiveStructs.includes(structID))\n\n        if (this.state.structureGroups.length == 0){\n            //In this case build a new group and mark it as active\n            structureGroups = this.markActiveGroup(0, [this.newGroup(this.selectedStructs)])\n        } else {\n            const activeGroupIndex = _.findIndex(this.state.structureGroups, \"active\" )\n            const activeGroup = this.state.structureGroups[activeGroupIndex]\n\n            //Add the structure to the receptive group\n            structureGroups = [\n                ...this.state.structureGroups.slice(0,activeGroupIndex),\n                {...activeGroup, structs: [...activeGroup.structs, ...newStructs]},\n                ...this.state.structureGroups.slice(activeGroupIndex + 1)\n            ]\n        }\n\n        structureGroups = this.cleanUnselectedFromGroups(structureGroups)\n\n        //Ensure that there is an active group\n        if ( !_.find(structureGroups, \"active\") ){\n            structureGroups = this.markActiveGroup(structureGroups.length - 1, structureGroups)\n        }\n\n        this.setState({structureGroups})\n    }\n\n    cleanUnselectedFromGroups = (groups) => {\n        /* Removes unselected structures */\n        return groups.reduce((cleanGroups, group) => {\n            group = {...group, structs: group.structs.filter(({id: structID}) => this.props.active.structs.includes(structID))}\n\n            if (group.structs.length > 0){\n                cleanGroups.push(group)\n            }\n            \n            return cleanGroups\n        },[])\n    }\n\n    newGroup = (structs, groupParams) => {\n\n        return {\n            structs: structs || [],\n            initializingOptions: {tabID: this.defaultTabID, plotClasses: [], mergeMethod: \"separatePlot\"},\n            ...groupParams\n        }\n    }\n\n    addGroup = ({structs}) => {\n\n        const structureGroups = this.markActiveGroup(this.state.structureGroups.length,\n            [...this.state.structureGroups, this.newGroup(structs)])\n\n        this.setState({structureGroups})\n    }\n\n    removeGroup = (iGroup) => {\n\n        const group = this.state.structureGroups[iGroup]\n        \n        if (group.structs.length > 0){\n\n            //We need to deactivate all structures in the group, this will automatically update groups\n            this.props.deactivateStruct(group.structs.map(struct => struct.id))\n        } else {\n            //If no structures in the group, we just delete it\n\n            let structureGroups = this.state.structureGroups.filter((g, i) => i != iGroup)\n\n            if (group.active){\n                structureGroups = this.markActiveGroup(structureGroups.length - 1, structureGroups)\n            }\n\n            this.setState({structureGroups})\n        }\n        \n    }\n\n    splitGroup = (iGroup) => {\n        const group = this.state.structureGroups[iGroup]\n\n        const splitted = group.structs.map( struct => this.newGroup([struct], _.omit(group, [\"structs\"])) )\n\n        //Remove the old group\n        let structureGroups = this.state.structureGroups.filter( (g, i) => i != iGroup)\n\n        //Add the new ones\n        structureGroups = [...structureGroups.slice(0,iGroup), ...splitted, ...structureGroups.slice(iGroup) ]\n\n        //If it was the active group, we can't leave all groups as active!\n        if (group.active) structureGroups = this.markActiveGroup(iGroup, structureGroups)\n\n        this.setState({structureGroups})\n\n    }\n\n    markActiveGroup = (iGroup, groups) => {\n        groups = groups || this.state.structureGroups\n        \n        return groups.map((group, i) => {\n            return {...group, active: i == iGroup}\n        })\n    }\n\n    setGroupAsActive = (iGroup) => {\n        this.setState({structureGroups: this.markActiveGroup(iGroup)})\n    }\n\n    moveStructToActiveGroup = (structID) => {\n        \n        //Get the structure\n        const struct = _.find(this.selectedStructs, [\"id\", structID])\n\n        //Remove the structure from its actual group and move it to the active group\n        //THIS WILL BE A PROBLEM IF AT SOME POINT THE SAME STRUCTURE IS ALLOWED IN TWO GROUPS AT THE SAME TIME\n        //WE SHOULD THEN SPECIFY THE ORIGIN GROUP!!!!!!!!!!!!!!\n        const structureGroups = this.state.structureGroups.map( group => {\n\n            let structs = group.active ? [...group.structs, struct] : group.structs.filter( ({id}) => id != structID)\n            \n            return {...group, structs}\n        })\n\n        this.setState({structureGroups})\n\n    }\n\n    updateGroupInitParams = (iGroup, key, val) => {\n\n        const structureGroups = this.state.structureGroups.map((group, i) => {\n            return i == iGroup ? {...group, initializingOptions: {...group.initializingOptions, [key]: val}}: group\n        })\n\n        this.setState({structureGroups})\n    }\n\n    toggleVisibility = () => {\n\n        document.dispatchEvent( new Event(\"togglePlotInitializer\"))\n    }\n\n    updateInitializingOptions = (key, value) => {\n        this.setState({ [key]: value})\n    }\n\n    getNewPlot = () => {\n\n        //Plot plotables\n        this.selectedPlotables.forEach(plotable => {\n            plotable.chosenPlots.forEach(plotType => {\n                PythonApi.newPlot({ tabID: this.defaultTabID, plotable_path: plotable.path, plot_method: plotType})\n            })\n        })\n\n        //Plot the structures\n        this.state.structureGroups.forEach( ({structs, initializingOptions}) =>  {\n\n            if (initializingOptions.mergeMethod.includes(\"separate\")){\n\n                const animation = initializingOptions.mergeMethod.includes(\"Animation\")\n\n                structs.forEach( struct => {\n                    \n                    initializingOptions.plotClasses.forEach( plotClass => {\n                    \n                        PythonApi.newPlot(\n                            {tabID: initializingOptions.tabID, structID: struct.id, animation, plotClass: plotClass}\n                        )\n        \n                    })\n                    \n                    \n                })\n            }\n            \n        })\n\n        this.toggleVisibility()\n\n        this.props.setActiveStructs([])\n        this.props.setActivePlotables([])\n\n    }\n\n    nothingToPlotMessage = () => {\n        return <div>\n            <div style={{color: \"darkred\", fontSize: \"1.3em\", fontWeight: \"bold\"}}>There's nothing to plot currently</div>\n            <div>Select a structure or plotable to begin.</div>\n        </div>\n    }\n\n    render() {\n\n        if (this.props.tabs.length == 0) return null\n\n        // let plotables = _.groupBy(this.selectedPlotables, \"plot\")\n\n        const plotables = this.selectedPlotables\n\n        return (\n            <div className=\"plotInitializer\" style={this.props.style}>\n\n                <Card\n                    style={{margin: 20, padding: 20, background: \"aliceblue\", overflow: \"visible\"}}>\n                    {this.selectedStructs.length > 0 ? <div>\n                        <div className=\"sectionHeader\">\n                            Structures\n                        </div>\n                        {this.state.structureGroups.map( (group, i) => {\n                            return <StructuresGroup \n                                {...group}\n                                onInitParamChange={(paramName, val) => this.updateGroupInitParams(i, paramName, val)}\n                                setGroupAsActive={() => this.setGroupAsActive(i)}\n                                removeGroup={() => this.removeGroup(i)}\n                                splitGroup={() => this.splitGroup(i)}\n                                moveStructToActiveGroup={this.moveStructToActiveGroup}\n                            />\n                        })}\n                        <div onClick={this.addGroup}>New Group</div>\n                    </div>: null}\n\n                    {this.selectedPlotables.length > 0 ? <div className=\"sectionHeader\">\n                        Plotables\n                    </div> : null}\n\n                    <div>\n                        {plotables.map(plotable => <PlotableRow plotable={plotable}/>)}\n                    </div>\n                        \n\n                    {[...this.selectedPlotables, ...this.selectedStructs].length == 0 ? this.nothingToPlotMessage() : null}\n\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", paddingTop: 20 }}>\n\n                        <Button\n                            style={{marginRight: 20}}\n                            onClick={this.toggleVisibility}\n                            endIcon={<MdClose />}\n                        >\n                            Dismiss\n                        </Button>\n\n                        <Button\n                            style={{ marginLeft: 20 }}\n                            onClick={this.getNewPlot}\n                            endIcon={<MdDone/>}\n                        >\n                            Initialize plots      \n                        </Button>\n\n                    </div>     \n\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeStructs: selectActiveStructs(state),\n    activePlotables: selectActivePlotables(state),\n    tabs: state.session.tabs,\n    active: state.active,\n})\n\nconst mapDispatchToProps = {\n    setActiveTab,\n    addPlots,\n    setActiveStructs,\n    setActivePlotables,\n    informLoadingPlot,\n    informLoadedPlot,\n    deactivateStruct,\n    deactivatePlotable\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotInitializer);\n","import React, { Component } from 'react'\nimport Switch from '@material-ui/core/Switch'\n\nexport default class SwitchInput extends Component {\n    render() {\n        return (\n            <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <Switch\n                    id = {this.props.id || this.props.setting.key}\n                    checked={this.props.value}\n                    onChange={(e) => this.props.onChange(e.target.checked) }\n                    {...this.props.inputField.params}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport Select, { components } from \"react-select\"\n\nimport _ from 'lodash'\n\nconst { ValueContainer, Placeholder } = components;\n\nconst CustomValueContainer = ({ children, ...props }) => {\n    return (\n        <ValueContainer {...props}>\n            <Placeholder {...props} isFocused={props.isFocused}>\n                {props.selectProps.placeholder}\n            </Placeholder>\n            {React.Children.map(children, child =>\n                child && child.type !== Placeholder ? child : null\n            )}\n        </ValueContainer>\n    );\n};\n\nexport default class Dropdown extends Component {\n    render() {\n\n        const label = this.props.label || (this.props.setting ? this.props.setting.name : \"\")\n\n        return (\n            <Select\n                value={ Array.isArray(this.props.value) ? this.props.value.map(val => _.find(this.props.inputField.params.options, {value: val})) : _.find(this.props.inputField.params.options, {value: this.props.value})}\n                onChange={(obj) => this.props.onChange(Array.isArray(obj) ? obj.map(obj => obj.value) : obj ? obj.value : null )}\n                {...this.props.inputField.params}\n                components={{\n                    ValueContainer: CustomValueContainer\n                }}\n                styles={{\n                    container: (provided, state) => ({\n                        ...provided,\n                        marginTop: 20,\n                        marginBottom: 20\n                    }),\n                    valueContainer: (provided, state) => ({\n                        ...provided,\n                        overflow: \"visible\"\n                    }),\n                    placeholder: (provided, state) => ({\n                        ...provided,\n                        position: \"absolute\",\n                        top: state.hasValue || state.selectProps.inputValue ? -15 : \"50%\",\n                        transition: \"top 0.1s, font-size 0.1s\",\n                        fontSize: (state.hasValue || state.selectProps.inputValue ) && 13,\n                        color: state.hasValue || state.selectProps.inputValue ? \"blue\" : \"#ccc\",\n                        marginLeft: state.hasValue || state.selectProps.inputValue ? -5 : 0,\n                    })\n                }}\n                placeholder={label}/>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ChromePicker } from 'react-color';\n\nexport default class ColorPicker extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state ={\n            tempcolor: undefined\n        }\n    }\n\n    toggleColorPicker = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n    };\n    \n    render() {\n\n        let colorPicker = this.state.displayColorPicker ? (\n            <div style={{position: \"absolute\", bottom: 60}}>\n                <ChromePicker\n                    color={this.state.tempcolor || this.props.value || 'black'}\n                    onChange={(color) => {this.setState({tempcolor: color.hex})}}\n                    onChangeComplete={(color) => {this.props.onChange(color.hex); this.setState({tempcolor: undefined})}}\n                    {...this.props.inputField.params}/>\n            </div>\n        ) : null;\n\n        return (\n            <div style={{position: \"relative\",display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div \n                    className=\"z-depth-2\"\n                    onClick={this.toggleColorPicker}\n                    style={{width: 30, height: 30, borderRadius: 30, background: this.props.value}}/>\n                \n                {colorPicker}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { Range } from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nexport default class RangeSlider extends Component {\n    render() {\n\n        const value = this.props.value || [0,0]\n\n        return (\n            <div style={{paddingLeft: \"10%\", paddingRight: \"10%\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <Range\n                    value={value}\n                    onChange={(value) => this.props.onChange(value)}\n                    {...this.props.inputField.params}\n                    />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport InputField from '../InputField'\nimport { TextField } from '@material-ui/core'\n\nexport default class Range extends Component {\n\n    render() {\n\n        const value = this.props.value != null ? this.props.value : [\"\", \"\"]\n\n        return (\n            <div>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div style={{display: 'flex'}}>\n                    <TextField\n                        style={{marginRight: 30, flex:1}}\n                        type=\"number\"\n                        variant=\"outlined\"\n                        value={value[0]}\n                        onChange={(e) => value[1] >= Number(e.target.value) ? \n                            this.props.onChange( [InputField.number(e.target.value), value[1]] ) : null}\n                        {...this.props.inputField.params}/>\n                    <TextField\n                        style={{marginLeft: 30, flex:1}}\n                        type=\"number\"\n                        variant=\"outlined\"\n                        value={value[1]}\n                        onChange={(e) => Number(e.target.value) >= value[0] ? \n                            this.props.onChange( [value[0], InputField.number(e.target.value)] ) : null }\n                        {...this.props.inputField.params}/>\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport InputField from '../InputField'\nimport TextField from '@material-ui/core/TextField'\n\nexport default class Numeric extends Component {\n    render() {\n\n        const additionalProps = this.props.inputField ? this.props.inputField.params : {}\n\n        const value = this.props.value || \"\"\n        const label = this.props.label || (this.props.setting ? this.props.setting.name : \"\")\n\n        return (\n            <div>\n                <TextField\n                    type=\"number\"\n                    label={label}\n                    value={value}\n                    onChange={(e) => this.props.onChange( InputField.number(e.target.value) )}\n                    style = {this.props.style}\n                    variant=\"outlined\"\n                    {...additionalProps}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n//--Components\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport 'rc-slider/assets/index.css';\n\nimport _ from \"lodash\"\nimport InputField from '../InputField';\n\nexport default class QueriesField extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            displayColorPicker: {}\n        }\n    }\n\n    addQuery = () => {\n\n        let newQuery = this.props.setting.inputField.queryForm.reduce((map, queryParam) => {\n            map[queryParam.key] = queryParam.default || null\n            return map\n        }, {})\n\n        newQuery.active = true\n\n        this.props.onChange([...this.props.value, newQuery])\n    }\n\n    changeSettingValue = (iQuery, paramKey, paramValue) => {\n\n        let newValue = _.cloneDeep(this.props.value)\n\n        newValue[iQuery] = { ...newValue[iQuery], [paramKey]: paramValue}\n\n        this.props.onChange(newValue)\n    }\n\n    renderQuery = (query, iQuery) => {\n\n        return (\n\n            <div key={iQuery} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginBottom: 10}}>\n                <Switch\n                    id={iQuery+\"active\"}\n                    checked={query.active}\n                    onChange={(e) => this.changeSettingValue(iQuery, \"active\", e.target.checked) }/>\n                <Card className=\"queryCard\" style={{flex: 1, background: query.active ? \"#CBFFC0\" : \"#ffc3cd\", borderRadius: 10}}>\n                    <div style={{display:\"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\"}}>\n                        {this.props.setting.inputField.queryForm.map(queryParam => <InputField \n                                                                                    id={String(iQuery) + queryParam.key}\n                                                                                    setting={queryParam}\n                                                                                    value={query[queryParam.key]}\n                                                                                    onValueChange={(val) => this.changeSettingValue(iQuery, queryParam.key, val)}/>)}\n                    </div>   \n                </Card>\n            </div>\n            \n        )\n\n    }\n\n    render() {\n\n        const value = this.props.value || []\n\n        return (\n            <div>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div>\n                    {value.map( (query, iQuery) => this.renderQuery(query, iQuery))}\n                    <Button\n                        data-tip=\"Add a new query\"\n                        onClick={this.addQuery}>\n                        Add Query\n                    </Button>\n                </div>\n            </div>\n            \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport NumericInput from './Numeric'\n\nimport _ from \"lodash\"\n\nexport default class ArrayInput extends Component {\n\n    changeValue = (newVal, i) => {\n        let value = _.cloneDeep(this.props.value)\n\n        if(!value){\n            value = this.handleNone()\n        }\n\n        value[i] = newVal\n\n        this.props.onChange(value)\n    }\n\n    handleNone = () => {\n        return Array(this.props.inputField.params.shape[0]).fill(null)\n    }\n\n    render() {\n\n        //Params to pass to numeric inputs\n        const orientationStyles = this.props.inputField.params.vertical ? {\n            marginLeft: 20, marginRight: 20, marginBottom: 0, width: 70\n        } : {\n            marginLeft: 5, marginRight: 5, marginBottom: 0, width: 100\n        }\n        const inputStyle = { ...orientationStyles, textAlign: \"center\"}\n\n        let value = this.props.value\n\n        if (!value){\n            value = this.handleNone()\n        }\n\n        return (\n            <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n                <div style={{display: \"flex\", flexDirection: this.props.inputField.params.vertical ? \"column\" : \"row\", justifyContent: \"center\", alignItems: \"center\"}} className=\"arrayContainer\">\n                    {value.map((val, i) => <NumericInput value={val} onChange={(val) => this.changeValue(val, i)} style={inputStyle}/>)}\n                </div>  \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport InputField from \"../InputField\"\nimport {MdDragHandle} from \"react-icons/md\"\nimport { IoIosRemoveCircle, IoIosAddCircle } from \"react-icons/io\"\nimport _ from \"lodash\"\nimport {\n    sortableContainer,\n    sortableElement,\n    sortableHandle,\n    arrayMove\n} from 'react-sortable-hoc';\n\nconst DragHandle = sortableHandle(() => <MdDragHandle size={20} color=\"gray\"/>);\n\nconst SortableItem = sortableElement((props) => (\n    <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n        {props.sortable ? <DragHandle /> : null}\n        <InputField {...props} />\n        { props.remove ? <IoIosRemoveCircle color=\"darkred\" size={20} onClick={props.remove}/> : null }\n    </div>\n));\n\nconst SortableContainer = sortableContainer(({ children }) => {\n    return <div>{children}</div>;\n});\n\nexport default class ListInput extends Component {\n\n    changeValue = (newVal, i) => {\n        let value = _.cloneDeep(this.sanitizeVal())\n\n        value[i] = newVal\n\n        this.props.onChange(value)\n    }\n\n    sanitizeVal = () => {\n        if(!this.props.value){\n            return this.handleNone()\n        } else {\n            return this.props.value\n        }\n    }\n\n    handleNone = () => {\n\n        return []\n        \n    }\n\n    addItem = () => {\n\n        this.props.onChange([...this.sanitizeVal(), null])\n    }\n\n    removeItem = (i) => {\n        this.props.onChange(this.sanitizeVal().filter((val, index) => index != i))\n    }\n\n    onSortEnd = ({ oldIndex, newIndex }) => {\n\n        this.props.onChange(\n            arrayMove(this.sanitizeVal(), oldIndex, newIndex)\n        )\n\n    };\n\n    render() {\n\n        let value = this.sanitizeVal()\n\n        return (\n            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                <div style={{ paddingBottom: 10 }}>{this.props.setting.name}</div>\n                <SortableContainer onSortEnd={this.onSortEnd} useDragHandle>\n                    {value.map((val, i) => (\n                        <SortableItem \n                            key={`item-${i}`} index={i} value={val} \n                            onValueChange={(val) => this.changeValue(val, i)} \n                            remove={() => this.removeItem(i)}\n                            sortable={this.props.setting.inputField.params.sortable}\n                            setting={this.props.setting.inputField.params.itemInput} />\n                    ))}\n                </SortableContainer>\n                <IoIosAddCircle\n                    data-tip=\"Add a new item\"\n                    onClick={this.addItem}\n                    size={20}\n                    color=\"green\"\n                />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport CreatableSelect from 'react-select/creatable';\n\nimport { components } from \"react-select\"\n\nimport _ from 'lodash'\n\nconst { ValueContainer, Placeholder } = components;\n\nconst CustomValueContainer = ({ children, ...props }) => {\n    return (\n        <ValueContainer {...props}>\n            <Placeholder {...props} isFocused={props.isFocused}>\n                {props.selectProps.placeholder}\n            </Placeholder>\n            {React.Children.map(children, child =>\n                child && child.type !== Placeholder ? child : null\n            )}\n        </ValueContainer>\n    );\n};\n\nexport default class CreatableDropdown extends Component {\n\n    santitizeValue = (val) => {\n        /*\n        Maps the real value to something that can be passed to react select\n\n        What we need to do is convert each value into an object {value: , label: }\n        */\n\n        var sanitized = _.find(this.props.inputField.params.options, { value: val })\n\n        if (!sanitized && val) {\n            sanitized = {label: val, value: val}\n        }\n\n        return sanitized || null\n\n    }\n\n    handleChange = (obj) => {\n        /*\n        Treats the new object before passing it to the onChange function\n        */\n\n        var newVal;\n        if (Array.isArray(obj)){\n            newVal = obj.map(obj => obj.value)\n        } else if (obj) {\n            newVal = obj.value\n        } else {\n            newVal = this.props.inputField.params.isMulti ? [] : null\n        }\n\n        this.props.onChange(newVal)\n\n    }\n\n    render() {\n\n        const label = this.props.label || (this.props.setting ? this.props.setting.name : \"\")\n\n        var value;\n        \n        if (Array.isArray(this.props.value)){\n            value = this.props.value.map(val => this.santitizeValue(val))\n        } else {\n            value = this.santitizeValue(this.props.value)\n        }\n\n        return (\n            <CreatableSelect\n                value={value}\n                onChange={this.handleChange}\n                {...this.props.inputField.params}\n                components={{\n                    ValueContainer: CustomValueContainer\n                }}\n                styles={{\n                    container: (provided, state) => ({\n                        ...provided,\n                        marginTop: 20,\n                        marginBottom: 20\n                    }),\n                    valueContainer: (provided, state) => ({\n                        ...provided,\n                        overflow: \"visible\"\n                    }),\n                    placeholder: (provided, state) => ({\n                        ...provided,\n                        position: \"absolute\",\n                        top: state.hasValue || state.selectProps.inputValue ? -15 : \"50%\",\n                        transition: \"top 0.1s, font-size 0.1s\",\n                        fontSize: (state.hasValue || state.selectProps.inputValue) && 13,\n                        color: state.hasValue || state.selectProps.inputValue ? \"blue\" : \"#ccc\",\n                        marginLeft: state.hasValue || state.selectProps.inputValue ? -5 : 0,\n                    })\n                }}\n                placeholder={label} />\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport _ from \"lodash\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { changeSettings } from \"../../redux/actions\"\n\n/*  All the different input fields */\nimport TextInput from './inputFields/TextInput';\nimport Switch from './inputFields/Switch';\nimport Dropdown from './inputFields/Dropdown';\nimport ColorPicker from './inputFields/ColorPicker';\nimport RangeSlider from './inputFields/RangeSlider';\nimport Range from './inputFields/Range';\nimport Numeric from './inputFields/Numeric';\nimport QueriesField from './inputFields/QueriesInput';\nimport ArrayInput from './inputFields/Array';\nimport ListInput from './inputFields/List';\nimport CreatableDropdown from './inputFields/CreatableDropown';\n\nexport const INPUT_FIELDS = {\n    textinput: TextInput,\n    switch: Switch,\n    dropdown: Dropdown,\n    \"creatable dropdown\": CreatableDropdown,\n    color: ColorPicker,\n    rangeslider: RangeSlider,\n    range: Range,\n    number: Numeric,\n    queries: QueriesField,\n    vector: ArrayInput,\n    list: ListInput\n}\n\nclass InputField extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state ={}\n    }\n\n    w = (string) => {\n\n        if (!string) return undefined\n\n        let isSizeDefined = [\"s\", \"m\", \"l\"].map(sizeLabel => string.indexOf(sizeLabel) >= 0)\n\n        let iWindowSize = [\"small\", \"medium\", \"infinity\"].indexOf(this.props.browser.mediaType)\n\n        for (var i = iWindowSize; i > -1; i--) {\n            \n            if(isSizeDefined[i]){\n                let width = _.find(string.split(\" \"), (str) => str.indexOf([\"s\",\"m\",\"l\"][i]) >= 0)\n                return width.substr(1)\n            }\n          }\n\n        return undefined\n    }\n\n    changeSettingValue = (newValue) => {\n\n        if (this.props.onValueChange){\n            this.props.onValueChange(newValue)\n        } else {\n            this.props.changeSettings(this.props.onSettingChangeType, this.props.setting.key, newValue, this.props.onSettingChangeExtraParams)\n        }\n\n    }\n\n    static number = (value) => [\"\", \"-\"].includes(value) ? value : Number(value)\n\n    render() {\n\n        let inputField = this.props.setting.inputField\n\n        // Get the input field that we need\n        const InputComponent = INPUT_FIELDS[inputField.type]\n        \n        if (!InputComponent) return null\n\n        const fieldLayout = <InputComponent\n            {...this.props}\n            inputField={inputField}\n            onChange={(value) => this.changeSettingValue(value)}\n            //w={this.w} //This is only needed by the queries field, maybe there is a better way to do it\n        />\n\n        let tooltipParams = {\n            \"data-tip\": (this.props.setting.help ? this.props.setting.help + \"<br>\" : \"\") + \"Default: \" + (this.props.setting.default || \"None\"),\n            \"data-multiline\": true,\n            \"data-effect\": \"solid\",\n            \"data-place\": inputField.type == \"color\" ? \"bottom\" : \"top\", \n        }\n\n        const backgroundColor = this.props.value == null ? \"rgba(230,230,230,0.4)\" : undefined\n\n        return <div\n            onClick={(e) => inputField.type != \"queries\" && e.ctrlKey ? this.changeSettingValue(this.props.value == null ? this.props.setting.default : null) : null}\n            style={{backgroundColor, paddingTop: 10, paddingBottom: 10, paddingLeft: 20, paddingRight: 20, borderRadius: 3, marginTop: 20, marginBottom: 20, width: this.w(inputField.width), ...inputField.style}}\n            {...tooltipParams}>\n                {fieldLayout}\n            </div>\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    browser: state.browser\n})\n\nconst mapDispatchToProps = {\n    changeSettings,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\n\n\n// if (inputField.type == \"textinput\"){\n\n//     fieldLayout = <TextInput\n//             noLayout\n//             value={this.props.value}\n//             onChange={(e) => this.changeSettingValue(e.target.value)}\n//             label={this.props.setting.name}\n//             {...inputField.params}/>\n\n// } else if (inputField.type == \"switch\"){\n\n//     fieldLayout = <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n//             <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//             <Switch\n//                 id = {this.props.setting.key}\n//                 checked={this.props.value}\n//                 onChange={(e) => this.changeSettingValue(e.target.checked) }\n//                 {...inputField.params}/>\n//         </div>\n\n// } else if (inputField.type == \"dropdown\") {\n\n//     fieldLayout = <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n//         <div style={{paddingRight: 20}}>{this.props.setting.name + \":\"}</div>\n//         <div style={{flex:1}}>\n//             <Select\n//                 value={ Array.isArray(this.props.value) ? this.props.value.map(val => _.find(inputField.params.options, {value: val})) : _.find(inputField.params.options, {value: this.props.value})}\n//                 onChange={(obj) => this.changeSettingValue(Array.isArray(obj) ? obj.map(obj => obj.value) : obj ? obj.value : null )}\n//                 {...inputField.params}/>\n//         </div>\n//         </div>\n\n// } else if (inputField.type == \"color\") {\n\n//     let colorPicker = this.state.displayColorPicker ? (\n//         <div style={{position: \"absolute\", bottom: 60}}>\n//             <ChromePicker\n//                 color={this.props.value}\n//                 onChangeComplete={(color) => this.changeSettingValue(color.hex)}\n//                 {...inputField.params}/>\n//         </div>\n//     ) : null;\n\n//     fieldLayout = <div style={{position: \"relative\",display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n//             <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//             <div \n//                 className=\"z-depth-2\"\n//                 onClick={this.toggleColorPicker}\n//                 style={{width: 30, height: 30, borderRadius: 30, background: this.props.value}}/>\n            \n//             {colorPicker}\n//         </div>\n// } else if (inputField.type == \"rangeslider\"){\n\n//     fieldLayout = <div style={{paddingLeft: \"10%\", paddingRight: \"10%\"}}>\n//     <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//     <Range\n//         value={this.props.value}\n//         onChange={(value) => this.changeSettingValue(value)}\n//         {...inputField.params}\n//         />\n//   </div>\n\n// } else if (inputField.type == \"range\"){\n\n//     fieldLayout = <div>\n//         <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//         <div style={{display: 'flex'}}>\n//             <input\n//                 style={{marginRight: 30, flex:1}}\n//                 type=\"number\"\n//                 value={this.props.value[0]}\n//                 onChange={(e) => this.props.value[1] >= Number(e.target.value) ? \n//                     this.changeSettingValue( [InputField.number(e.target.value), this.props.value[1]] ) : null}\n//                 {...inputField.params}/>\n//             <input\n//                 style={{marginLeft: 30, flex:1}}\n//                 type=\"number\"\n//                 value={this.props.value[1]}\n//                 onChange={(e) => Number(e.target.value) >= this.props.value[0] ? \n//                     this.changeSettingValue( [this.props.value[0], InputField.number(e.target.value)] ) : null }\n//                 {...inputField.params}/>\n//         </div>\n        \n//     </div>\n\n// } else if (inputField.type == \"number\"){\n\n//     fieldLayout = <div>\n//         <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//         <input\n//             type=\"number\"\n//             value={this.props.value}\n//             onChange={(e) => this.changeSettingValue( InputField.number(e.target.value) )}\n//             {...inputField.params}/>\n//         </div>\n// } else if (inputField.type == \"queries\"){\n\n//     fieldLayout = <div>\n//         <div style={{paddingBottom: 10}}>{this.props.setting.name}</div>\n//         <QueriesField \n//             changeSettingValue={this.changeSettingValue}\n//             setting={this.props.setting}\n//             value={this.props.value}\n//             w={this.w}/>\n//     </div>\n// }\n","import React, { Component } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa'\nimport { MdRestore } from 'react-icons/md'\n\nimport InputField from \"./InputField\"\n\nimport parse from 'html-react-parser';\nimport _ from \"lodash\"\nimport { HotKeys, ObserveKeys } from 'react-hotkeys';\nimport { SETTING_GROUP_HOT_KEYS, SETTING_CONTAINER_HOT_KEYS } from '../../utils/hotkeys';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n\nexport default class SettingsContainer extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    hotKeysHandlers = {\n        MOVE_EXPANDED_UP: () => this.moveExpanded(\"up\"),\n        MOVE_EXPANDED_DOWN: () => this.moveExpanded(\"down\")\n    }\n\n    moveExpanded = (direction = \"down\") => {\n\n        var newExpanded;\n        if (direction == \"up\"){\n            newExpanded = this.state.expanded != 0 ? this.state.expanded - 1 : 2\n        } else if (direction == \"down\"){\n            newExpanded = this.state.expanded != 2 ? this.state.expanded + 1 : 0 \n        }\n\n        this.setState({expanded: newExpanded})\n    }\n\n    renderSettingsGroup = (settingsGroup) => {\n\n        return settingsGroup.map(setting => {\n\n            if (!setting.inputField) return null\n        \n            return <InputField \n                        key={setting.key}\n                        setting={setting} \n                        value={this.props.settings[setting.key]}\n                        onSettingChangeType={this.props.onSettingChangeType}\n                        onSettingChangeExtraParams={this.props.onSettingChangeExtraParams}/>\n        }) \n    }\n\n    renderSettingsGroups = (groupedParams) => {\n\n        return this.props.paramGroups.map((paramGroup, iParamGroup) => {\n\n            let groupKey = paramGroup.key ? paramGroup.key : \"null\";\n\n            let settingsGroup = groupedParams[groupKey]\n\n            if (!settingsGroup) return null\n\n            let subGrouped = _.groupBy(settingsGroup, \"subGroup\")\n\n            let subGroups = paramGroup.subGroups ? [{key: \"null\", name: null},  ...paramGroup.subGroups] : [{key: \"null\", name: null}]\n\n            let itemContent = subGroups.map(({key, name}) => {\n\n                if ( ! subGrouped[key] ) return null\n                \n                return <div key={key}>\n                    <div style={{paddingBottom: 20, fontWeight:\"bold\", fontSize: \"1.3em\", textAlign: \"left\"}}>{name}</div>\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\", alignItems: \"center\"}}>{this.renderSettingsGroup(subGrouped[key])}</div>\n                </div>\n            })\n\n            const submitSettings = () => this.props.submitSettings( settingsGroup.reduce((settings, setting) => {\n                settings[setting.key] = this.props.settings[setting.key]\n                return settings\n            }, {}))\n\n            const hotKeysHandlers = {\n                SUBMIT_SETTINGS: submitSettings,\n                UNDO_SETTINGS: this.props.undoSettings,\n            }\n\n            return (\n                <MuiExpansionPanel\n                    key={groupKey}>\n                    <MuiExpansionPanelSummary style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Icon>{paramGroup.icon}</Icon>\n                        <span style={{paddingLeft: 10}}>{paramGroup.name}</span>\n                    </MuiExpansionPanelSummary>\n                    <MuiExpansionPanelDetails>\n                        <HotKeys keyMap={SETTING_GROUP_HOT_KEYS} handlers={hotKeysHandlers}>\n                            <ObserveKeys>\n                                <blockquote style={{ textAlign: \"left\" }}>\n                                    {parse(paramGroup.description)}\n                                </blockquote>\n                                {itemContent}\n                                <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\" }}>\n                                    <Button\n                                        onClick={this.props.undoSettings}\n                                        data-tip=\"This will roll back to previous settings.<br> IT AFFECTS ALL GROUPS OF PARAMETERS, not only this one.\"\n                                        className=\"orange\"\n                                        style={{ margin: 20 }}>\n                                        <FaAngleLeft />Previous settings\n                            </Button>\n\n                                    <Button\n                                        data-tip=\"This will restore all settings to the plot's defaults\"\n                                        className=\"red\" style={{ margin: 20 }}><MdRestore />Restore defaults</Button>\n\n                                    <Button\n                                        data-tip=\"This will change the settings and will update everything accordingly.<br> IT ONLY AFFECTS THIS GROUP OF SETTINGS, not all settings\"\n                                        onClick={submitSettings}\n                                        className=\"blue\"\n                                        style={{ margin: 20 }}>\n                                        Submit settings<FaAngleRight />\n                                    </Button>\n\n                                </div>\n                            </ObserveKeys>\n                        </HotKeys>\n                    </MuiExpansionPanelDetails>\n                </MuiExpansionPanel> \n            )\n\n        })\n    }\n\n    render() {\n\n        let groupedParams = _.groupBy(this.props.params, \"group\")\n\n        return (\n            <div style={this.props.style}>\n                {this.renderSettingsGroups(groupedParams)}          \n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ReactTooltip from \"react-tooltip\"\n\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Components\nimport PlotCard from '../components/plots/PlotCard'\nimport SettingsContainer from '../components/settings/SettingsContainer'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { addPlots, setNewStructures, setActivePlot, setCurrentSession, informLoadedPlot, informLoadingPlot } from \"../redux/actions\"\nimport { CHANGE_PLOT_SETTINGS } from '../redux/actions/actionTypes'\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { PLOT_TWEAKING_HOT_KEYS } from '../utils/hotkeys'\nimport { selectActivePlot } from '../redux/reducers'\n\nclass PlotTweaking extends Component {\n\n    hotKeysHandlers = {\n        UNDO_SETTINGS: () => this.undoSettings(),\n        SUBMIT_ALL_SETTINGS: () => this.submitSettings(\"all\")\n    }\n\n    submitSettings = (settings) => {\n\n        if (settings = \"all\"){\n            settings = this.props.activePlot.unsubmittedSettings\n        }\n\n        PythonApi.updatePlotSettings(this.props.activePlot.id, settings)\n\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoPlotSettings(this.props.activePlot.id)\n\n    }\n\n    render() {\n\n        const activePlot = this.props.activePlot\n\n        if (! activePlot ) return null\n\n        const plotSettings = { ...activePlot.settings, ...activePlot.unsubmittedSettings}\n\n        let setsCont = <SettingsContainer\n                            settings={plotSettings}\n                            params={activePlot.params}\n                            paramGroups={activePlot.paramGroups}\n                            onSettingChangeType={CHANGE_PLOT_SETTINGS}\n                            onSettingChangeExtraParams={{plotID: activePlot.id}}\n                            submitSettings={this.submitSettings}\n                            undoSettings={this.undoSettings}/>\n        \n        return (\n            <div style={{...this.props.style}}>\n                <GlobalHotKeys keyMap={PLOT_TWEAKING_HOT_KEYS.global} handlers={this.hotKeysHandlers}/>\n                <Grid container>\n                    <Grid item sm={12} md={4} style={{height:\"90vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems:\"center\"}}>\n                        <PlotCard plot={activePlot} style={{height: \"80vh\"}}/>\n                    </Grid>\n                    <Grid item sm={12} md={8} style={{ padding: 20, display: \"flex\", flexDirection: \"column\"}} >\n                        {this.props.browser.mediaType == \"infinity\" ? <div className=\"scrollView\" style={{ maxHeight: \"90vh\"}}>{setsCont}</div> : setsCont}\n                    </Grid>\n                </Grid>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>  \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    structures: state.structures,\n    active: state.active,\n    activePlot: selectActivePlot(state),\n    session: state.session,\n    browser: state.browser\n})\n\nconst mapDispatchToProps = {\n    setCurrentSession,\n    addPlots,\n    setActivePlot,\n    setNewStructures,\n    informLoadedPlot,\n    informLoadingPlot\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotTweaking);\n","import React, { Component } from 'react'\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Components\nimport ReactTooltip from \"react-tooltip\"\nimport SettingsContainer from \"../components/settings/SettingsContainer\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setCurrentSession } from \"../redux/actions\"\n\nimport { toast } from 'react-toastify';\n\nimport _ from \"lodash\"\nimport { CHANGE_SESSION_SETTINGS } from '../redux/actions/actionTypes'\n\nclass Settings extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {}\n    }\n\n    submitSettings = (settings) => {\n\n        PythonApi.updateSessionSettings(settings)\n\n    }\n\n    undoSettings = () => {\n        PythonApi.undoSessionSettings()\n    }\n\n    render() {\n\n        if ( _.isEmpty(this.props.session) ) return null\n\n        return (\n            <div className=\"scrollView\" style={{...this.props.style, padding: 20}}>\n                <SettingsContainer\n                    defaultActiveKey={1}\n                    settings={this.props.session.settings}\n                    params={this.props.session.params}\n                    paramGroups={this.props.session.paramGroups}\n                    onSettingChangeType={CHANGE_SESSION_SETTINGS}\n                    submitSettings={this.submitSettings}\n                    undoSettings={this.undoSettings}/>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    session: state.session\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentSession: (session) => dispatch(setCurrentSession(session)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React, { Component } from 'react'\nimport ReactMarkDown from \"react-markdown\"\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io'\nimport PythonApi from '../../apis/PythonApi'\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Button, ExpansionPanelActions } from '@material-ui/core'\n\nexport default class Method extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            showingDetails: false\n        }\n    }\n\n    applyMethod = () => {\n        PythonApi.callPlotShortcut(this.props.plot.id, this.props.shortcut)\n    }\n\n    renderDetails = () => {\n\n        return \n    }\n\n    render() {\n\n        return (\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    style={{display: \"flex\", cursor: \"pointer\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n                    <span style={{color: \"gray\", marginRight: 10}}>{this.props.shortcut}</span>\n                    <span style={{fontWeight: \"bold\"}}>{this.props.info.name}</span>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails style={{fontSize: 13}}>\n                    <ReactMarkDown source={this.props.info.description}/>\n                </ExpansionPanelDetails>\n                <ExpansionPanelActions>\n                    <Button onClick={this.applyMethod}>APPLY METHOD</Button>\n                </ExpansionPanelActions>\n            </ExpansionPanel>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Method from './Method'\n\nexport default class Methods extends Component {\n    render() {\n        return (\n            <div className=\"scrollView\" style={{textAlign: \"left\", borderRadius: 3, maxHeight: \"90vh\"}}>\n                {Object.keys(this.props.plot.shortcuts).map((sequence) => <Method plot={this.props.plot} shortcut={sequence} info={this.props.plot.shortcuts[sequence]}/>)}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ReactTooltip from \"react-tooltip\"\n\n//--Components\nimport PlotCard from '../components/plots/PlotCard'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { addPlots, setNewStructures, setActivePlot, setCurrentSession, informLoadedPlot, informLoadingPlot } from \"../redux/actions\"\nimport { CHANGE_PLOT_SETTINGS } from '../redux/actions/actionTypes'\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { PLOT_TWEAKING_HOT_KEYS } from '../utils/hotkeys'\nimport Methods from '../components/pythonMethods/Methods'\nimport { selectActivePlot } from '../redux/reducers'\n\n\n\nclass PlotMethods extends Component {\n\n    hotKeysHandlers = {\n    }\n\n    render() {\n\n        if (! this.props.activePlot ) return null\n        \n        return (\n            <div style={{...this.props.style}}>\n                <GlobalHotKeys keyMap={PLOT_TWEAKING_HOT_KEYS.global} handlers={this.hotKeysHandlers}/>\n                <Grid container>\n                    <Grid item sm={12} md={4} style={{ height: \"90vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <PlotCard plot={this.props.activePlot} style={{ height: \"80vh\" }} />\n                    </Grid>\n                    <Grid item sm={12} md={8} style={{ padding: 20, display: \"flex\", flexDirection: \"column\" }} >\n                        <Methods plot={this.props.activePlot} />\n                    </Grid>\n                </Grid>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false} />   \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    structures: state.structures,\n    active: state.active,\n    activePlot: selectActivePlot(state),\n    session: state.session,\n    browser: state.browser\n})\n\nconst mapDispatchToProps = {\n    setCurrentSession,\n    addPlots,\n    setActivePlot,\n    setNewStructures,\n    informLoadedPlot,\n    informLoadingPlot\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotMethods);\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport PythonApi from '../../../apis/PythonApi'\n\nfunction FilesInput() {\n    const onDrop = useCallback((acceptedFiles) => {\n        acceptedFiles.forEach((file) => {\n            PythonApi.sendFile(file)\n        })\n\n    }, [])\n    const { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n    )\n}\n\nexport default FilesInput;\n","import React, { Component } from 'react'\nimport PythonApi from '../../apis/PythonApi'\nimport { FiWifi, FiWifiOff } from 'react-icons/fi'\n\nexport default class ConnectionStatus extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = { connected: PythonApi.socket.connected }\n    }\n\n    componentDidMount() {\n        PythonApi.onConnect(() => this.setState({connected: true}))\n        PythonApi.onDisconnect(() => this.setState({ connected: false }))\n    }\n\n    render() {\n\n        const style = this.state.connected ? { backgroundColor: \"lightgreen\" } : { backgroundColor: \"salmon\" }\n        return <div {...this.props} style={{...style, ...this.props.style}} \n                data-tip={this.state.connected ? `Connected to ${PythonApi.apiAddress}` : \"Currently not connected\"} \n                data-place=\"left\"\n                data-background-color={style.backgroundColor}>\n            {this.state.connected ? <FiWifi color=\"green\" size={20} /> : <FiWifiOff color=\"darkred\" size={20}/>}\n        </div>\n\n    }\n}\n","import React, { Component } from 'react'\nimport Speck from 'speck-renderer';\n\nexport default class MoleculeViewer extends Component {\n\n    componentDidMount(){\n        const speck = new Speck({ canvasContainerID: \"speck-root\", canvasID: \"speck-canvas\" });\n    }\n    \n    render() {\n        return (\n            <div id=\"speck-root\" style={{...this.props.style, justifyContent: \"center\", alignItems:\"center\", display:\"flex\"}}>\n                <canvas id=\"speck-canvas\" style={{width:800, height:800}}/>\n            </div>\n        )\n    }\n}\n","\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { addPlots, setNewStructures, setActivePlot, setCurrentSession, informLoadedPlot, informLoadingPlot } from \"../redux/actions\"\nimport { CHANGE_PLOT_SETTINGS } from '../redux/actions/actionTypes'\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { PLOT_TWEAKING_HOT_KEYS } from '../utils/hotkeys'\nimport { selectActivePlot } from '../redux/reducers'\n\nimport React, { Component } from 'react';\nimport plotly from 'plotly.js/dist/plotly';\nimport PlotlyEditor from 'react-chart-editor';\nimport 'react-chart-editor/lib/react-chart-editor.css';\n\n// const dataSources = {\n//     col1: [1, 2, 3], // eslint-disable-line no-magic-numbers\n//     col2: [4, 3, 2], // eslint-disable-line no-magic-numbers\n//     col3: [17, 13, 9], // eslint-disable-line no-magic-numbers\n// };\n\n// const dataSourceOptions = Object.keys(dataSources).map(name => ({\n//     value: name,\n//     label: name,\n// }));\n\nconst config = { editable: true };\n\nclass PlotEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        const activePlot = props.activePlot\n        this.state = activePlot.figure;\n    }\n\n    hotKeysHandlers = {\n        UNDO_SETTINGS: () => this.undoSettings(),\n        SUBMIT_ALL_SETTINGS: () => this.submitSettings(\"all\")\n    }\n\n    submitSettings = (settings) => {\n\n        if (settings = \"all\") {\n            settings = this.props.activePlot.unsubmittedSettings\n        }\n\n        PythonApi.updatePlotSettings(this.props.activePlot.id, settings)\n\n    }\n\n    componentWillUnmount(){\n\n        PythonApi.updateFigure(this.props.activePlot.id, {...this.state, overwrite: true})\n        // this.props.addPlots({\n        //     [this.props.activePlot.id]: {\n        //         ...this.props.activePlot,\n        //         figure: this.state\n        //     }\n        // })\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoPlotSettings(this.props.activePlot.id)\n\n    }\n\n    render() {\n\n        const activePlot = this.props.activePlot\n\n        if (!activePlot) return null\n\n        return (\n            <PlotlyEditor\n                data={this.state.data}\n                layout={this.state.layout}\n                config={config}\n                frames={this.state.frames}\n                plotly={plotly}\n                style={{...this.props.style}}\n                onUpdate={(data, layout, frames) =>\n                    this.setState({ data, layout, frames })\n                }\n                useResizeHandler\n                debug\n                advancedTraceTypeSelector\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    activePlot: selectActivePlot(state),\n})\n\nexport default connect(mapStateToProps, null)(PlotEditor);","import ReactDOM from 'react-dom'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\n\nfunction Box(props) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef()\n\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n        mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n    })\n\n    return (\n        <mesh\n            {...props}\n            ref={mesh}\n            scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n            onClick={(e) => setActive(!active)}\n            onPointerOver={(e) => setHover(true)}\n            onPointerOut={(e) => setHover(false)}>\n            <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n            <meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'orange'} />\n        </mesh>\n    )\n}\n\nexport default function NotConnected(props){\n\n    return <Canvas style={props.style} {...props}>\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <Box position={[-1.2, 0, 0]} sign={-1}/>\n        <Box position={[1.2, 0, 0]} />\n    </Canvas>\n}","import React, { Component } from 'react'\n\nimport _ from \"lodash\"\n\n//--Components\nimport ReactTooltip from \"react-tooltip\"\nimport PlotDashboard from '../components/plots/PlotDashboard';\n\n//--Python api \nimport PythonApi from '../apis/PythonApi'\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport {addPlots, setNewStructures, setActiveTab, setActivePlot, setSessionTabs, setCurrentSession, setNewPlotables, setActivePage} from \"../redux/actions\"\nimport StructurePicker from '../components/structures/StructurePicker'\nimport PlotInitializer from '../components/plotInitializer/PlotInitializer'\nimport Tabs from '../components/tabs/Tabs'\nimport Controls from '../components/controls/Controls'\nimport PlotTweaking from './PlotTweaking'\nimport Settings from './Settings'\n\nimport {getApplicationKeyMap, GlobalHotKeys, configure} from 'react-hotkeys'\nimport { GLOBAL_HOT_KEYS, ADDITIONAL_GLOBAL_HOT_KEYS } from '../utils/hotkeys';\nimport PlotMethods from './PlotMethods';\nimport FilesInput from '../components/settings/inputFields/Files';\nimport ConnectionStatus from '../components/controls/ConnectionStatus';\nimport MoleculeViewer from '../components/structureView/MoleculeViewer';\nimport PlotEditor from './PlotEditor';\nimport NotConnected from '../components/loading/NotConnected';\n\nconfigure({logLevel: \"debug\", simulateMissingKeyPressEvents: false})\nclass Plots extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            connected: PythonApi.socket.connected,\n            loadingPlots: []\n        }\n\n        PythonApi.onConnect(() => {\n            this.setState({connected: true})\n        })\n\n        document.addEventListener(\"syncWithSession\", (e) => this.syncWithSession(e.detail.session) )\n\n        document.addEventListener(\"updateTabs\", () => this.syncWithSession())\n\n        document.addEventListener(\"loadingPlot\", (e) => {\n            this.setState({ loadingPlots: [...this.state.loadingPlots, e.detail.plot_id] })\n        })\n\n        document.addEventListener(\"plot\", (e) => {\n            const plot = e.detail.plot\n            props.addPlots({ [plot.id]: plot })\n            this.setState({ loadingPlots: this.state.loadingPlots.filter(id => id != plot.id) })\n        })\n\n        document.addEventListener(\"newPlot\", () => this.syncWithSession())\n\n        document.addEventListener(\"sessionUpdate\", (e) => {\n            e.detail.justUpdated.forEach( plotID => {\n                \n                PythonApi.getPlot(plotID)\n\n            })\n\n        })\n            \n    }\n\n    hotKeysHandlers = {\n        GO_TO_SETTINGS: () => this.props.setActivePage(\"settings\"),\n        GO_TO_DASHBOARD: () => this.props.setActivePage(\"plots\"),\n        GO_TO_MOLECULEVIEWER: () => this.props.setActivePage(\"moleculeViewer\"),\n        SHOW_AVAIL_HOTKEYS: () => console.warn(getApplicationKeyMap())\n    }\n\n    syncWithSession = (session) => {\n\n        if (!session) {\n            return PythonApi.askForSession()\n        }\n        \n        this.props.setCurrentSession(session)\n        \n    }\n\n    componentDidMount(){\n\n        this.props.setActivePlot(undefined)\n\n        //Add the listener to display or not the plot initializer\n        this.listener = document.addEventListener(\"togglePlotInitializer\", this.togglePlotInitializer)\n\n    }\n\n    componentDidUpdate(){\n\n        let activeTab = _.find(this.props.tabs, [\"id\", this.props.active.tab]) \n        \n        if (!activeTab) return\n\n        //Get the missing plots if there are any\n        activeTab.plots.forEach(plotID => {\n\n            if ( !this.props.plots[plotID] && this.state.loadingPlots.indexOf(plotID) == -1){\n\n                PythonApi.getPlot(plotID)\n                \n            }\n        })\n\n    }\n\n    getNewPlot = () => {\n\n        PythonApi.newPlot({tabID: this.props.active.tab, ...this.state.plotToInitialize})\n        \n        this.togglePlotInitializer()\n\n    }\n\n    togglePlotInitializer = (e) => {\n\n        let currentlyShowing = this.props.active.page == \"plotInitializer\"\n\n        if (e != undefined & e.detail != undefined) {\n            if (e.detail.forceShow &&  !currentlyShowing){\n                this.props.setActivePage(\"plotInitializer\")\n            } if (e.detail.forceHide && currentlyShowing){\n                this.props.setActivePage(\"plots\")\n            }\n        } else {\n            this.props.setActivePage(currentlyShowing ? \"plots\" : \"plotInitializer\")\n        }\n\n    }\n\n    render() {\n\n        const MainComponent = {\n            'plots': PlotDashboard,\n            'settings': Settings,\n            'plotLayoutEditor': PlotEditor,\n            'plotTweaking': PlotTweaking,\n            'plotMethods': PlotMethods,\n            'plotInitializer': PlotInitializer,\n            'moleculeViewer': MoleculeViewer,\n        }[this.props.active.page]\n\n        if (!this.state.connected){\n            return <div style={{height: \"100vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <div style={{ paddingTop: 100 }}>\n                    <div style={{ fontSize: \"2.5em\", fontWeight: \"bold\"}}>We are trying to connect to the sisl API.</div>\n                </div>\n                <NotConnected camera={{ position: [0, 0, 5] }}/>\n                <div style={{ paddingBottom: 100, fontSize: \"1.2em\" }}> Meanwhile you can have fun with these two moving cubes. </div>\n                <ConnectionStatus\n                    connectedProps={{ style: { backgroundColor: \"lightgreen\" } }}\n                    style={{ position: \"absolute\", right: 0, top: 0, margin: 20, width: 40, height: 40, borderRadius: 40, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} />\n                <ToastContainer />\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false} />\n                </div>\n        }\n\n        if(this.props.active.page == 'plotLayoutEditor') {\n            return (\n                <div style={{ marginBottom: 0, display: \"flex\", flexWrap: \"wrap\", height: \"100vh\", position: \"relative\"}}>\n                    <GlobalHotKeys keyMap={{ ...GLOBAL_HOT_KEYS }} handlers={this.hotKeysHandlers} />\n                    <MainComponent />\n                    <Controls style={{position: \"absolute\", bottom: 0, right: 0}}/>\n                    <ToastContainer />\n                    <ConnectionStatus\n                        connectedProps={{ style: { backgroundColor: \"lightgreen\" } }}\n                        style={{ position: \"absolute\", right: 0, top: 0, margin: 20, width: 40, height: 40, borderRadius: 40, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} />\n                    <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false} />\n                </div>\n            )\n        }\n\n        return (\n            <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                <GlobalHotKeys keyMap={{...GLOBAL_HOT_KEYS}} handlers={this.hotKeysHandlers}/>\n                <StructurePicker style={{ paddingLeft: 15, paddingRight: 15, width: \"10vw\", minWidth: 200, borderRight: \"#ccc solid 1px\"}}/>   \n                <div style={{flex: 1, paddingLeft: 20, height: \"100vh\", display: \"flex\", flexDirection: \"column\"}}>\n                    {this.props.active.page == \"plots\" ? <Tabs /> : null}\n                    <MainComponent style={{flex: 1}}/>\n                    <FilesInput/>\n                </div>\n                <Controls />\n                <ToastContainer/>\n                <ConnectionStatus \n                connectedProps={{ style: {backgroundColor: \"lightgreen\"}}}\n                style={{ position: \"absolute\", right: 0, top: 0, margin: 20, width:40, height: 40, borderRadius: 40, display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}/>\n                <ReactTooltip multiline disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    structures: state.session.structures,\n    tabs: state.session.tabs,\n    active: state.active,\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setCurrentSession,\n    setActiveTab,\n    setSessionTabs,\n    setActivePlot,\n    addPlots,\n    setNewStructures,\n    setNewPlotables,\n    setActivePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plots);","import { createStore } from 'redux'\nimport {responsiveStoreEnhancer} from 'redux-responsive'\nimport { persistStore} from 'redux-persist'\n\nimport rootReducer from '../reducers'\n\nexport default () => {\n  let store = createStore(rootReducer, responsiveStoreEnhancer)\n  let persistor = persistStore(store)\n  //persistor.purge()\n  return { store, persistor }\n}","import React from 'react';\nimport './App.css';\n\n//--Redux\nimport getStoreAndPersistor from './redux/store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport Plots from './pages/Plots'\n\nconst {store, persistor} = getStoreAndPersistor()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <div className=\"App\" style={{display: \"flex\", flexDirection: \"column\"}}>\n          <div className = \"appContent\" style={{height: \"100vh\"}}>\n            <Plots/>\n          </div>   \n        </div>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}